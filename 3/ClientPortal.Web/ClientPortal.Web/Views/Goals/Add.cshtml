@model ClientPortal.Web.Models.GoalVM
@{
    List<ClientPortal.Data.Contexts.CakeOffer> offers = ViewBag.Offers;
}

<div id="addGoalWrapper">
    @using (Ajax.BeginForm(new AjaxOptions {HttpMethod = "POST", InsertionMode = InsertionMode.Replace, UpdateTargetId = "addGoalWrapper", OnSuccess = "AddGoalSuccess"}))
    {
        @Html.ValidationSummary(true)

        <fieldset>
            <legend>New Goal</legend>

            <div class="editor-label">
                @Html.LabelFor(model => model.Name)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.TypeId)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.TypeId, new SelectList(Enum.GetValues(typeof(ClientPortal.Web.Models.GoalTypeEnum))))
                @Html.ValidationMessageFor(model => model.TypeId)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.OfferId)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.OfferId, new SelectList(offers, "Offer_Id", "OfferName"))
                @Html.ValidationMessageFor(model => model.OfferId)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.MetricId)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.MetricId, new SelectList(Enum.GetValues(typeof(ClientPortal.Web.Models.MetricEnum))))
                @Html.ValidationMessageFor(model => model.MetricId)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.Target)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Target)
                @Html.ValidationMessageFor(model => model.Target)
            </div>

            <p>
                <input type="submit" value="Create" />
            </p>
        </fieldset>
    }
</div>
