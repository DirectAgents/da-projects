@model ClientPortal.Web.Models.GoalVM
@{
    List<ClientPortal.Data.Contexts.Offer> offers = ViewBag.Offers;
    bool isNewGoal = Model.Id < 0;
}

@Html.HiddenFor(model => model.OfferGoalId, new { id = "OldOfferGoalId" })

<div id="editGoalWrapper">
    @using (Ajax.BeginForm(new AjaxOptions { Url = Url.Action("Save"), HttpMethod = "POST", InsertionMode = InsertionMode.Replace, UpdateTargetId = "editGoalWrapper", OnSuccess = "EditGoalSuccess" }))
    {
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Culture)
        @Html.ValidationSummary(true)

        <fieldset>
            <legend>@(isNewGoal ? "Add" : "Edit") Goal</legend>

            <div class="editor-label">
                @Html.LabelFor(model => model.Name)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.OfferId)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.OfferId, new SelectList(offers, "OfferId", "OfferName"))
                @Html.ValidationMessageFor(model => model.OfferId)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.MetricId)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.MetricId, new SelectList(Enum.GetValues(typeof(ClientPortal.Data.Contexts.GoalMetric))), new { style = "width:auto" })
                @Html.ValidationMessageFor(model => model.MetricId)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.TypeId)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.TypeId, new SelectList(Enum.GetValues(typeof(ClientPortal.Data.Contexts.GoalType))), new { style = "width:auto" })
                @Html.ValidationMessageFor(model => model.TypeId)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.Target)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Target)
                @Html.ValidationMessageFor(model => model.Target)
            </div>

            <div class="editor-label">
                @Html.Label("Timeframe")
            </div>
            <div class="editor-field" style="margin-bottom:5px">
                @Html.RadioButton("timeframeType", "monthly", Model.IsMonthly, new { onclick = "ToggleCustomDateRangeDiv(false)" }) Monthly
                @Html.RadioButton("timeframeType", "custom", !Model.IsMonthly, new { onclick = "ToggleCustomDateRangeDiv(true)" }) Custom Date Range
            </div>
            @{ string customDateRangeVisibility = Model.ShowCustomDateRange ? "" : "display:none;"; }
            <div class="editor-field" id="divCustomDateRange" style="@customDateRangeVisibility">
                <div style="float:left">
                    Start Date: @Html.TextBoxFor(model => model.StartDate, new { id = "goal_StartDate" })
                    @Html.ValidationMessageFor(model => model.StartDate, null, new { style = "margin-top:0px" })
                </div>
                <div style="float:left; margin-left:5px">
                    End Date: @Html.TextBoxFor(model => model.EndDate, new { id = "goal_EndDate" })
                    @Html.ValidationMessageFor(model => model.EndDate, null, new { style = "margin-top:0px" })
                </div>
            </div>
        </fieldset>

        <div style="float:left">
            <input type="submit" value="Save" />
        </div>
        <div style="float:right">
            <input type="button" value="Cancel" onclick="CloseGoalWindow()" />
        </div>
    }
</div>
<script>
    function ToggleCustomDateRangeDiv(show) {
        if (show) {
            $('#divCustomDateRange').show();
        } else {
            $('#divCustomDateRange').hide();
            $('#goal_StartDate').val("");
            $('#goal_EndDate').val("");
        }
    }
</script>