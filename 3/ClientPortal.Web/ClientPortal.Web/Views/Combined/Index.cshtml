@model ClientPortal.Web.Models.CombinedVM
@{
    ViewBag.Title = "Overall Summary";
    var mtd = Model.MTDStat;
    var wtd = Model.WTDStat;
}
<style type="text/css">
    .client_logo_exec {
        background-image: url("@Url.Action("Logo")");
    }
</style>

<div id="client_bar_exec">
    <div id="container">
        <div class="exec_charts">
            @* TODO: Put in separate partial view... *@
            <section>
                <div class="heading"><p>Month to Date: @mtd.StartDate.ToShortDateString() thru @mtd.EndDate.ToShortDateString()</p></div>
                <div class="grid">
                    <table class="grid" cellspacing="0" width="100%">
                        <thead>
                            <tr class="exec">
                                <th>Spend</th>
                                <th>Impressions</th>
                                <th>Clicks</th>
                                <th>CTR</th>
                                <th>eCPC</th>
                                <th>Conversions</th>
                                <th>eCPA</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr class="grey_row">
                                <td>@mtd.Spend.ToString("C")</td>
                                <td>@mtd.Impressions.ToString("N0")</td>
                                <td>@mtd.Clicks.ToString("N0")</td>
                                <td>@mtd.CTR.ToString("0.00%")</td>
                                <td>@mtd.CPC.ToString("C")</td>
                                <td>@mtd.Convs.ToString("N0")</td>
                                <td>@mtd.CPA.ToString("C")</td>
                            </tr>
		                </tbody>
                    </table>
                </div>
            </section>
            <section>
                <div class="heading"><p>Week to Date: @wtd.StartDate.ToShortDateString() thru @wtd.EndDate.ToShortDateString()</p></div>
                <div class="grid">
                    <table class="grid" cellspacing="0" width="100%">
                        <thead>
                            <tr class="exec">
                                <th>Spend</th>
                                <th>Impressions</th>
                                <th>Clicks</th>
                                <th>CTR</th>
                                <th>eCPC</th>
                                <th>Conversions</th>
                                <th>eCPA</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr class="grey_row">
                                <td>@wtd.Spend.ToString("C")</td>
                                <td>@wtd.Impressions.ToString("N0")</td>
                                <td>@wtd.Clicks.ToString("N0")</td>
                                <td>@wtd.CTR.ToString("0.00%")</td>
                                <td>@wtd.CPC.ToString("C")</td>
                                <td>@wtd.Convs.ToString("N0")</td>
                                <td>@wtd.CPA.ToString("C")</td>
                            </tr>
		                </tbody>
                    </table>
                </div>
            </section>
        </div>
        <div class="client_logo_exec"></div>
        <div class="client_name_exec">@Model.UserInfo.ClientName</div>
    </div>
</div>

<div id="page_content">
    <div id="container">
        <div id="page_content_exec">
            <div id="interval" style="margin-bottom: 15px;">
                <label for="daterangeselect">Select a Date Range</label>
                <select id="daterangeselect" name="daterangeselect" onchange="ChangeStats()">
                    <option value="prevyear" selected>Previous Year</option>
                    <option value="mtd">Month to Date</option>
                    <option value="ytd">Year to Date</option>
                </select>
                <label for="intervalselect">Interval: </label>
                <select id="intervalselect" name="intervalselect" onchange="ChangeStats()">
                    <option value="daily" selected>Daily</option>
                    <option value="weekly">Weekly</option>
                    <option value="monthly">Monthly</option>
                </select>
            </div>
            <div id="exec_leftbar">
                <div class="heading"><p>Campaign Metrics</p></div>
                <div class="content_box2">
                    <ul class="exec_leftchart">
                        <li class="axis">
                            <div class="label">Spend</div>
                            <div class="biglabel" id="textSpend"></div>
                        </li>
                        <li>
                            <div class="exec_spark" id="sparkSpend"></div>
                        </li>
                    </ul>
                </div>
                <div class="content_box2">
                    <ul class="exec_leftchart">
                        <li class="axis">
                            <div class="label">Impressions</div>
                            <div class="biglabel" id="textImpressions"></div>
                        </li>
                        <li>
                            <div class="exec_spark" id="sparkImpressions"></div>
                        </li>
                    </ul>
                </div>
                <div class="content_box2">
                    <ul class="exec_leftchart">
                        <li class="axis">
                            <div class="label">Clicks</div>
                            <div class="biglabel" id="textClicks"></div>
                        </li>
                        <li>
                            <div class="exec_spark" id="sparkClicks"></div>
                        </li>
                    </ul>
                </div>
                <div class="content_box2">
                    <ul class="exec_leftchart">
                        <li class="axis">
                            <div class="label">Conversions</div>
                            <div class="biglabel" id="textConversions"></div>
                        </li>
                        <li>
                            <div class="exec_spark" id="sparkConversions"></div>
                        </li>
                    </ul>
                </div>
            </div>
            <div id="exec_right">
                <section>
                    <div class="heading"><p>eCPA Trend</p></div>
                    <div class="content_box">
                        <div id="trendECPA" style="height:205px"></div>
                    </div>
                </section>
            </div>
        </div>
    </div>
</div>

@* TODO: put in div? make closer to bottom blue bar... *@
<div style="clear:both;">
Stats include:
@{
    bool first = true;
}
@if (Model.UserInfo.HasSearch)
{
    <text> Paid Search</text>
    first = false;
}
@if (Model.UserInfo.HasProgrammatic())
{
    <text>@(first ? "" : " | ")Programmatic</text>
    first = false;
}
</div>

@section scripts {
<script>
    $(document).ready(function () {
        var datasource = GetDataSourceMain();
        SetupCharts(datasource);
        datasource.read();
        datasource.bind("change", MainDataSource_OnChange);
    });

    function ChangeStats() {
        var interval = $('#intervalselect').val();
        var daterange = $('#daterangeselect').val();
        var cdatasource = GetDataSourceMain(interval,daterange);
        SetupCharts(cdatasource);
        cdatasource.read();
        cdatasource.bind("change", MainDataSource_OnChange);
    }

@{
    var yesterday = DateTime.Today.AddDays(-1);
    var monthStart = new DateTime(yesterday.Year,yesterday.Month,1);
    var yearStart = new DateTime(yesterday.Year,1,1);
    var lastYear = new DateTime(yesterday.Year - 1, yesterday.Month, yesterday.Day);
}
    function GetDataSourceMain(statInterval, daterange) {
        if (statInterval == null) statInterval = "daily";
        var startDate;
        if (daterange=="mtd") {
            startDate = '@monthStart.ToLongDateString()';
        } else if (daterange == "ytd") {
            startDate = '@yearStart.ToLongDateString()';
        } else {
            startDate = '@lastYear.ToLongDateString()';
        }
        var statLink = '@Url.Action("StatsTemp", new { interval="daily"})';
        statLink = statLink.replace("daily", statInterval);
        statLink += "&startstring=" + startDate;
        return new kendo.data.DataSource({
            transport: {
                read: {
                    type: 'post',
                    dataType: 'json',
                    url: statLink
                }
            },
            schema: {
                data: 'data',
                total: 'total',
                aggregates: 'aggregates',
                model: {
                    id: 'Id',
                    fields: {
                        Date: { type: 'date' }
                        // rest of fields: numbers
                    }
                }
            },
            aggregate: [
                { field: "Spend", aggregate: "sum" },
                { field: "Impressions", aggregate: "sum" },
                { field: "Clicks", aggregate: "sum" },
                { field: "Convs", aggregate: "sum" }
            ]
        });
    }
    function MainDataSource_OnChange() {
        var aggs = this.aggregates();
        if (aggs) {
            $('#textSpend').html(kendo.toString(aggs.Spend.sum, 'C'));
            $('#textImpressions').html(kendo.toString(aggs.Impressions.sum, 'N0'));
            $('#textClicks').html(kendo.toString(aggs.Clicks.sum, 'N0'));
            $('#textConversions').html(kendo.toString(aggs.Convs.sum, 'N0'));
        }
    }

    function SetupCharts(datasource) {
        $("#sparkSpend").kendoSparkline({
            dataSource: datasource,
            autoBind: false,
            chartArea: { background: "transparent" },
            type: "area",
            series: [{ field: "Spend", color: "rgb(13, 141, 214)", tooltip: { format: "{0:C}" } }],
            categoryAxis: { field: "Date" }
        });
        $("#sparkImpressions").kendoSparkline({
            dataSource: datasource,
            autoBind: false,
            chartArea: { background: "transparent" },
            type: "area",
            series: [{ field: "Impressions", color: "rgb(13, 141, 214)", tooltip: { format: "{0:N0}" } }],
            categoryAxis: { field: "Date" }
        });
        $("#sparkClicks").kendoSparkline({
            dataSource: datasource,
            autoBind: false,
            chartArea: { background: "transparent" },
            type: "area",
            series: [{ field: "Clicks", color: "rgb(13, 141, 214)", tooltip: { format: "{0:N0}" } }],
            categoryAxis: { field: "Date" }
        });
        $("#sparkConversions").kendoSparkline({
            dataSource: datasource,
            autoBind: false,
            chartArea: { background: "transparent" },
            type: "area",
            series: [{ field: "Convs", color: "rgb(13, 141, 214)", tooltip: { format: "{0:N0}" } }],
            categoryAxis: { field: "Date" }
        });
        $("#trendECPA").kendoChart({
            dataSource: datasource,
            autoBind: false,
            chartArea: {
                background: "transparent"
            },
            series: [
                { field: "CPA", type: "area", color: "rgb(13, 141, 214)" }
            ],
            categoryAxis: {
                field: "Date",
                labels: { rotation: -90, step: 15 },
                axisCrossingValue: [0, 2000],
                majorGridLines: { visible: false }
            },
            valueAxis: [
                { labels: { format: "C" } }
            ],
            tooltip: {
                visible: true,
                template: "#= kendo.format('{0:d}',category) #: #= kendo.format('{0:C}',value) #"
            }
        });
    }
</script>
}
