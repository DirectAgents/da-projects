@model ClientPortal.Web.Models.OfferGoalSummary
@{
    bool createGoalChart = ViewBag.CreateGoalChart ?? false;
    int numGoals = Model.Goals.Count;

    var today = DateTime.Now.Date;
    string timeframeFormatted = "";
    bool isMonthly = true;
    if (numGoals > 0) {
        var goal0 = Model.Goals[0];
        timeframeFormatted = goal0.TimeframeFormatted();
        isMonthly = goal0.IsMonthly;
    }
}

<!-- Left -->
<div class="six columns">
    <div class="panel" id="goal@(Model.Id)SumPanel" style="min-height: 250px">
        <span class="offergoalsheader">
            <b>Offer: @Model.Offer.OfferName</b>
            @if (!isMonthly)
            {
                <br /><i>Timeframe: @timeframeFormatted</i>
            }
        </span>
        <table class="goaltexttable">
        @for (var i = 0; i < numGoals; i++)
        {
            var goal = Model.Goals[i];
            var dataGoal = goal.TargetBasedOn(Model.SummaryLM);
            var valueFormat = (goal.MetricId == ClientPortal.Web.Models.MetricEnum.Spend ? "C" : "N0");
            var goalString = goal.TargetFormattedBasedOn(Model.SummaryLM);
            //var heading = Model.Offer.OfferName.Replace("'", "");
            var subheading = goal.TimeframeFormatted(false, true);
            string funcPrefix;
            if (goal.IsMonthly)
            {
                var dataLastMonthToDate = goal.ValueFor(Model.SummaryLMTD);
                var dataLastMonthTotal = goal.ValueFor(Model.SummaryLM);
                var dataThisMonthToDate = goal.ValueFor(Model.SummaryMTD);
                funcPrefix = "CreateMonthlyGoalChart([" + dataLastMonthToDate + "," + dataLastMonthTotal + "," + dataThisMonthToDate + "," + dataGoal + "]";
            }
            else
            {
                var dataTimeframe = goal.ValueFor(Model.SummaryCustom);
                funcPrefix = "CreateGoalChart(['" + Model.SummaryCustom.Name + "','Goal'], [" + dataTimeframe + "," + dataGoal + "]";
            }
            goal.CreateGoalChartCall = funcPrefix + ", '" + Model.Id + "', '" + goal.MetricId + "', '" + valueFormat + "', '" + goal.Culture + "', '" + goalString + "', '" + subheading + "');";

            <tr>
                <td class="tdfirst">@(@goal.IsMonthly ? "Monthly" : "Custom") Goal: </td>
                <td style="color: darkblue">@goalString</td>
                <td>
                    @if (numGoals > 1)
                    {
                        <a href="#" onclick="@goal.CreateGoalChartCall; return false">show</a>
                        <text>|</text>
                    }
                    <a href="#" onclick="EditGoal(@goal.Id); return false">edit</a>
                </td>
            </tr>
        }
        </table>
        <table class="summarytable">
            <tr>
                <th style="width: 50%"></th>
                <th>Clicks</th>
                <th>Leads</th>
                <th>Rate</th>
                <th>Spend</th>
            </tr>
            @foreach (var rangesum in Model.DateRangeSummaries)
            {
                <tr>
                    <td>@rangesum.Name</td>
                    <td>@String.Format("{0:n0}", rangesum.Clicks)</td>
                    <td>@String.Format("{0:n0}", rangesum.Conversions)</td>
                    <td>@rangesum.ConversionRate</td>
                    <td>@rangesum.RevenueFormatted</td>
                </tr>
            }
        </table>
    </div>
</div>

<!-- Right -->
<div class="panel six columns" id="goal@(Model.Id)ChartOuter">
    <div id="goal@(Model.Id)ChartHeading"></div>

    <div class="chart-wrapper">
         <div id="goal@(Model.Id)Chart"></div>
    </div>
</div>

<script>
@if (createGoalChart && numGoals > 0)
{
    @Html.Raw(Model.Goals[0].CreateGoalChartCall)
}
</script>
