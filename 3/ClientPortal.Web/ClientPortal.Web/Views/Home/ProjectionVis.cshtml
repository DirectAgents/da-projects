<div class="chart-wrapper">
    <div id="projChart"></div>
</div>

<script>
    function CreateProjectionDataSource(url) {
        return new kendo.data.DataSource({
            transport: {
                read: {
                    type: 'post',
                    dataType: 'json',
                    url: url,
                    data: function () {
                        return {
                            startdate: $('#dash_startdate').val(),
                            enddate: $('#dash_enddate').val()
                        };
                    }
                }
            },
            schema: {
                data: 'data',
                total: 'total',
                aggregates: 'aggregates',
                model: {
                    id: 'Id',
                    fields: {
                        Date: { type: 'date' },
                        Impressions: { type: 'number' },
                        Clicks: { type: 'number' },
                        Conversions: { type: 'number' },
                        ConversionPct: { type: 'number' },
                        Revenue: { type: 'number' },
                        EPC: { type: 'number' }
                    }
                }
            },
            sort: { field: "Date", dir: "asc" },
            serverAggregates: true,
            aggregate: [
                { field: "Date", aggregate: "max" },
                { field: "Date", aggregate: "proj" },
                { field: "Clicks", aggregate: "max" },
                { field: "Clicks", aggregate: "sum" },
                { field: "Conversions", aggregate: "max" },
                { field: "Conversions", aggregate: "sum" },
                { field: "Conversions", aggregate: "proj" },
                { field: "Revenue", aggregate: "max" },
                { field: "Revenue", aggregate: "sum" }
            ],
            requestEnd: function (e) {
                if (e.type == "read") {
                    var infos = e.response.data;
                    for (var i = 0; i < infos.length; i++) {
                        infos[i].Date = infos[i].Date.replace(/\d+/, function (n) {
                            var time = parseInt(n);
                            return parseInt(time) + new Date(time).getTimezoneOffset() * 60000;
                        });
                    }
                }
            }
        });
    }

    function CreateProjectionChart(dataSource, height) {
        $("#projChart").kendoChart({
            dataSource: dataSource,
            autoBind: false,
            chartArea: {
                height: height
            },
            series: [
                {
                    type: "line",
                    field: "Conversions",
                    axis: "leads",
                    markers: { visible: true, size: 5 },
                    dashType: "dot",
                    missingValues: "interpolate"
                }
            ],
            categoryAxis: {
                baseUnit: "days",
                field: "Date",
                labels: { rotation: -90 }
            },
            valueAxis: [
                {
                    name: "leads",
                    labels: { format: "N0", step: 2 },
                    title: { text: "Total Leads" }
                }
            ],
            legend: {
                visible: false
            },
            tooltip: {
                visible: true,
                format: "C",
                template: "#= kendo.format('{0:d}',category) #: #= kendo.format('{0:N0}',value) #"
            }
        });
    }

    function UpdateProjectionChart() {
        var chart = $('#projChart').data('kendoChart');

        var total = chart.dataSource.total();
        chart.options.categoryAxis.labels.step = Math.ceil(total / 31);

        var spark = (total > 62);
        if (spark) {
            //chart.options.valueAxis.majorGridLines.visible = false;
            chart.options.categoryAxis.majorGridLines.visible = false;
            //chart.options.series[0].markers.visible = false;
        } else {
            //chart.options.valueAxis.majorGridLines.visible = true;
            chart.options.categoryAxis.majorGridLines.visible = true;
            //chart.options.series[0].markers.visible = true;
        }
        chart.redraw();
    }
    @* ? same as UpdateSpendLineChart() ? *@
</script>