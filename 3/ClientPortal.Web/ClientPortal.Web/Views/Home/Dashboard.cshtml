@model ClientPortal.Web.Models.DashboardModel
@{
    List<string> firstCreateGoalChartCalls = new List<string>();
    var now = DateTime.Now;
    var firstOfMonthDT = new DateTime(now.Year, now.Month, 1);

    var today = now.ToString("d", Model.CultureInfo);
    var firstOfMonth = firstOfMonthDT.ToString("d", Model.CultureInfo);
    var firstOfYear = new DateTime(now.Year, 1, 1).ToString("d", Model.CultureInfo);
    var firstOfLastMonth = firstOfMonthDT.AddMonths(-1).ToString("d", Model.CultureInfo);
    var lastOfLastMonth = firstOfMonthDT.AddDays(-1).ToString("d", Model.CultureInfo);
}

<div class="row">
    <div class="six columns">
        <div class="panel">
            <b>Summary Report</b>
            <table>
                <tr>
                    <th></th>
                    <th>Clicks</th>
                    <th>Leads</th>
                    <th>&nbsp;Spend</th>
                </tr>
                @foreach (var summary in Model.AdvertiserSummaries)
                {
                    <tr>
                        <td>@summary.Name</td>
                        <td>@String.Format("{0:n0}", summary.Clicks)</td>
                        <td>@String.Format("{0:n0}", summary.Conversions)</td>
                        <td>@summary.RevenueFormatted</td>
                    </tr>
                }
            </table>
        </div>
    </div>

    <div class="six columns panel" id="perfChartOuter">
        <b>Performance This Month vs. Prior: Leads</b>
        @Html.Partial("PerformanceVis")
    </div>
</div>

<div class="row">
    <div class="six columns">
        <div class="panel" id="spendChartOuter">
            <b>Budget</b>
            @Html.Partial("SpendVis")
        </div>
    </div>
    <div class="six columns panel">
        <div id="weeklySpendBarChartOuter">
            <b>Budget Spent Month to Date</b>
            <a href="#" onclick="ShowSpendYTD(); return false">Switch to YTD</a>
            <div class="chart-wrapper">
                <div id="weeklySpendBarChart"></div>
            </div>
        </div>
        <div id="monthlySpendBarChartOuter" style="display: none">
            <b>Budget Spent Year to Date</b>
            <a href="#" onclick="ShowSpendMTD(); return false">Switch to MTD</a>
            <div class="chart-wrapper">
                <div id="monthlySpendBarChart"></div>
            </div>
        </div>
    </div>
</div>

@foreach (var offersum in Model.OfferGoalSummaries)
{
    <div class="row">
        <div class="six columns">
            <div class="panel">
                <b>Offer: @offersum.Offer.OfferName</b><br />
                @for (var i = 0; i < offersum.Goals.Count; i++)
                {
                    var goal = offersum.Goals[i];
                    var dataLastMonthToDate = goal.ValueFor(offersum.SummaryLMTD);
                    var dataLastMonthTotal = goal.ValueFor(offersum.SummaryLM);
                    var dataThisMonthToDate = goal.ValueFor(offersum.SummaryMTD);
                    var dataGoal = goal.TargetBasedOn(offersum.SummaryLM);
                    var valueFormat = (goal.MetricId == ClientPortal.Web.Models.MetricEnum.Spend ? "C" : "N0");
                    var goalString = goal.TargetFormattedBasedOn(offersum.SummaryLM);
                    //var heading = offersum.Offer.OfferName.Replace("'", "");
                    var createGoalChartCall = "CreateGoalChart('" + offersum.Offer.Offer_Id + "', '" + goal.MetricId + "', [" + dataLastMonthToDate + "," + dataLastMonthTotal + "," + dataThisMonthToDate + "," + dataGoal + "], '" + valueFormat + "', '" + goal.Culture + "', '" + goalString + "')";
                    if (i == 0) { firstCreateGoalChartCalls.Add(createGoalChartCall); }

                    @("Custom Goal: " + goalString)
                    <a href="#" onclick="@createGoalChartCall; return false">(show)</a>
                    <br />
                }
                <table>
                    <tr>
                        <th></th>
                        <th>Clicks</th>
                        <th>Leads</th>
                        <th>Spend</th>
                    </tr>
                    @foreach (var rangesum in offersum.DateRangeSummaries)
                    {
                        <tr>
                            <td>@rangesum.Name</td>
                            <td>@String.Format("{0:n0}", rangesum.Clicks)</td>
                            <td>@String.Format("{0:n0}", rangesum.Conversions)</td>
                            <td>@rangesum.RevenueFormatted</td>
                        </tr>
                    }
                </table>
            </div>
        </div>

        <div class="panel six columns" id="goal@(offersum.Offer.Offer_Id)ChartOuter">
            @Html.Partial("GoalVis", offersum.Offer.Offer_Id.ToString())
        </div>
    </div>
}

<div class="row">
    <div class="six columns">
        <div class="panel" id="heatMapOuter">
            <b>Conversions by State</b>
            @Html.Partial("_HeatMap")
        </div>
    </div>
</div>

<script>
    $(function () {
        @foreach (var call in firstCreateGoalChartCalls) {
            <text>@Html.Raw(call);</text>
        }
        CreatePerformanceChart([@Model.SummaryLM.Conversions, @Model.SummaryMTD.Conversions], 'N0', '@Model.Culture', 180)
        CreateSpendChart([@Model.SummaryMTD.Revenue], 'C0', '@Model.Culture', 'MTD Spend', 75);

        var spendDS = CreateDailySpendDataSource('@Url.Action("DailySummaryData", "Reports")', '@firstOfMonth', '@today');
        //var spendDS = CreateDailySpendDataSource('@Url.Action("DailySummaryData", "Reports")', '@firstOfLastMonth', '@lastOfLastMonth');
        CreateSpendLineChart(spendDS, 'Daily Spend', 125);
        CreateWeeklySpendBarChart('weeklySpendBarChart', spendDS, 200);
        spendDS.read();

        var monthlySpendDS = CreateMonthlySpendDataSource('@Url.Action("MonthlySummaryData", "Reports")', '@firstOfYear', '@today');
        CreateMonthlySpendBarChart('monthlySpendBarChart', monthlySpendDS, 200);
        monthlySpendDS.read();
    });

    function ResizeDashboardCharts() {
        ResizeDashboardChart('perf', true);
        ResizeDashboardChart('spend', true);
        ResizeDashboardChart('weeklySpendBar', true);
        ResizeDashboardChart('monthlySpendBar', true);
        @foreach (var offersum in Model.OfferGoalSummaries)
        {
            <text>ResizeDashboardChart('goal@(offersum.Offer.Offer_Id)', true);</text>
        }
    }

    function ResizeDashboardChart(chart, refresh) {
        if ($('#' + chart + 'ChartOuter').length > 0) {
            var w = $('#' + chart + 'ChartOuter').width();
            if (w > 0) {
                $('#' + chart + 'ChartOuter .chart-wrapper').css('width', w);
                if (refresh) {
                    $('#' + chart + 'Chart').data('kendoChart').refresh();
                    if (chart == 'spend')
                        $('#' + chart + 'LineChart').data('kendoChart').refresh();
                }
            }
        }
    }

    function ShowSpendMTD() {
        $('#monthlySpendBarChartOuter').hide();
        $('#weeklySpendBarChartOuter').show();
        ResizeDashboardChart('weeklySpendBar', true);
    }
    function ShowSpendYTD() {
        $('#weeklySpendBarChartOuter').hide();
        $('#monthlySpendBarChartOuter').show();
        ResizeDashboardChart('monthlySpendBar', true);
    }

    function CreateGoalChart(offerid, metric, values, valueFormat, culture, heading) {
        $('#goal' + offerid + 'ChartHeading').html('<b>' + heading + '</b>');
        kendo.culture(culture);
        $('#goal' + offerid + 'Chart').kendoChart({
            chartArea: {
                height: 186
            },
            legend: {
                visible: false
            },
            seriesDefaults: {
                type: "column"
            },
            series: [{
                name: metric,
                data: values
            }],
            valueAxis: {
                labels: { format: valueFormat, step: 2 },
                title: { text: metric }
            },
            categoryAxis: {
                categories: ["Last Month-to-Date", "Last Month-Total", "This Month-to-Date", "Goal"]
            },
            tooltip: {
                visible: true,
                format: valueFormat
            }
        });
    }
</script>