@model ClientPortal.Web.Models.IndexModel

@{
    var now = DateTime.Now;
    var sunday = now;
    while (sunday.DayOfWeek != DayOfWeek.Sunday) { sunday = sunday.AddDays(-1); }
    var firstOfMonthDT = new DateTime(now.Year, now.Month, 1);

    var today = now.ToShortDateString();
    var yesterday = now.AddDays(-1).ToShortDateString();
    var firstOfMonth = firstOfMonthDT.ToShortDateString();
    var firstOfYear = new DateTime(now.Year, 1, 1).ToShortDateString();
    var firstOfLastMonth = firstOfMonthDT.AddMonths(-1).ToShortDateString();
    var lastOfLastMonth = firstOfMonthDT.AddDays(-1).ToShortDateString();
    var firstOfWeek = sunday.ToShortDateString();
    var firstOfLastWeek = sunday.AddDays(-7).ToShortDateString();
    var lastOfLastWeek = sunday.AddDays(-1).ToShortDateString();

    var todayMY = now.ToString("MM/yyyy");
    var lastMonthMY = firstOfMonthDT.AddMonths(-1).ToString("MM/yyyy");
    var threeMonthsAgoMY = firstOfMonthDT.AddMonths(-3).ToString("MM/yyyy");
    var firstOfYearMY = new DateTime(now.Year, 1, 1).ToString("MM/yyyy");
}
<div class="row">
    <div class="six columns toplogo">
        <img src="~/Images/logo1.png" />
    </div>
    <div class="three columns topinfo">
        @Html.Partial("_HelloPartial")
    </div>
    <div class="three columns logout">
        <div style="float: right">
            @Html.Partial("_LoginPartial")
        </div>
    </div>
</div>
<div class="row">
    <div class="twelve columns grayband">
    </div>
</div>
<div class="row">
    <div class="two columns portaltabs-v">
        <dl class="vertical tabs">
            <dd class="active"><a href="#vertical1" id="vertNav_Dashboard">Dashboard</a></dd>
            <dd><a href="#vertical2" id="vertNav_Reports">Reports</a></dd>
            <dd><a href="#vertical3" id="vertNav_MyAccount">My Account</a></dd>
            <dd><a href="#vertical4" id="vertNav_Notifications">Notifications</a></dd>
        </dl>
        <div>
            <h5>Account Manager</h5>
            @(Model.Advertiser != null ? Model.Advertiser.AccountManagerName : "")
            <br /><a href="mailto:abc@directagents.com">abc@directagents.com</a>
        </div>
    </div>
    <ul class="tabs-content">
        <li id="vertical1Tab" class="active">
            <div id="divDashboard" class="ten columns"></div>
        </li>
        <li id="vertical2Tab">
            <div class="ten columns portaltabs-h">
                <dl class="tabs">
                    <dd class="active"><a href="#repPerformance" id="repNav_Performance">Performance</a></dd>
                    <dd><a href="#repOffSum" id="repNav_OffSum">Offer Summary</a></dd>
                    <dd><a href="#repDaySum" id="repNav_DaySum">Daily Summary</a></dd>
                    <dd><a href="#repConversions" id="repNav_Conversions">Conversion Report</a></dd>
                    <dd><a href="#repCPM" id="repNav_CPM">CPM</a></dd>
                </dl>
                <ul class="tabs-content">
                    <li id="repPerformanceTab" class="active"></li>
                    <li id="repOffSumTab"></li>
                    <li id="repDaySumTab"></li>
                    <li id="repConversionsTab"></li>
                    <li id="repCPMTab"></li>
                </ul>
            </div>
        </li>
        <li id="vertical3Tab">
            <div class="ten columns portaltabs-h">
                <dl class="tabs">
                    <dd class="active"><a href="#goals" id="navGoals">Goals</a></dd>
                    <dd><a href="#files" id="navFiles">Files</a></dd>
                    <dd><a href="#invoices" id="navInvoices">Invoices</a></dd>
                    <dd><a href="#contact" id="navContact">Contact</a></dd>
                </dl>
                <ul class="tabs-content">
                    <li id="goalsTab" class="active"><div id="divGoals"></div></li>
                    <li id="filesTab"><div id="divFiles"></div></li>
                    <li id="invoicesTab"><div id="divInvoices"></div></li>
                    <li id="contactTab"><div id="divContact"></div></li>
                </ul>
            </div>
        </li>
        <li id="vertical4Tab"><h3>Notifications</h3></li>
    </ul>
</div>
<footer class="row">
    <div class="twelve columns">
        <div class="row">
            <div class="six columns">
                <p>&copy; 2013 Direct Agents</p>
            </div>
            <div class="six columns">
            </div>
        </div>
    </div>
</footer>

@section head {
    <link href="~/Content/kendo/2012.3.1114/kendo.common.min.css" rel="stylesheet" />
    <link href="~/Content/kendo/2012.3.1114/kendo.bootstrap.min.css" rel="stylesheet" />
    <link href="~/Content/index.css" rel="stylesheet" />
}

@section scripts {
    <script src="~/Scripts/kendo/2012.3.1114/kendo.all.min.js"></script>
    <script src="~/Scripts/kendo/2012.3.1114/cultures/kendo.culture.de-DE.min.js"></script>
    <script src="~/Scripts/kendo/2012.3.1114/cultures/kendo.culture.en-GB.min.js"></script>
    <script src="~/Scripts/kendo/2012.3.1114/cultures/kendo.culture.en-AU.min.js"></script>
    <script>
        $(function () {
            LoadDashboard();
            SetupTabs();
            $(window).bind('resize', WindowResize);
        });

        function LoadDashboard() {
            $.ajax({
                url: '@Url.Action("Dashboard")',
                cache: false
            }).done(function (html) {
                $("#divDashboard").html(html);
            });
        }

        function DateChanged(grid) {
            $('#' + grid + '_dateRangeSel').val('custom');
            $('#' + grid + '_filterBtn').attr('disabled', false);
        }

        function ChangeDateRange(grid) {
            var startId = '#' + grid + '_startdate';
            var endId = '#' + grid + '_enddate';
            var refresh = true;
            var dateRange = $('#' + grid + '_dateRangeSel').val();
            switch (dateRange) {
                case "today":
                    $(startId).val('@today');
                    $(endId).val('@today');
                    break;
                case "yesterday":
                    $(startId).val('@yesterday');
                    $(endId).val('@yesterday');
                    break;
                case "wtd":
                    $(startId).val('@firstOfWeek');
                $(endId).val('@today');
                break;
            case "mtd":
                $(startId).val('@firstOfMonth');
                $(endId).val('@today');
                break;
            case "ytd":
                $(startId).val('@firstOfYear');
                $(endId).val('@today');
                break;
            case "lastweek":
                $(startId).val('@firstOfLastWeek');
                $(endId).val('@lastOfLastWeek');
                break;
            case "lastmonth":
                $(startId).val('@firstOfLastMonth');
                $(endId).val('@lastOfLastMonth');
                break;
            default:
                refresh = false;
        }
        if (refresh)
            RefreshGrid(grid);
    }
    function ChangeDateRangeMY(grid) {
        var startId = '#' + grid + '_startdate';
        var endId = '#' + grid + '_enddate';
        var refresh = true;
        var dateRange = $('#' + grid + '_dateRangeSel').val();
        switch (dateRange) {
            case "prev3months":
                $(startId).val('@threeMonthsAgoMY');
                $(endId).val('@lastMonthMY');
                break;
            case "lastmonth":
                $(startId).val('@lastMonthMY');
                $(endId).val('@lastMonthMY');
                break;
            case "ytd":
                $(startId).val('@firstOfYearMY');
                $(endId).val('@todayMY');
                break;
            default:
                refresh = false;
        }
        if (refresh)
            RefreshGrid(grid);
    }

    function RefreshGrid(grid) {
        var gridDataSource = $('#' + grid + 'Grid').data('kendoGrid').dataSource;
        gridDataSource.read();
        if ($('#' + grid + 'Chart').length > 0) {
            var chartDataSource = $('#' + grid + 'Chart').data('kendoChart').dataSource;
            if (chartDataSource !== gridDataSource)
                chartDataSource.read();
        }
        $('#' + grid + '_filterBtn').attr('disabled', true);
    }

    function WindowResize() {
        ResizeDashboardCharts();
        ResizeChart('offsum', true);
        ResizeChart('daysum', true);
        ResizeChart('conrep', true);
    }

    function ResizeChart(chart, refresh) {
        var offset = 0;
        if (chart == 'daysum') offset = 225;

        if ($('#' + chart + 'ChartSection').length > 0) {
            var w = $('#' + chart + 'ChartSection').width();
            if (w > 0) {
                $('#' + chart + 'ChartSection .chart-wrapper').css('width', w - offset);
                if (refresh)
                    $('#' + chart + 'Chart').data('kendoChart').refresh();
            }
        }
    }

    function SetupTabs() {
        @* Dashboard *@
        $("#vertNav_Dashboard").click(function () {
            LoadDashboard();
        });
        
        @* My Account *@
        $("#vertNav_MyAccount").one("click", function () {
            $.ajax({
                url: '@Url.Action("Index", "Goals")',
                cache: false
            }).done(function(html) {
                $("#divGoals").html(html);
            });
        });
        $("#navFiles").one("click", function () {
            $.ajax({
                url: '@Url.Action("Index", "Files")',
                cache: false
            }).done(function (html) {
                $("#divFiles").html(html);
            });
        });
        $("#navInvoices").click(function () {
            $.ajax({
                url: '@Url.Action("Index", "Invoices")',
                cache: false
            }).done(function (html) {
                $("#divInvoices").html(html);
            });
        });
        $("#navContact").one("click", function () {
            $("#divContact").html('Loading...');
            $.ajax({
                url: '@Url.Action("Contact", "Home")',
                cache: false
            }).done(function (html) {
                $("#divContact").html(html);
            });
        });


        @* Reports *@
        $("#repNav_OffSum").click(function () {
            if ($('#offsumChart').length == 0) {
                $.ajax({
                    url: '@Url.Action("OfferSummaryPartial", "Reports")',
                    cache: false
                }).done(function (html) {
                    $("#repOffSumTab").html(html);
                    ResizeChart('offsum', false);
                    SetupOfferSummaryGrid();
                });
            } else {
                setTimeout(function () { ResizeChart('offsum', true); }, 100);
            }
        });
        $("#repNav_DaySum").click(function () {
            if ($('#daysumChart').length == 0) {
                $.ajax({
                    url: '@Url.Action("DailySummaryPartial", "Reports")',
                    cache: false
                }).done(function (html) {
                    $("#repDaySumTab").html(html);
                    ResizeChart('daysum', false);
                    SetupDailySummaryGrid();
                });
            } else {
                setTimeout(function () { ResizeChart('daysum', true); }, 100);
            }
        });
        $("#repNav_Conversions").click(function () {
            if ($('#conrepChart').length == 0) {
                $.ajax({
                    url: '@Url.Action("ConversionReportPartial", "Reports")',
                    cache: false
                }).done(function (html) {
                    $("#repConversionsTab").html(html);
                    ResizeChart('conrep', false);
                    SetupConversionReportGrid();
                });
            } else {
                setTimeout(function () { ResizeChart('conrep', true); }, 100);
            }
        });
        $("#repNav_CPM").one("click", function () {
            $.ajax({
                url: '@Url.Action("CPMSummaryPartial", "Reports")',
                cache: false
            }).done(function (html) {
                $("#repCPMTab").html(html);
                SetupCPMSummaryGrid();
            });
        });
    }

            function FormatCurr(val, culture) {
                kendo.culture(culture);
                return kendo.toString(val, "c");
            }

            function CreateOfferSummaryDataSource() {
                return new kendo.data.DataSource({
                    serverPaging: true,
                    serverSorting: true,
                    serverFiltering: true,
                    serverAggregates: true,
                    pageSize: 20,
                    transport: {
                        read: {
                            type: 'post',
                            dataType: 'json',
                            url: '@Url.Action("OfferSummaryData", "Reports")',
                            data: function () {
                                return {
                                    startdate: $('#offsum_startdate').val(),
                                    enddate: $('#offsum_enddate').val()
                                };
                            }
                        }
                    },
                    schema: {
                        data: 'data',
                        total: 'total',
                        aggregates: 'aggregates',
                        model: {
                            id: 'OfferId',
                            fields: {
                                Name: { type: 'string' },
                                Format: { type: 'string' },
                                Price: { type: 'number' },
                                Clicks: { type: 'number' },
                                Conversions: { type: 'number' },
                                Revenue: { type: 'number' },
                            }
                        }
                    },
                    sort: { field: "Revenue", dir: "desc" },
                    aggregate: [
                        { field: "Clicks", aggregate: "sum" },
                        { field: "Conversions", aggregate: "sum" },
                        { field: "Revenue", aggregate: "sum" }
                    ]
                });
            }
            function SetupOfferSummaryGrid() {

                var dataSource = CreateOfferSummaryDataSource();

                $('#offsumGrid').kendoGrid({
                    dataSource: dataSource,
                    autoBind: false,
                    height: 400,
                    columns: [
                        { field: 'OfferId', title: 'Id', width: 60, attributes: { style: "text-align: right" } },
                        { field: 'Name', title: 'Offer' },
                        { field: 'Format', width: 80 },
                        { field: 'Price', width: 70, template: '#= FormatCurr(Price, Culture) #', attributes: { style: "text-align: right" } },
                        { field: 'Clicks', width: 90, format: '{0:n0}', attributes: { style: "text-align: right" }, footerTemplate: "#= kendo.toString(sum, 'n0') #", footerAttributes: { style: "font-weight: bold; text-align: right" } },
                        { field: 'Conversions', title: 'Leads', width: 70, format: '{0:n0}', attributes: { style: "text-align: right" }, footerTemplate: "#= kendo.toString(sum, 'n0') #", footerAttributes: { style: "font-weight: bold; text-align: right" } },
                        { field: 'Revenue', title: 'Total', width: 100, template: '#= FormatCurr(Revenue, Culture) #', attributes: { style: "text-align: right" }, footerTemplate: "#= kendo.toString(sum, 'c') #", footerAttributes: { style: "font-weight: bold; text-align: right" } },
                    ],
                    filterable: true,
                    sortable: {
                        mode: 'multiple'
                    },
                    pageable: true,
                    detailInit: OffSumDetailInit
                });
                $('#offsum_startdate').kendoDatePicker();
                $('#offsum_enddate').kendoDatePicker();
                CreateOffSumChart(dataSource);
                dataSource.read();
            }
            function CreateOffSumChart(dataSource) {
                $("#offsumChart").kendoChart({
                    dataSource: dataSource,
                    autoBind: false,
                    chartArea: {
                        height: 200
                    },
                    theme: $(document).data("kendoSkin") || "default",
                    title: {
                        text: ""
                    },
                    series: [
                        { field: "Conversions", name: "Leads" }
                    ],
                    categoryAxis: {
                        field: "OfferId",
                        labels: { template: "#= value #" }
                    },
                    tooltip: {
                        visible: true,
                        format: "N0"
                    }
                });
            }
            function OffSumDetailInit(e) {
                var readData = function () {
                    return {
                        startdate: $('#offsum_startdate').val(),
                        enddate: $('#offsum_enddate').val(),
                        offerid: e.data.OfferId
                    };
                }
                var dataSource = CreateConversionReportDataSource(readData);

                $("<div/>").appendTo(e.detailCell).kendoGrid({
                    dataSource: dataSource,
                    columns: [
                        { field: 'ConversionId', title: 'Conv ID', width: 90 },
                        { field: 'Date', width: 190, format: '{0:G}' },
                        { field: 'AffId', title: 'sub_id', width: 80 },
                        { field: 'PriceReceived', title: 'Price', width: 100, template: '#= FormatCurr(PriceReceived, Culture) #', attributes: { style: "text-align: right" }, footerTemplate: "#= kendo.toString(sum, 'c') #", footerAttributes: { style: "font-weight: bold; text-align: right" } },
                        { field: 'TransactionId', title: 'Trans ID' }
                    ],
                    sortable: {
                        mode: 'multiple'
                    },
                    pageable: true,
                    scrollable: false
                });
            }

            function CreateDailySummaryDataSource() {
                return new kendo.data.DataSource({
                    serverPaging: true,
                    serverSorting: true,
                    serverFiltering: true,
                    serverAggregates: true,
                    pageSize: 100,
                    transport: {
                        read: {
                            type: 'post',
                            dataType: 'json',
                            url: '@Url.Action("DailySummaryData", "Reports")',
                            data: function () {
                                return {
                                    startdate: $('#daysum_startdate').val(),
                                    enddate: $('#daysum_enddate').val()
                                };
                            }
                        }
                    },
                    schema: {
                        data: 'data',
                        total: 'total',
                        aggregates: 'aggregates',
                        model: {
                            id: 'Id',
                            fields: {
                                Date: { type: 'date' },
                                Impressions: { type: 'number' },
                                Clicks: { type: 'number' },
                                Conversions: { type: 'number' },
                                ConversionPct: { type: 'number' },
                                Revenue: { type: 'number' },
                                EPC: { type: 'number' }
                            }
                        }
                    },
                    sort: { field: "Date", dir: "asc" },
                    aggregate: [
                        { field: "Impressions", aggregate: "sum" },
                        { field: "Clicks", aggregate: "sum" },
                        { field: "Conversions", aggregate: "sum" },
                        { field: "ConversionPct", aggregate: "agg" },
                        { field: "Revenue", aggregate: "sum" },
                        { field: "EPC", aggregate: "agg" }
                    ]
                });
            }
            function SetupDailySummaryGrid() {

                var dataSource = CreateDailySummaryDataSource();

                $('#daysumGrid').kendoGrid({
                    dataSource: dataSource,
                    autoBind: false,
                    height: 400,
                    columns: [
                        { field: 'Date', width: 60, format: '{0:d}' },
                        { field: 'Impressions', width: 70, format: '{0:n0}', attributes: { style: "text-align: right" }, footerTemplate: "#= kendo.toString(sum, 'n0') #", footerAttributes: { style: "font-weight: bold; text-align: right" } },
                        { field: 'Clicks', width: 90, format: '{0:n0}', attributes: { style: "text-align: right" }, footerTemplate: "#= kendo.toString(sum, 'n0') #", footerAttributes: { style: "font-weight: bold; text-align: right" } },
                        { field: 'Conversions', title: 'Leads', width: 70, format: '{0:n0}', attributes: { style: "text-align: right" }, footerTemplate: "#= kendo.toString(sum, 'n0') #", footerAttributes: { style: "font-weight: bold; text-align: right" } },
                        { field: 'ConversionPct', title: 'Conv Pct', width: 90, format: '{0:p1}', attributes: { style: "text-align: right" }, footerTemplate: "#= kendo.toString(agg, 'p') #", footerAttributes: { style: "font-weight: bold; text-align: right" } },
                        { field: 'Revenue', title: 'Spend', width: 100, template: '#= FormatCurr(Revenue, Culture) #', attributes: { style: "text-align: right" }, footerTemplate: "#= kendo.toString(sum, 'c') #", footerAttributes: { style: "font-weight: bold; text-align: right" } },
                        { field: 'EPC', title: 'Per Click', width: 90, template: '#= FormatCurr(EPC, Culture) #', attributes: { style: "text-align: right" }, footerTemplate: "#= kendo.toString(agg, 'c') #", footerAttributes: { style: "font-weight: bold; text-align: right" } }
                    ],
                    filterable: false,
                    sortable: false,
                    pageable: true
                    //dataBinding: function (e) {
                    //    var data = $('#dailySummaryGrid').data("kendoGrid").dataSource.data();
                    //    if (data.length > 0)
                    //        $('#dailySummaryGrid').data("culture", data[0].Culture); // TODO: include it in the json returned, like "total"
                    //    // retrieve with $('#dailySummaryGrid').data("culture");
                    //}
                });
                $('#daysum_startdate').kendoDatePicker();
                $('#daysum_enddate').kendoDatePicker();
                CreateDaySumChart(dataSource);
                dataSource.read();
                $(".configuration").bind("change", RefreshDaySumChart);
            }
            function CreateDaySumChart(dataSource) {
                $("#daysumChart").kendoChart({
                    dataSource: dataSource,
                    autoBind: false,
                    chartArea: {
                        height: 200
                    },
                    theme: $(document).data("kendoSkin") || "default",
                    title: {
                        text: ""
                    },
                    series: [
                        { type: "line", aggregate: "sum", field: "Clicks", name: "Clicks", axis: "clicks" },
                        { type: "line", aggregate: "sum", field: "Revenue", name: "Spend", axis: "spend", tooltip: { format: "C" } }
                    ],
                    categoryAxis: {
                        baseUnit: "days",
                        field: "Date",
                        labels: { rotation: -90 },
                        axisCrossingValue: [0, 1000]
                    },
                    valueAxis: [
                        { name: "clicks", labels: { format: "N0" } },
                        { name: "spend", labels: { format: "C" } }
                    ],
                    tooltip: {
                        visible: true,
                        format: "N0"
                    }
                });
            }
            function RefreshDaySumChart() {
                var chart = $("#daysumChart").data("kendoChart"),
                    categoryAxis = chart.options.categoryAxis,
                    baseUnitInputs = $("input:radio[name=baseUnit]");

                categoryAxis.baseUnit = baseUnitInputs.filter(":checked").val();

                chart.refresh();
            }

            function CreateConversionReportDataSource(readData) {
                return new kendo.data.DataSource({
                    serverPaging: true,
                    serverSorting: true,
                    serverFiltering: true,
                    serverAggregates: true,
                    pageSize: 50,
                    transport: {
                        read: {
                            type: 'post',
                            dataType: 'json',
                            url: '@Url.Action("ConversionReportData", "Reports")',
                            data: readData
                        }
                    },
                    schema: {
                        data: 'data',
                        total: 'total',
                        aggregates: 'aggregates',
                        model: {
                            id: 'ConversionId',
                            fields: {
                                Date: { type: 'date' },
                                AffId: { type: 'number' },
                                OfferId: { type: 'number' },
                                Offer: { type: 'string' },
                                PriceReceived: { type: 'number' },
                                TransactionId: { type: 'string' },
                                Positive: { type: 'boolean' }
                            }
                        }
                    },
                    sort: [
                        { field: "Offer", dir: "asc" },
                        { field: "Date", dir: "asc" }
                    ],
                    aggregate: [
                        { field: "PriceReceived", aggregate: "sum" }
                    ]
                });
            }
            function SetupConversionReportGrid() {

                var readData = function () {
                    return {
                        startdate: $('#conrep_startdate').val(),
                        enddate: $('#conrep_enddate').val()
                    };
                }
                var dataSource = CreateConversionReportDataSource(readData);

                $('#conrepGrid').kendoGrid({
                    dataSource: dataSource,
                    height: 400,
                    columns: [
                        { field: 'ConversionId', title: 'Conv ID', width: 90 },
                        { field: 'Date', width: 190, format: '{0:G}' },
                        { field: 'OfferId', width: 80 },
                        { field: 'Offer' },
                        { field: 'AffId', title: 'sub_id', width: 80 },
                        { field: 'PriceReceived', title: 'Price', width: 100, template: '#= FormatCurr(PriceReceived, Culture) #', attributes: { style: "text-align: right" }, footerTemplate: "#= kendo.toString(sum, 'c') #", footerAttributes: { style: "font-weight: bold; text-align: right" } },
                        { field: 'Positive', title: 'Sale?', width: 80 },
                        { field: 'TransactionId', title: 'Trans ID', width: 170 }
                    ],
                    filterable: true,
                    sortable: {
                        mode: 'multiple'
                    },
                    pageable: true
                });

                $('#conrep_startdate').kendoDatePicker();
                $('#conrep_enddate').kendoDatePicker();
                setTimeout(function () { CreateConversionReportChart(); }, 400);
            }

            function CreateConversionReportChart() {
                var readData = function () {
                    return {
                        startdate: $('#conrep_startdate').val(),
                        enddate: $('#conrep_enddate').val()
                    };
                }
                var dataSource = CreateConversionSummaryDataSource(readData);

                $("#conrepChart").kendoChart({
                    chartArea: {
                        height: 200
                    },
                    theme: $(document).data("kendoSkin") || "default",
                    title: {
                        text: ""
                    },
                    dataSource: dataSource,
                    series: [
                        { field: "Count", name: "Conversions" },
                        { field: "PositiveCount", name: "Sales" }
                    ],
                    categoryAxis: {
                        field: "OfferId",
                        labels: { template: "#= value #" }
                    },
                    tooltip: {
                        visible: true,
                        format: "N0"
                    }
                });
            }

            function CreateConversionSummaryDataSource(readData) {
                return new kendo.data.DataSource({
                    //            serverPaging: true,
                    //            serverSorting: true,
                    serverFiltering: true,
                    //            serverAggregates: true,
                    //            pageSize: 50,
                    transport: {
                        read: {
                            type: 'post',
                            dataType: 'json',
                            url: '@Url.Action("ConversionSummaryData", "Reports")',
                            data: readData
                        }
                    },
                    schema: {
                        data: 'data',
                        total: 'total',
                        //                aggregates: 'aggregates',
                        model: {
                            id: 'OfferId',
                            fields: {
                                OfferName: { type: 'string' },
                                Count: { type: 'number' },
                                PositiveCount: { type: 'number' },
                                Revenue: { type: 'number' },
                                TransactionId: { type: 'string' },
                                Positive: { type: 'boolean' }
                            }
                        }
                    },
                    sort: [
                        { field: "Count", dir: "desc" }
                    ],
                    //            aggregate: [
                    //                { field: "PriceReceived", aggregate: "sum" }
                    //            ]
                });
            }

            function CreateCPMSummaryDataSource() {
                return new kendo.data.DataSource({
                    //            serverPaging: true,
                    //            serverSorting: true,
                    serverFiltering: true,
                    //            serverAggregates: true,
                    //            pageSize: 20,
                    transport: {
                        read: {
                            type: 'post',
                            dataType: 'json',
                            url: '@Url.Action("CPMSummaryData", "Reports")',
                    data: function () {
                        return {
                            startdate: $('#cpmsum_startdate').val(),
                            enddate: $('#cpmsum_enddate').val()
                        };
                    }
                }
            },
            //group: {
            //    field: "Period", aggregates: [
            //        { field: "Revenue", aggregate: "sum" }
            //    ]
            //},
            schema: {
                data: 'data',
                total: 'total',
                //                aggregates: 'aggregates',
                model: {
                    id: 'Id',
                    fields: {
                        Period: { type: 'date' },
                        OfferId: { type: 'number' },
                        Offer: { type: 'string' },
                        Revenue: { type: 'number' },
                        AccountingStatusId: { type: 'number' },
                        AccountingStatusName: { type: 'string' }
                    }
                }
            },
            sort: [
                { field: "Offer", dir: "asc" },
                { field: "Period", dir: "asc" }
            ],
            aggregate: [
                { field: "Revenue", aggregate: "sum" }
            ]
        });
    }
    function SetupCPMSummaryGrid() {

        var dataSource = CreateCPMSummaryDataSource();

        $('#cpmsumGrid').kendoGrid({
            dataSource: dataSource,
            height: 400,
            columns: [
                {
                    field: 'OfferId', title: 'Id', width: 90, attributes: { style: "text-align: right" }
                },
                {
                    field: 'Offer',
                    groupFooterTemplate: "<b>Group Total.....</b>",
                    footerTemplate: "TOTAL", footerAttributes: { style: "font-weight: bold" }
                },
                {
                    field: 'Period', width: 90, format: '{0:MMM yyyy}', attributes: { style: "text-align: right" },
                },
                {
                    field: 'Revenue', title: 'Spend', width: 110, template: '#= FormatCurr(Revenue, Culture) #', attributes: { style: "text-align: right" },
                    aggregates: ["sum"], groupFooterTemplate: "<b style:'text-align:right'>#= kendo.toString(sum, 'c') #</b>",
                    footerTemplate: "#= kendo.toString(sum, 'c') #", footerAttributes: { style: "font-weight: bold; text-align: right" }
                },
                {
                    field: 'AccountingStatusName', title: 'Accounting', width: 100, attributes: { style: "text-align: center" }
                }
            ],
            filterable: true,
            sortable: {
                mode: 'multiple'
            },
            groupable: true,
            //            pageable: true
        });

        $('#cpmsum_startdate').kendoDatePicker({ start: "year", depth: "year", format: "MM/yyyy" });
        $('#cpmsum_enddate').kendoDatePicker({ start: "year", depth: "year", format: "MM/yyyy" });
    }
    </script>
}