@model ClientPortal.Web.Areas.TD.Models.TDReportModel
@{
    var metrics = Model.MetricsToGraph;
}

<div id="summaryChartSection" class="k-content">
    <div class="chart-wrapper">
        <div id="summaryChart"></div>
    </div>
</div>

<h3>Totals</h3>
<table>
@foreach (var metric in Model.AllMetrics)
{
    <tr>
        <td>@metric:</td>
        <td id="td@(metric)" style="text-align:right"></td>
    </tr>
}
</table>

<br />
@Html.Partial("ChartSetup")
<br />

<script>
    $(document).ready(function () {
        var datasource = CreateSummaryDataSource();
        CreateSummaryChart(datasource);
        datasource.read();
        datasource.bind("change", function () {
            var aggs = this.aggregates();
            $('#tdImpressions').html(kendo.toString(aggs.Impressions.sum, 'N0'));
            $('#tdClicks').html(kendo.toString(aggs.Clicks.sum, 'N0'));
            $('#tdConversions').html(kendo.toString(aggs.Conversions.sum, 'N0'));
            $('#tdSpend').html(kendo.toString(aggs.Revenue.sum, 'C'));
        });
    });

    function CreateSummaryDataSource() {
        return new kendo.data.DataSource({
            serverPaging: true,
            serverSorting: true,
            serverFiltering: true,
            serverAggregates: true,
            pageSize: 100,
            transport: {
                read: {
                    type: 'post',
                    dataType: 'json',
                    url: '@Url.Action("SummaryData", "Reports")'
                    //,data: function () {
                    //    return {
                    //        startdate: $('#daysum_startdate').val(),
                    //        enddate: $('#daysum_enddate').val(),
                    //        offerid: $('#daysum_offerFilter').val()
                    //    };
                    //}
                }
            },
            schema: {
                data: 'data',
                total: 'total',
                aggregates: 'aggregates',
                model: {
                    id: 'Id',
                    fields: {
                        Date: { type: 'date' },
                        AdvertiserCurrency: { type: 'string' },
                        Impressions: { type: 'number' },
                        Clicks: { type: 'number' },
                        Conversions: { type: 'number' },
                        Revenue: { type: 'number' }
                    }
                }
            },
            //sort: { field: "Date", dir: "asc" },
            aggregate: [
                { field: "Impressions", aggregate: "sum" },
                { field: "Clicks", aggregate: "sum" },
                { field: "Conversions", aggregate: "sum" },
                { field: "Revenue", aggregate: "sum" }
            ],
            requestEnd: function (e) {
                if (e.type == "read") {
                    var rows = e.response.data;
                    for (var i = 0; i < rows.length; i++) {
                        rows[i].Date = rows[i].Date.replace(/\d+/, function (n) {
                            var time = parseInt(n);
                            return parseInt(time) + new Date(time).getTimezoneOffset() * 60000;
                        });
                    }
                }
            }
        });
    }

    function CreateSummaryChart(dataSource) {
        $("#summaryChart").kendoChart({
            dataSource: dataSource,
            autoBind: false,
            chartArea: {
                height: 300
            },
            theme: $(document).data("kendoSkin") || "default",
            series: [
@for (int i=0; i < metrics.Length; i++)
{
    string field = (metrics[i] == "Spend") ? "Revenue" : metrics[i];
    string format = (metrics[i] == "Spend") ? "C" : "N0";
    <text>{ type: "line", field: "@field", name: "@metrics[i]", axis: "@metrics[i]", markers: { visible: false }, tooltip: { template: "#= kendo.format('{0:d}', category) #: #= kendo.format('{0:@format}',value) #" } }</text>
    if (i < metrics.Length - 1)
    {
        <text>,</text>
    }
}
            ],
            categoryAxis: {
                baseUnit: "days",
                field: "Date",
                labels: { rotation: -90 },
                axisCrossingValue: [0, 2000]
            },
            valueAxis: [
@for (int i=0; i < metrics.Length; i++)
{
    string format = (metrics[i] == "Spend") ? "C" : "N0";
    <text>{ name: "@metrics[i]", labels: { format: "@format", step: 2 }, title: { text: "@metrics[i]" } }</text>
    if (i < metrics.Length - 1)
    {
        <text>,</text>
    }
}
            ],
            tooltip: {
                visible: true
            },
            legend: {
                position: "custom",
                offsetX: 90,
                offsetY: 0
            }
        });
    }
</script>
