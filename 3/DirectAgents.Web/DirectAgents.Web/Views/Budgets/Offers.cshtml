@model DirectAgents.Web.Models.BudgetsVM
@{
    string italicStyle = "style=font-style:italic";
}
<h3>@Html.ActionLink("Budgets", "Start") - Offers</h3>

<div class="validation-summary-errors" style="display:none">
    <ul>
        <li>Row(s) could not be saved.</li>
    </ul>
</div>

<table class="editable" style="border: 1px solid gray; border-spacing: 10px 0">
    <tr>
        <th>Advertiser</th>
        <th>OfferId</th>
        <th @(Model.Sort == "name" ? italicStyle : "")>OfferName</th>
        <th>Budget</th>
        <th>StartDate</th>
        <th>EndDate</th>
        <th></th>
        <th>Spent</th>
        <th @(Model.Sort == "spentpct" ? italicStyle : "")><a href="#" onclick="ChangeSort('spentpct','@(Model.Sort != "spentpct" || !Model.SortDesc ? "true" : "false")'); return false">Spent%</a></th>
        <th>Status</th>
        <th>Hidden</th>
    </tr>

@foreach (var offer in Model.Offers)
{
    <tr id="offrow@(offer.OfferId)">
        @Html.Partial("OfferRow", offer)
    </tr>
}

    <tr>
        <td colspan="6"></td>
        <td colspan="5">
            <input type="button" value="Save All" onclick="SaveAllBudgetRows()" />
        </td>
    </tr>
</table>
@Model.Offers.Count() offers

@section scripts {
    <script type="text/javascript">
@*
        function InitOffer(offerId) {
            var url = '@Url.Action("Initialize")?offerId=' + offerId;
            $.get(url, function (data) {
                LoadBudgetRow(offerId, true);
            });
        }
*@
        function SaveBudgetRow(offerId, suppressAlerts) {
            var url = '@Url.Action("SaveOfferRow")?offerId=' + offerId;
            var data = {
                OfferId: offerId,
                Budget: $('#offrow' + offerId + ' input[name="Budget"]').val(),
                BudgetStart: $('#offrow' + offerId + ' input[name="BudgetStart"]').val(),
                BudgetEnd: $('#offrow' + offerId + ' input[name="BudgetEnd"]').val()
            };
            $.post(url, data, function (data) {
                if (data)
                    LoadBudgetRow(offerId, false);
                else if (!suppressAlerts)
                    alert("Row could not be saved");
                else
                    $('.validation-summary-errors').show();
            });
        }

        function SaveAllBudgetRows() {
            $('.validation-summary-errors').hide();
            $('tr input[value="Save"]').each(function() {
                var offerId = $(this).data('offerId');
                SaveBudgetRow(offerId, true);
            });
        }

        function LoadBudgetRow(offerId, showDoneAlert, editMode) {
            var url = '@Url.Action("OfferRow")';
            var data = {
                offerId: offerId,
                editMode: editMode
            };
            $.get(url, data, function (data) {
                $('#offrow' + offerId).html(data);
                if (showDoneAlert) alert('Updated');
            });
        }

        function ChangeSort(sort, desc) {
            var url = '@Url.Action("Offers")?sort=' + sort + '&desc=' + desc;
            @if (Model.AcctMgrId.HasValue) {
                <text>url = url + '&am=@Model.AcctMgrId.Value';</text>
            }
            @if (Model.AdvId.HasValue) {
                <text>url = url + '&advId=@Model.AdvId.Value';</text>
            }
            @if (Model.WithBudget.HasValue) {
                <text>url = url + '&withBudget=@Model.WithBudget.Value';</text>
            }
            @if (Model.MinPercent.HasValue) {
                <text>url = url + '&minPercent=@Model.MinPercent.Value';</text>
            }
            @if (Model.IncludeInactive) {
                <text>url = url + '&includeInactive=true';</text>
            }
            document.location.href = url;
        }
    </script>
}