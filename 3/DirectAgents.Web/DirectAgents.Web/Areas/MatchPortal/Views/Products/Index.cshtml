@using CakeExtracter.Common.MatchingPortal.Providers
@model CakeExtracter.Common.MatchingPortal.Models.MatchFilter

@{
    var matchUrl = "#";
    if (Model.Results != null && Model.Results.Any())
    {
        matchUrl = Url.Action("Match", "Products", new { id = Model.Results.First() });
    }
}
<div class="well">
    <script>
        $(document).ready(function() {
            $(".chosen-select").chosen();
        })
    </script>
    <h3>Entry to Product Matching</h3>
    <div class="row">
        @using (Html.BeginForm("Index", "Products", FormMethod.Post))
        {
            <hr/>
            <div class="row">
                <div class="col-md-4">
                    @Html.LabelFor(m => m.NumberOfProductsToMatch, new { @class = "col-md-6 font-weight-bold" })
                    <div class="col-md-6">
                        @Html.DisplayFor(m => m.NumberOfProductsToMatch, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <div class="col-md-4">
                    @Html.LabelFor(m => m.Categories, new { @class = "col-md-4 font-weight-bold" })
                    <div class="col-md-8">
                        @Html.ListBoxFor(m => m.Categories, new MultiSelectList(SelectOptionsProvider.GetCategories()), new { @class = "form-control chosen-select" })
                    </div>
                </div>
                <div class="col-md-4">
                    @Html.LabelFor(m => m.ProductId, new { @class = "col-md-4 font-weight-bold" })
                    <div class="col-md-8">
                        @Html.EditorFor(m => m.ProductId, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
            </div>
            <hr/>
            <div class="row">
                <div class="col-md-4">
                    @Html.LabelFor(m => m.IsBrandMatched, new { @class = "col-md-6 font-weight-bold" })
                    <div class="col-md-6">
                        @Html.DisplayFor(m => m.IsBrandMatched, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <div class="col-md-4">
                    @Html.LabelFor(m => m.Brands, new { @class = "col-md-4 font-weight-bold" })
                    <div class="col-md-8">
                        @Html.ListBoxFor(m => m.Brands, new MultiSelectList(SelectOptionsProvider.GetBrands()), new { @class = "form-control chosen-select" })
                    </div>
                </div>
                <div class="col-md-4">
                    @Html.LabelFor(m => m.ProductTitle, new { @class = "col-md-4 font-weight-bold" })
                    <div class="col-md-8">
                        @Html.EditorFor(m => m.ProductTitle, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
            </div>
            <hr/>
            <div class="row">
                <div class="col-md-6">
                    <button type="submit" class="btn btn-default btn-lg btn-block">Apply Filter</button>
                </div>
                <div class="col-md-6">
                    <a href="@matchUrl"
                       role="button"
                       class="btn btn-default btn-lg btn-block"
                       @(Model.IsFilterApplied && !string.IsNullOrWhiteSpace(matchUrl) ? string.Empty : "disabled")>
                        Start Matching
                    </a>
                </div>
            </div>
        }
    </div>
</div>