//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("DirectTrack", "ResourceTypeResource", "ResourceType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DirectTrack.Rest.Models.ResourceType), "Resource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DirectTrack.Rest.Models.Resource), true)]

#endregion

namespace DirectTrack.Rest.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DirectTrackContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DirectTrackContainer object using the connection string found in the 'DirectTrackContainer' section of the application configuration file.
        /// </summary>
        public DirectTrackContainer() : base("name=DirectTrackContainer", "DirectTrackContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DirectTrackContainer object.
        /// </summary>
        public DirectTrackContainer(string connectionString) : base(connectionString, "DirectTrackContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DirectTrackContainer object.
        /// </summary>
        public DirectTrackContainer(EntityConnection connection) : base(connection, "DirectTrackContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Resource> Resources
        {
            get
            {
                if ((_Resources == null))
                {
                    _Resources = base.CreateObjectSet<Resource>("Resources");
                }
                return _Resources;
            }
        }
        private ObjectSet<Resource> _Resources;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResourceType> ResourceTypes
        {
            get
            {
                if ((_ResourceTypes == null))
                {
                    _ResourceTypes = base.CreateObjectSet<ResourceType>("ResourceTypes");
                }
                return _ResourceTypes;
            }
        }
        private ObjectSet<ResourceType> _ResourceTypes;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Resources EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResources(Resource resource)
        {
            base.AddObject("Resources", resource);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResourceTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResourceTypes(ResourceType resourceType)
        {
            base.AddObject("ResourceTypes", resourceType);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectTrack", Name="Resource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Resource : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Resource object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="location">Initial value of the Location property.</param>
        /// <param name="content">Initial value of the Content property.</param>
        /// <param name="resourceTypeId">Initial value of the ResourceTypeId property.</param>
        public static Resource CreateResource(global::System.Int32 id, global::System.String location, global::System.String content, global::System.Int32 resourceTypeId)
        {
            Resource resource = new Resource();
            resource.Id = id;
            resource.Location = location;
            resource.Content = content;
            resource.ResourceTypeId = resourceTypeId;
            return resource;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.String _Content;
        partial void OnContentChanging(global::System.String value);
        partial void OnContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Got
        {
            get
            {
                return _Got;
            }
            set
            {
                OnGotChanging(value);
                ReportPropertyChanging("Got");
                _Got = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Got");
                OnGotChanged();
            }
        }
        private Nullable<global::System.DateTime> _Got;
        partial void OnGotChanging(Nullable<global::System.DateTime> value);
        partial void OnGotChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Posted
        {
            get
            {
                return _Posted;
            }
            set
            {
                OnPostedChanging(value);
                ReportPropertyChanging("Posted");
                _Posted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Posted");
                OnPostedChanged();
            }
        }
        private Nullable<global::System.DateTime> _Posted;
        partial void OnPostedChanging(Nullable<global::System.DateTime> value);
        partial void OnPostedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceTypeId
        {
            get
            {
                return _ResourceTypeId;
            }
            set
            {
                OnResourceTypeIdChanging(value);
                ReportPropertyChanging("ResourceTypeId");
                _ResourceTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResourceTypeId");
                OnResourceTypeIdChanged();
            }
        }
        private global::System.Int32 _ResourceTypeId;
        partial void OnResourceTypeIdChanging(global::System.Int32 value);
        partial void OnResourceTypeIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectTrack", "ResourceTypeResource", "ResourceType")]
        public ResourceType ResourceType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceType>("DirectTrack.ResourceTypeResource", "ResourceType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceType>("DirectTrack.ResourceTypeResource", "ResourceType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResourceType> ResourceTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceType>("DirectTrack.ResourceTypeResource", "ResourceType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResourceType>("DirectTrack.ResourceTypeResource", "ResourceType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectTrack", Name="ResourceType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResourceType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResourceType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ResourceType CreateResourceType(global::System.Int32 id, global::System.String name)
        {
            ResourceType resourceType = new ResourceType();
            resourceType.Id = id;
            resourceType.Name = name;
            return resourceType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectTrack", "ResourceTypeResource", "Resource")]
        public EntityCollection<Resource> Resources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Resource>("DirectTrack.ResourceTypeResource", "Resource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Resource>("DirectTrack.ResourceTypeResource", "Resource", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
