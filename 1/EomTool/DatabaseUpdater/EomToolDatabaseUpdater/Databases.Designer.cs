//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace EomToolDatabaseUpdater
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DatabasesEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DatabasesEntities object using the connection string found in the 'DatabasesEntities' section of the application configuration file.
        /// </summary>
        public DatabasesEntities() : base("name=DatabasesEntities", "DatabasesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DatabasesEntities object.
        /// </summary>
        public DatabasesEntities(string connectionString) : base(connectionString, "DatabasesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DatabasesEntities object.
        /// </summary>
        public DatabasesEntities(EntityConnection connection) : base(connection, "DatabasesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DADatabase> DADatabases
        {
            get
            {
                if ((_DADatabases == null))
                {
                    _DADatabases = base.CreateObjectSet<DADatabase>("DADatabases");
                }
                return _DADatabases;
            }
        }
        private ObjectSet<DADatabase> _DADatabases;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DADatabases EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDADatabases(DADatabase dADatabase)
        {
            base.AddObject("DADatabases", dADatabase);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DatabasesModel", Name="DADatabase")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DADatabase : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DADatabase object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="connection_string">Initial value of the connection_string property.</param>
        /// <param name="am_view_name">Initial value of the am_view_name property.</param>
        public static DADatabase CreateDADatabase(global::System.Int32 id, global::System.String name, global::System.String connection_string, global::System.String am_view_name)
        {
            DADatabase dADatabase = new DADatabase();
            dADatabase.id = id;
            dADatabase.name = name;
            dADatabase.connection_string = connection_string;
            dADatabase.am_view_name = am_view_name;
            return dADatabase;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                if (_name != value)
                {
                    OnnameChanging(value);
                    ReportPropertyChanging("name");
                    _name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("name");
                    OnnameChanged();
                }
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String connection_string
        {
            get
            {
                return _connection_string;
            }
            set
            {
                if (_connection_string != value)
                {
                    Onconnection_stringChanging(value);
                    ReportPropertyChanging("connection_string");
                    _connection_string = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("connection_string");
                    Onconnection_stringChanged();
                }
            }
        }
        private global::System.String _connection_string;
        partial void Onconnection_stringChanging(global::System.String value);
        partial void Onconnection_stringChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> effective_date
        {
            get
            {
                return _effective_date;
            }
            set
            {
                Oneffective_dateChanging(value);
                ReportPropertyChanging("effective_date");
                _effective_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("effective_date");
                Oneffective_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _effective_date;
        partial void Oneffective_dateChanging(Nullable<global::System.DateTime> value);
        partial void Oneffective_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String am_view_name
        {
            get
            {
                return _am_view_name;
            }
            set
            {
                if (_am_view_name != value)
                {
                    Onam_view_nameChanging(value);
                    ReportPropertyChanging("am_view_name");
                    _am_view_name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("am_view_name");
                    Onam_view_nameChanged();
                }
            }
        }
        private global::System.String _am_view_name;
        partial void Onam_view_nameChanging(global::System.String value);
        partial void Onam_view_nameChanged();

        #endregion
    
    }

    #endregion
    
}
