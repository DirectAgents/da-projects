<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DAMain1DataSet" targetNamespace="http://tempuri.org/DAMain1DataSet.xsd" xmlns:mstns="http://tempuri.org/DAMain1DataSet.xsd" xmlns="http://tempuri.org/DAMain1DataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="DAMain1ConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="DAMain1ConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.EomAppControls.Properties.Settings.GlobalReference.Default.DAMain1ConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SettingsTableAdapter" GeneratorDataComponentClassName="SettingsTableAdapter" Name="Settings" UserDataComponentName="SettingsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DAMain1ConnectionString (Settings)" DbObjectName="DAMain1.dbo.Settings" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Settings] WHERE (([SettingId] = @Original_SettingId) AND ([SettingName] = @Original_SettingName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SettingId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SettingId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_SettingName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SettingName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Settings] ([SettingId], [SettingName], [SettingValue]) VALUES (@SettingId, @SettingName, @SettingValue);
SELECT SettingId, SettingName, SettingValue FROM Settings WHERE (SettingId = @SettingId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SettingId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SettingId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@SettingName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SettingName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@SettingValue" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SettingValue" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT SettingId, SettingName, SettingValue FROM dbo.Settings</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Settings] SET [SettingId] = @SettingId, [SettingName] = @SettingName, [SettingValue] = @SettingValue WHERE (([SettingId] = @Original_SettingId) AND ([SettingName] = @Original_SettingName));
SELECT SettingId, SettingName, SettingValue FROM Settings WHERE (SettingId = @SettingId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SettingId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SettingId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@SettingName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SettingName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@SettingValue" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SettingValue" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SettingId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SettingId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_SettingName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SettingName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="SettingId" DataSetColumn="SettingId" />
              <Mapping SourceColumn="SettingName" DataSetColumn="SettingName" />
              <Mapping SourceColumn="SettingValue" DataSetColumn="SettingValue" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DAMain1DataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="DAMain1DataSet" msprop:Generator_UserDSName="DAMain1DataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Settings" msprop:Generator_TableClassName="SettingsDataTable" msprop:Generator_TableVarName="tableSettings" msprop:Generator_TablePropName="Settings" msprop:Generator_RowDeletingName="SettingsRowDeleting" msprop:Generator_UserTableName="Settings" msprop:Generator_RowChangingName="SettingsRowChanging" msprop:Generator_RowEvHandlerName="SettingsRowChangeEventHandler" msprop:Generator_RowDeletedName="SettingsRowDeleted" msprop:Generator_RowEvArgName="SettingsRowChangeEvent" msprop:Generator_RowChangedName="SettingsRowChanged" msprop:Generator_RowClassName="SettingsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SettingId" msprop:Generator_ColumnVarNameInTable="columnSettingId" msprop:Generator_ColumnPropNameInRow="SettingId" msprop:Generator_ColumnPropNameInTable="SettingIdColumn" msprop:Generator_UserColumnName="SettingId" type="xs:int" />
              <xs:element name="SettingName" msprop:Generator_ColumnVarNameInTable="columnSettingName" msprop:Generator_ColumnPropNameInRow="SettingName" msprop:Generator_ColumnPropNameInTable="SettingNameColumn" msprop:Generator_UserColumnName="SettingName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="SettingValue" msprop:Generator_ColumnVarNameInTable="columnSettingValue" msprop:Generator_ColumnPropNameInRow="SettingValue" msprop:Generator_ColumnPropNameInTable="SettingValueColumn" msprop:Generator_UserColumnName="SettingValue">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Settings" />
      <xs:field xpath="mstns:SettingId" />
    </xs:unique>
  </xs:element>
</xs:schema>