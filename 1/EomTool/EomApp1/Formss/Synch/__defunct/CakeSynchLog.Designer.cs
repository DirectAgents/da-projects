//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("CakeModel", "FK_LogLogEntry", "Log", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EomApp1.Formss.Synch.@__defunct.Log), "LogEntry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EomApp1.Formss.Synch.@__defunct.LogEntry), true)]
[assembly: EdmRelationshipAttribute("CakeModel", "FK_LogCakeSynch", "Log", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EomApp1.Formss.Synch.@__defunct.Log), "CakeSynch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EomApp1.Formss.Synch.@__defunct.CakeSynch), true)]

#endregion

namespace EomApp1.Formss.Synch.__defunct
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class CakeSynchEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new CakeSynchEntities object using the connection string found in the 'CakeSynchEntities' section of the application configuration file.
        /// </summary>
        public CakeSynchEntities() : base("name=CakeSynchEntities", "CakeSynchEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CakeSynchEntities object.
        /// </summary>
        public CakeSynchEntities(string connectionString) : base(connectionString, "CakeSynchEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CakeSynchEntities object.
        /// </summary>
        public CakeSynchEntities(EntityConnection connection) : base(connection, "CakeSynchEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LogEntry> LogEntries
        {
            get
            {
                if ((_LogEntries == null))
                {
                    _LogEntries = base.CreateObjectSet<LogEntry>("LogEntries");
                }
                return _LogEntries;
            }
        }
        private ObjectSet<LogEntry> _LogEntries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Log> Logs
        {
            get
            {
                if ((_Logs == null))
                {
                    _Logs = base.CreateObjectSet<Log>("Logs");
                }
                return _Logs;
            }
        }
        private ObjectSet<Log> _Logs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CakeSynch> CakeSynches
        {
            get
            {
                if ((_CakeSynches == null))
                {
                    _CakeSynches = base.CreateObjectSet<CakeSynch>("CakeSynches");
                }
                return _CakeSynches;
            }
        }
        private ObjectSet<CakeSynch> _CakeSynches;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LogEntries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLogEntries(LogEntry logEntry)
        {
            base.AddObject("LogEntries", logEntry);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Logs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLogs(Log log)
        {
            base.AddObject("Logs", log);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CakeSynches EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCakeSynches(CakeSynch cakeSynch)
        {
            base.AddObject("CakeSynches", cakeSynch);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CakeModel", Name="CakeSynch")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CakeSynch : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CakeSynch object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="offerId">Initial value of the OfferId property.</param>
        /// <param name="fromDate">Initial value of the FromDate property.</param>
        /// <param name="toDate">Initial value of the ToDate property.</param>
        /// <param name="log_Id">Initial value of the Log_Id property.</param>
        public static CakeSynch CreateCakeSynch(global::System.Int32 id, global::System.Int32 offerId, global::System.DateTime fromDate, global::System.DateTime toDate, global::System.Int32 log_Id)
        {
            CakeSynch cakeSynch = new CakeSynch();
            cakeSynch.Id = id;
            cakeSynch.OfferId = offerId;
            cakeSynch.FromDate = fromDate;
            cakeSynch.ToDate = toDate;
            cakeSynch.Log_Id = log_Id;
            return cakeSynch;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OfferId
        {
            get
            {
                return _OfferId;
            }
            set
            {
                OnOfferIdChanging(value);
                ReportPropertyChanging("OfferId");
                _OfferId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OfferId");
                OnOfferIdChanged();
            }
        }
        private global::System.Int32 _OfferId;
        partial void OnOfferIdChanging(global::System.Int32 value);
        partial void OnOfferIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FromDate
        {
            get
            {
                return _FromDate;
            }
            set
            {
                OnFromDateChanging(value);
                ReportPropertyChanging("FromDate");
                _FromDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromDate");
                OnFromDateChanged();
            }
        }
        private global::System.DateTime _FromDate;
        partial void OnFromDateChanging(global::System.DateTime value);
        partial void OnFromDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ToDate
        {
            get
            {
                return _ToDate;
            }
            set
            {
                OnToDateChanging(value);
                ReportPropertyChanging("ToDate");
                _ToDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToDate");
                OnToDateChanged();
            }
        }
        private global::System.DateTime _ToDate;
        partial void OnToDateChanging(global::System.DateTime value);
        partial void OnToDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Log_Id
        {
            get
            {
                return _Log_Id;
            }
            set
            {
                OnLog_IdChanging(value);
                ReportPropertyChanging("Log_Id");
                _Log_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Log_Id");
                OnLog_IdChanged();
            }
        }
        private global::System.Int32 _Log_Id;
        partial void OnLog_IdChanging(global::System.Int32 value);
        partial void OnLog_IdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CakeModel", "FK_LogCakeSynch", "Log")]
        public Log Log
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Log>("CakeModel.FK_LogCakeSynch", "Log").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Log>("CakeModel.FK_LogCakeSynch", "Log").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Log> LogReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Log>("CakeModel.FK_LogCakeSynch", "Log");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Log>("CakeModel.FK_LogCakeSynch", "Log", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CakeModel", Name="Log")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Log : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Log object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="startTime">Initial value of the StartTime property.</param>
        /// <param name="isRunning">Initial value of the IsRunning property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Log CreateLog(global::System.Int32 id, global::System.DateTime startTime, global::System.Boolean isRunning, global::System.Guid name)
        {
            Log log = new Log();
            log.Id = id;
            log.StartTime = startTime;
            log.IsRunning = isRunning;
            log.Name = name;
            return log;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private global::System.DateTime _StartTime;
        partial void OnStartTimeChanging(global::System.DateTime value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsRunning
        {
            get
            {
                return _IsRunning;
            }
            set
            {
                OnIsRunningChanging(value);
                ReportPropertyChanging("IsRunning");
                _IsRunning = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsRunning");
                OnIsRunningChanged();
            }
        }
        private global::System.Boolean _IsRunning;
        partial void OnIsRunningChanging(global::System.Boolean value);
        partial void OnIsRunningChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.Guid _Name;
        partial void OnNameChanging(global::System.Guid value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CakeModel", "FK_LogLogEntry", "LogEntry")]
        public EntityCollection<LogEntry> LogEntries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LogEntry>("CakeModel.FK_LogLogEntry", "LogEntry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LogEntry>("CakeModel.FK_LogLogEntry", "LogEntry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CakeModel", "FK_LogCakeSynch", "CakeSynch")]
        public EntityCollection<CakeSynch> CakeSynches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CakeSynch>("CakeModel.FK_LogCakeSynch", "CakeSynch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CakeSynch>("CakeModel.FK_LogCakeSynch", "CakeSynch", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CakeModel", Name="LogEntry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LogEntry : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LogEntry object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        /// <param name="log_Id">Initial value of the Log_Id property.</param>
        public static LogEntry CreateLogEntry(global::System.Int32 id, global::System.String message, global::System.Int32 log_Id)
        {
            LogEntry logEntry = new LogEntry();
            logEntry.Id = id;
            logEntry.Message = message;
            logEntry.Log_Id = log_Id;
            return logEntry;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Log_Id
        {
            get
            {
                return _Log_Id;
            }
            set
            {
                OnLog_IdChanging(value);
                ReportPropertyChanging("Log_Id");
                _Log_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Log_Id");
                OnLog_IdChanged();
            }
        }
        private global::System.Int32 _Log_Id;
        partial void OnLog_IdChanging(global::System.Int32 value);
        partial void OnLog_IdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CakeModel", "FK_LogLogEntry", "Log")]
        public Log Log
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Log>("CakeModel.FK_LogLogEntry", "Log").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Log>("CakeModel.FK_LogLogEntry", "Log").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Log> LogReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Log>("CakeModel.FK_LogLogEntry", "Log");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Log>("CakeModel.FK_LogLogEntry", "Log", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
