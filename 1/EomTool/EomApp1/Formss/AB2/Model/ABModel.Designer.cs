//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("DirectAgentsModel", "FK_Amount_Unit", "Unit", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EomApp1.Formss.AB2.Model.Unit), "Amount", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EomApp1.Formss.AB2.Model.Amount))]
[assembly: EdmRelationshipAttribute("DirectAgentsModel", "FK_Item_Amount", "Amount", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EomApp1.Formss.AB2.Model.Amount), "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EomApp1.Formss.AB2.Model.Item))]
[assembly: EdmRelationshipAttribute("DirectAgentsModel", "FK_Item_Client", "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EomApp1.Formss.AB2.Model.Client), "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EomApp1.Formss.AB2.Model.Item))]
[assembly: EdmRelationshipAttribute("DirectAgentsModel", "FK_UnitConversion_Unit", "Unit", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EomApp1.Formss.AB2.Model.Unit), "UnitConversion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EomApp1.Formss.AB2.Model.UnitConversion))]
[assembly: EdmRelationshipAttribute("DirectAgentsModel", "FK_UnitConversion_Unit1", "Unit", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EomApp1.Formss.AB2.Model.Unit), "UnitConversion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EomApp1.Formss.AB2.Model.UnitConversion))]
[assembly: EdmRelationshipAttribute("DirectAgentsModel", "FK_Advertiser_Client", "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EomApp1.Formss.AB2.Model.Client), "Advertiser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EomApp1.Formss.AB2.Model.Advertiser))]
[assembly: EdmRelationshipAttribute("DirectAgentsModel", "FK_Customer_Client", "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EomApp1.Formss.AB2.Model.Client), "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EomApp1.Formss.AB2.Model.Customer))]
[assembly: EdmRelationshipAttribute("DirectAgentsModel", "FK_Credit_Item", "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EomApp1.Formss.AB2.Model.Item), "Credit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EomApp1.Formss.AB2.Model.Credit))]
[assembly: EdmRelationshipAttribute("DirectAgentsModel", "FK_Charge_Debit", "Debit", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EomApp1.Formss.AB2.Model.Debit), "Charge", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EomApp1.Formss.AB2.Model.Charge))]
[assembly: EdmRelationshipAttribute("DirectAgentsModel", "FK_Debit_Item", "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EomApp1.Formss.AB2.Model.Item), "Debit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EomApp1.Formss.AB2.Model.Debit))]
[assembly: EdmRelationshipAttribute("DirectAgentsModel", "FK_Item_DateSpan", "DateSpan", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EomApp1.Formss.AB2.Model.DateSpan), "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EomApp1.Formss.AB2.Model.Item))]
[assembly: EdmRelationshipAttribute("DirectAgentsModel", "FK_Period_DateSpan", "DateSpan", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EomApp1.Formss.AB2.Model.DateSpan), "Period", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EomApp1.Formss.AB2.Model.Period))]
[assembly: EdmRelationshipAttribute("DirectAgentsModel", "FK_AdvertisingRevenue_Charge", "Charge", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EomApp1.Formss.AB2.Model.Charge), "AdvertisingRevenue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EomApp1.Formss.AB2.Model.AdvertisingRevenue))]
[assembly: EdmRelationshipAttribute("DirectAgentsModel", "DateSpanUnitConversion", "DateSpan", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EomApp1.Formss.AB2.Model.DateSpan), "UnitConversion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EomApp1.Formss.AB2.Model.UnitConversion))]
[assembly: EdmRelationshipAttribute("DirectAgentsModel", "SqlServerDatabasePeriod", "SqlServerDatabase", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EomApp1.Formss.AB2.Model.SqlServerDatabase), "Period", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EomApp1.Formss.AB2.Model.Period))]
[assembly: EdmRelationshipAttribute("DirectAgentsModel", "ClientPayTerm", "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EomApp1.Formss.AB2.Model.Client), "PayTerm", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EomApp1.Formss.AB2.Model.PayTerm))]
[assembly: EdmRelationshipAttribute("DirectAgentsModel", "AdvertisingRevenueCampaign", "AdvertisingRevenue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EomApp1.Formss.AB2.Model.AdvertisingRevenue), "Campaign", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EomApp1.Formss.AB2.Model.Campaign))]
[assembly: EdmRelationshipAttribute("DirectAgentsModel", "PaymentCredit", "Payment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EomApp1.Formss.AB2.Model.Payment), "Credit", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EomApp1.Formss.AB2.Model.Credit))]
[assembly: EdmRelationshipAttribute("DirectAgentsModel", "QuickBooksReceivedPaymentQuickBooksCompanyFile", "QuickBooksReceivedPayment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EomApp1.Formss.AB2.Model.QuickBooksReceivedPayment), "QuickBooksCompanyFile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EomApp1.Formss.AB2.Model.QuickBooksCompanyFile))]
[assembly: EdmRelationshipAttribute("DirectAgentsModel", "PaymentQuickBooksReceivedPayment", "Payment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EomApp1.Formss.AB2.Model.Payment), "QuickBooksReceivedPayment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EomApp1.Formss.AB2.Model.QuickBooksReceivedPayment))]
[assembly: EdmRelationshipAttribute("DirectAgentsModel", "CustomerQuickBooksCustomer", "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EomApp1.Formss.AB2.Model.Customer), "QuickBooksCustomer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EomApp1.Formss.AB2.Model.QuickBooksCustomer))]
[assembly: EdmRelationshipAttribute("DirectAgentsModel", "DirectTrackAdvertiserAdvertiser", "DirectTrackAdvertiser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EomApp1.Formss.AB2.Model.DirectTrackAdvertiser), "Advertiser", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EomApp1.Formss.AB2.Model.Advertiser))]
[assembly: EdmRelationshipAttribute("DirectAgentsModel", "QuickBooksCompanyFileQuickBooksCustomer", "QuickBooksCompanyFile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EomApp1.Formss.AB2.Model.QuickBooksCompanyFile), "QuickBooksCustomer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EomApp1.Formss.AB2.Model.QuickBooksCustomer))]
[assembly: EdmRelationshipAttribute("DirectAgentsModel", "QuickBooksCustomerQuickBooksReceivedPayment", "QuickBooksCustomer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EomApp1.Formss.AB2.Model.QuickBooksCustomer), "QuickBooksReceivedPayment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EomApp1.Formss.AB2.Model.QuickBooksReceivedPayment))]
[assembly: EdmRelationshipAttribute("DirectAgentsModel", "FK_LogEntry_Log", "Log", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EomApp1.Formss.AB2.Model.Log), "LogEntry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EomApp1.Formss.AB2.Model.LogEntry))]
[assembly: EdmRelationshipAttribute("DirectAgentsModel", "LogEntryTypeLogEntry", "LogEntryType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EomApp1.Formss.AB2.Model.LogEntryType), "LogEntry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EomApp1.Formss.AB2.Model.LogEntry))]
[assembly: EdmRelationshipAttribute("DirectAgentsModel", "AdvertiserCampaign", "Advertiser", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EomApp1.Formss.AB2.Model.Advertiser), "Campaign", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EomApp1.Formss.AB2.Model.Campaign))]
[assembly: EdmRelationshipAttribute("DirectAgentsModel", "SqlServerDatabaseExternalItem", "SqlServerDatabase", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EomApp1.Formss.AB2.Model.SqlServerDatabase), "ExternalItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EomApp1.Formss.AB2.Model.ExternalItem))]
[assembly: EdmRelationshipAttribute("DirectAgentsModel", "ExternalItemAdvertisingRevenue", "ExternalItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EomApp1.Formss.AB2.Model.ExternalItem), "AdvertisingRevenue", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EomApp1.Formss.AB2.Model.AdvertisingRevenue))]
[assembly: EdmRelationshipAttribute("DirectAgentsModel", "ClientCreditLimit", "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EomApp1.Formss.AB2.Model.Client), "CreditLimit", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EomApp1.Formss.AB2.Model.CreditLimit))]
[assembly: EdmRelationshipAttribute("DirectAgentsModel", "ClientStartingBalance", "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EomApp1.Formss.AB2.Model.Client), "StartingBalance", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EomApp1.Formss.AB2.Model.StartingBalance))]
[assembly: EdmRelationshipAttribute("DirectAgentsModel", "DirectTrackCampaignGroupDirectTrackCampaign", "DirectTrackCampaign", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EomApp1.Formss.AB2.Model.DirectTrackCampaign), "DirectTrackCampaignGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EomApp1.Formss.AB2.Model.DirectTrackCampaignGroup))]
[assembly: EdmRelationshipAttribute("DirectAgentsModel", "DirectTrackResourceDirectTrackCampaignGroup", "DirectTrackResource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EomApp1.Formss.AB2.Model.DirectTrackResource), "DirectTrackCampaignGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EomApp1.Formss.AB2.Model.DirectTrackCampaignGroup))]
[assembly: EdmRelationshipAttribute("DirectAgentsModel", "DirectTrackResourceDirectTrackCampaign", "DirectTrackResource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EomApp1.Formss.AB2.Model.DirectTrackResource), "DirectTrackCampaign", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EomApp1.Formss.AB2.Model.DirectTrackCampaign))]
[assembly: EdmRelationshipAttribute("DirectAgentsModel", "CampaignDirectTrackCampaign", "Campaign", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EomApp1.Formss.AB2.Model.Campaign), "DirectTrackCampaign", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EomApp1.Formss.AB2.Model.DirectTrackCampaign))]

#endregion

namespace EomApp1.Formss.AB2.Model
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DirectAgentsEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DirectAgentsEntities object using the connection string found in the 'DirectAgentsEntities' section of the application configuration file.
        /// </summary>
        public DirectAgentsEntities() : base("name=DirectAgentsEntities", "DirectAgentsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DirectAgentsEntities object.
        /// </summary>
        public DirectAgentsEntities(string connectionString) : base(connectionString, "DirectAgentsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DirectAgentsEntities object.
        /// </summary>
        public DirectAgentsEntities(EntityConnection connection) : base(connection, "DirectAgentsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Amount> Amounts
        {
            get
            {
                if ((_Amounts == null))
                {
                    _Amounts = base.CreateObjectSet<Amount>("Amounts");
                }
                return _Amounts;
            }
        }
        private ObjectSet<Amount> _Amounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Item> Items
        {
            get
            {
                if ((_Items == null))
                {
                    _Items = base.CreateObjectSet<Item>("Items");
                }
                return _Items;
            }
        }
        private ObjectSet<Item> _Items;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Period> Periods
        {
            get
            {
                if ((_Periods == null))
                {
                    _Periods = base.CreateObjectSet<Period>("Periods");
                }
                return _Periods;
            }
        }
        private ObjectSet<Period> _Periods;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Unit> Units
        {
            get
            {
                if ((_Units == null))
                {
                    _Units = base.CreateObjectSet<Unit>("Units");
                }
                return _Units;
            }
        }
        private ObjectSet<Unit> _Units;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UnitConversion> UnitConversions
        {
            get
            {
                if ((_UnitConversions == null))
                {
                    _UnitConversions = base.CreateObjectSet<UnitConversion>("UnitConversions");
                }
                return _UnitConversions;
            }
        }
        private ObjectSet<UnitConversion> _UnitConversions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Client> Clients
        {
            get
            {
                if ((_Clients == null))
                {
                    _Clients = base.CreateObjectSet<Client>("Clients");
                }
                return _Clients;
            }
        }
        private ObjectSet<Client> _Clients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SqlServerDatabase> SqlServerDatabases
        {
            get
            {
                if ((_SqlServerDatabases == null))
                {
                    _SqlServerDatabases = base.CreateObjectSet<SqlServerDatabase>("SqlServerDatabases");
                }
                return _SqlServerDatabases;
            }
        }
        private ObjectSet<SqlServerDatabase> _SqlServerDatabases;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Advertiser> Advertisers
        {
            get
            {
                if ((_Advertisers == null))
                {
                    _Advertisers = base.CreateObjectSet<Advertiser>("Advertisers");
                }
                return _Advertisers;
            }
        }
        private ObjectSet<Advertiser> _Advertisers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<QuickBooksCompanyFile> QuickBooksCompanyFiles
        {
            get
            {
                if ((_QuickBooksCompanyFiles == null))
                {
                    _QuickBooksCompanyFiles = base.CreateObjectSet<QuickBooksCompanyFile>("QuickBooksCompanyFiles");
                }
                return _QuickBooksCompanyFiles;
            }
        }
        private ObjectSet<QuickBooksCompanyFile> _QuickBooksCompanyFiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Customer> Customers
        {
            get
            {
                if ((_Customers == null))
                {
                    _Customers = base.CreateObjectSet<Customer>("Customers");
                }
                return _Customers;
            }
        }
        private ObjectSet<Customer> _Customers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Credit> Credits
        {
            get
            {
                if ((_Credits == null))
                {
                    _Credits = base.CreateObjectSet<Credit>("Credits");
                }
                return _Credits;
            }
        }
        private ObjectSet<Credit> _Credits;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Debit> Debits
        {
            get
            {
                if ((_Debits == null))
                {
                    _Debits = base.CreateObjectSet<Debit>("Debits");
                }
                return _Debits;
            }
        }
        private ObjectSet<Debit> _Debits;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Charge> Charges
        {
            get
            {
                if ((_Charges == null))
                {
                    _Charges = base.CreateObjectSet<Charge>("Charges");
                }
                return _Charges;
            }
        }
        private ObjectSet<Charge> _Charges;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DateSpan> DateSpans
        {
            get
            {
                if ((_DateSpans == null))
                {
                    _DateSpans = base.CreateObjectSet<DateSpan>("DateSpans");
                }
                return _DateSpans;
            }
        }
        private ObjectSet<DateSpan> _DateSpans;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdvertisingRevenue> AdvertisingRevenues
        {
            get
            {
                if ((_AdvertisingRevenues == null))
                {
                    _AdvertisingRevenues = base.CreateObjectSet<AdvertisingRevenue>("AdvertisingRevenues");
                }
                return _AdvertisingRevenues;
            }
        }
        private ObjectSet<AdvertisingRevenue> _AdvertisingRevenues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PayTerm> PayTerms
        {
            get
            {
                if ((_PayTerms == null))
                {
                    _PayTerms = base.CreateObjectSet<PayTerm>("PayTerms");
                }
                return _PayTerms;
            }
        }
        private ObjectSet<PayTerm> _PayTerms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Campaign> Campaigns
        {
            get
            {
                if ((_Campaigns == null))
                {
                    _Campaigns = base.CreateObjectSet<Campaign>("Campaigns");
                }
                return _Campaigns;
            }
        }
        private ObjectSet<Campaign> _Campaigns;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DirectTrackCampaign> DirectTrackCampaigns
        {
            get
            {
                if ((_DirectTrackCampaigns == null))
                {
                    _DirectTrackCampaigns = base.CreateObjectSet<DirectTrackCampaign>("DirectTrackCampaigns");
                }
                return _DirectTrackCampaigns;
            }
        }
        private ObjectSet<DirectTrackCampaign> _DirectTrackCampaigns;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Payment> Payments
        {
            get
            {
                if ((_Payments == null))
                {
                    _Payments = base.CreateObjectSet<Payment>("Payments");
                }
                return _Payments;
            }
        }
        private ObjectSet<Payment> _Payments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<QuickBooksReceivedPayment> QuickBooksReceivedPayments
        {
            get
            {
                if ((_QuickBooksReceivedPayments == null))
                {
                    _QuickBooksReceivedPayments = base.CreateObjectSet<QuickBooksReceivedPayment>("QuickBooksReceivedPayments");
                }
                return _QuickBooksReceivedPayments;
            }
        }
        private ObjectSet<QuickBooksReceivedPayment> _QuickBooksReceivedPayments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<QuickBooksCustomer> QuickBooksCustomers
        {
            get
            {
                if ((_QuickBooksCustomers == null))
                {
                    _QuickBooksCustomers = base.CreateObjectSet<QuickBooksCustomer>("QuickBooksCustomers");
                }
                return _QuickBooksCustomers;
            }
        }
        private ObjectSet<QuickBooksCustomer> _QuickBooksCustomers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DirectTrackAdvertiser> DirectTrackAdvertisers
        {
            get
            {
                if ((_DirectTrackAdvertisers == null))
                {
                    _DirectTrackAdvertisers = base.CreateObjectSet<DirectTrackAdvertiser>("DirectTrackAdvertisers");
                }
                return _DirectTrackAdvertisers;
            }
        }
        private ObjectSet<DirectTrackAdvertiser> _DirectTrackAdvertisers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Log> Logs
        {
            get
            {
                if ((_Logs == null))
                {
                    _Logs = base.CreateObjectSet<Log>("Logs");
                }
                return _Logs;
            }
        }
        private ObjectSet<Log> _Logs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DirectTrackResource> DirectTrackResources
        {
            get
            {
                if ((_DirectTrackResources == null))
                {
                    _DirectTrackResources = base.CreateObjectSet<DirectTrackResource>("DirectTrackResources");
                }
                return _DirectTrackResources;
            }
        }
        private ObjectSet<DirectTrackResource> _DirectTrackResources;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DirectTrackInstance> DirectTrackInstances
        {
            get
            {
                if ((_DirectTrackInstances == null))
                {
                    _DirectTrackInstances = base.CreateObjectSet<DirectTrackInstance>("DirectTrackInstances");
                }
                return _DirectTrackInstances;
            }
        }
        private ObjectSet<DirectTrackInstance> _DirectTrackInstances;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Permission> Permissions
        {
            get
            {
                if ((_Permissions == null))
                {
                    _Permissions = base.CreateObjectSet<Permission>("Permissions");
                }
                return _Permissions;
            }
        }
        private ObjectSet<Permission> _Permissions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PermissionGroup> PermissionGroups
        {
            get
            {
                if ((_PermissionGroups == null))
                {
                    _PermissionGroups = base.CreateObjectSet<PermissionGroup>("PermissionGroups");
                }
                return _PermissionGroups;
            }
        }
        private ObjectSet<PermissionGroup> _PermissionGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Task> Tasks
        {
            get
            {
                if ((_Tasks == null))
                {
                    _Tasks = base.CreateObjectSet<Task>("Tasks");
                }
                return _Tasks;
            }
        }
        private ObjectSet<Task> _Tasks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TaskGroup> TaskGroups
        {
            get
            {
                if ((_TaskGroups == null))
                {
                    _TaskGroups = base.CreateObjectSet<TaskGroup>("TaskGroups");
                }
                return _TaskGroups;
            }
        }
        private ObjectSet<TaskGroup> _TaskGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Schedule> Schedules
        {
            get
            {
                if ((_Schedules == null))
                {
                    _Schedules = base.CreateObjectSet<Schedule>("Schedules");
                }
                return _Schedules;
            }
        }
        private ObjectSet<Schedule> _Schedules;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DirectTrackPayout> DirectTrackPayouts
        {
            get
            {
                if ((_DirectTrackPayouts == null))
                {
                    _DirectTrackPayouts = base.CreateObjectSet<DirectTrackPayout>("DirectTrackPayouts");
                }
                return _DirectTrackPayouts;
            }
        }
        private ObjectSet<DirectTrackPayout> _DirectTrackPayouts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DirectTrackAdvertiserGroup> DirectTrackAdvertiserGroups
        {
            get
            {
                if ((_DirectTrackAdvertiserGroups == null))
                {
                    _DirectTrackAdvertiserGroups = base.CreateObjectSet<DirectTrackAdvertiserGroup>("DirectTrackAdvertiserGroups");
                }
                return _DirectTrackAdvertiserGroups;
            }
        }
        private ObjectSet<DirectTrackAdvertiserGroup> _DirectTrackAdvertiserGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DirectTrackAffiliate> DirectTrackAffiliates
        {
            get
            {
                if ((_DirectTrackAffiliates == null))
                {
                    _DirectTrackAffiliates = base.CreateObjectSet<DirectTrackAffiliate>("DirectTrackAffiliates");
                }
                return _DirectTrackAffiliates;
            }
        }
        private ObjectSet<DirectTrackAffiliate> _DirectTrackAffiliates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DirectTrackAffiliateGroup> DirectTrackAffiliateGroups
        {
            get
            {
                if ((_DirectTrackAffiliateGroups == null))
                {
                    _DirectTrackAffiliateGroups = base.CreateObjectSet<DirectTrackAffiliateGroup>("DirectTrackAffiliateGroups");
                }
                return _DirectTrackAffiliateGroups;
            }
        }
        private ObjectSet<DirectTrackAffiliateGroup> _DirectTrackAffiliateGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DirectTrackStat> DirectTrackStats
        {
            get
            {
                if ((_DirectTrackStats == null))
                {
                    _DirectTrackStats = base.CreateObjectSet<DirectTrackStat>("DirectTrackStats");
                }
                return _DirectTrackStats;
            }
        }
        private ObjectSet<DirectTrackStat> _DirectTrackStats;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<QuickBooksInvoice> QuickBooksInvoices
        {
            get
            {
                if ((_QuickBooksInvoices == null))
                {
                    _QuickBooksInvoices = base.CreateObjectSet<QuickBooksInvoice>("QuickBooksInvoices");
                }
                return _QuickBooksInvoices;
            }
        }
        private ObjectSet<QuickBooksInvoice> _QuickBooksInvoices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Notification> Notifications
        {
            get
            {
                if ((_Notifications == null))
                {
                    _Notifications = base.CreateObjectSet<Notification>("Notifications");
                }
                return _Notifications;
            }
        }
        private ObjectSet<Notification> _Notifications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NotificationGroup> NotificationGroups
        {
            get
            {
                if ((_NotificationGroups == null))
                {
                    _NotificationGroups = base.CreateObjectSet<NotificationGroup>("NotificationGroups");
                }
                return _NotificationGroups;
            }
        }
        private ObjectSet<NotificationGroup> _NotificationGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmailService> EmailServices
        {
            get
            {
                if ((_EmailServices == null))
                {
                    _EmailServices = base.CreateObjectSet<EmailService>("EmailServices");
                }
                return _EmailServices;
            }
        }
        private ObjectSet<EmailService> _EmailServices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Message> Messages
        {
            get
            {
                if ((_Messages == null))
                {
                    _Messages = base.CreateObjectSet<Message>("Messages");
                }
                return _Messages;
            }
        }
        private ObjectSet<Message> _Messages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Menu> Menus
        {
            get
            {
                if ((_Menus == null))
                {
                    _Menus = base.CreateObjectSet<Menu>("Menus");
                }
                return _Menus;
            }
        }
        private ObjectSet<Menu> _Menus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MenuItem> MenuItems
        {
            get
            {
                if ((_MenuItems == null))
                {
                    _MenuItems = base.CreateObjectSet<MenuItem>("MenuItems");
                }
                return _MenuItems;
            }
        }
        private ObjectSet<MenuItem> _MenuItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<App> Apps
        {
            get
            {
                if ((_Apps == null))
                {
                    _Apps = base.CreateObjectSet<App>("Apps");
                }
                return _Apps;
            }
        }
        private ObjectSet<App> _Apps;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserGroup> UserGroups
        {
            get
            {
                if ((_UserGroups == null))
                {
                    _UserGroups = base.CreateObjectSet<UserGroup>("UserGroups");
                }
                return _UserGroups;
            }
        }
        private ObjectSet<UserGroup> _UserGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Screen> Screens
        {
            get
            {
                if ((_Screens == null))
                {
                    _Screens = base.CreateObjectSet<Screen>("Screens");
                }
                return _Screens;
            }
        }
        private ObjectSet<Screen> _Screens;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Employee> Employees
        {
            get
            {
                if ((_Employees == null))
                {
                    _Employees = base.CreateObjectSet<Employee>("Employees");
                }
                return _Employees;
            }
        }
        private ObjectSet<Employee> _Employees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DirectTrackCreative> DirectTrackCreatives
        {
            get
            {
                if ((_DirectTrackCreatives == null))
                {
                    _DirectTrackCreatives = base.CreateObjectSet<DirectTrackCreative>("DirectTrackCreatives");
                }
                return _DirectTrackCreatives;
            }
        }
        private ObjectSet<DirectTrackCreative> _DirectTrackCreatives;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LogEntry> LogEntries
        {
            get
            {
                if ((_LogEntries == null))
                {
                    _LogEntries = base.CreateObjectSet<LogEntry>("LogEntries");
                }
                return _LogEntries;
            }
        }
        private ObjectSet<LogEntry> _LogEntries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LogEntryType> LogEntryTypes
        {
            get
            {
                if ((_LogEntryTypes == null))
                {
                    _LogEntryTypes = base.CreateObjectSet<LogEntryType>("LogEntryTypes");
                }
                return _LogEntryTypes;
            }
        }
        private ObjectSet<LogEntryType> _LogEntryTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DirectTrackCampaignAllowedCountry> DirectTrackAllowedCountries
        {
            get
            {
                if ((_DirectTrackAllowedCountries == null))
                {
                    _DirectTrackAllowedCountries = base.CreateObjectSet<DirectTrackCampaignAllowedCountry>("DirectTrackAllowedCountries");
                }
                return _DirectTrackAllowedCountries;
            }
        }
        private ObjectSet<DirectTrackCampaignAllowedCountry> _DirectTrackAllowedCountries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExternalItem> ExternalItems
        {
            get
            {
                if ((_ExternalItems == null))
                {
                    _ExternalItems = base.CreateObjectSet<ExternalItem>("ExternalItems");
                }
                return _ExternalItems;
            }
        }
        private ObjectSet<ExternalItem> _ExternalItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DirectTrackCampaignGroup> DirectTrackCampaignGroups
        {
            get
            {
                if ((_DirectTrackCampaignGroups == null))
                {
                    _DirectTrackCampaignGroups = base.CreateObjectSet<DirectTrackCampaignGroup>("DirectTrackCampaignGroups");
                }
                return _DirectTrackCampaignGroups;
            }
        }
        private ObjectSet<DirectTrackCampaignGroup> _DirectTrackCampaignGroups;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Amounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAmounts(Amount amount)
        {
            base.AddObject("Amounts", amount);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Items EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItems(Item item)
        {
            base.AddObject("Items", item);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Periods EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPeriods(Period period)
        {
            base.AddObject("Periods", period);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Units EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUnits(Unit unit)
        {
            base.AddObject("Units", unit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UnitConversions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUnitConversions(UnitConversion unitConversion)
        {
            base.AddObject("UnitConversions", unitConversion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Clients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClients(Client client)
        {
            base.AddObject("Clients", client);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SqlServerDatabases EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSqlServerDatabases(SqlServerDatabase sqlServerDatabase)
        {
            base.AddObject("SqlServerDatabases", sqlServerDatabase);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Advertisers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdvertisers(Advertiser advertiser)
        {
            base.AddObject("Advertisers", advertiser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the QuickBooksCompanyFiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuickBooksCompanyFiles(QuickBooksCompanyFile quickBooksCompanyFile)
        {
            base.AddObject("QuickBooksCompanyFiles", quickBooksCompanyFile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Customers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomers(Customer customer)
        {
            base.AddObject("Customers", customer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Credits EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCredits(Credit credit)
        {
            base.AddObject("Credits", credit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Debits EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDebits(Debit debit)
        {
            base.AddObject("Debits", debit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Charges EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCharges(Charge charge)
        {
            base.AddObject("Charges", charge);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DateSpans EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDateSpans(DateSpan dateSpan)
        {
            base.AddObject("DateSpans", dateSpan);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdvertisingRevenues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdvertisingRevenues(AdvertisingRevenue advertisingRevenue)
        {
            base.AddObject("AdvertisingRevenues", advertisingRevenue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PayTerms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPayTerms(PayTerm payTerm)
        {
            base.AddObject("PayTerms", payTerm);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Campaigns EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCampaigns(Campaign campaign)
        {
            base.AddObject("Campaigns", campaign);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DirectTrackCampaigns EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDirectTrackCampaigns(DirectTrackCampaign directTrackCampaign)
        {
            base.AddObject("DirectTrackCampaigns", directTrackCampaign);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Payments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPayments(Payment payment)
        {
            base.AddObject("Payments", payment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the QuickBooksReceivedPayments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuickBooksReceivedPayments(QuickBooksReceivedPayment quickBooksReceivedPayment)
        {
            base.AddObject("QuickBooksReceivedPayments", quickBooksReceivedPayment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the QuickBooksCustomers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuickBooksCustomers(QuickBooksCustomer quickBooksCustomer)
        {
            base.AddObject("QuickBooksCustomers", quickBooksCustomer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DirectTrackAdvertisers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDirectTrackAdvertisers(DirectTrackAdvertiser directTrackAdvertiser)
        {
            base.AddObject("DirectTrackAdvertisers", directTrackAdvertiser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Logs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLogs(Log log)
        {
            base.AddObject("Logs", log);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DirectTrackResources EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDirectTrackResources(DirectTrackResource directTrackResource)
        {
            base.AddObject("DirectTrackResources", directTrackResource);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DirectTrackInstances EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDirectTrackInstances(DirectTrackInstance directTrackInstance)
        {
            base.AddObject("DirectTrackInstances", directTrackInstance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Permissions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPermissions(Permission permission)
        {
            base.AddObject("Permissions", permission);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PermissionGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPermissionGroups(PermissionGroup permissionGroup)
        {
            base.AddObject("PermissionGroups", permissionGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tasks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTasks(Task task)
        {
            base.AddObject("Tasks", task);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TaskGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTaskGroups(TaskGroup taskGroup)
        {
            base.AddObject("TaskGroups", taskGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Schedules EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSchedules(Schedule schedule)
        {
            base.AddObject("Schedules", schedule);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DirectTrackPayouts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDirectTrackPayouts(DirectTrackPayout directTrackPayout)
        {
            base.AddObject("DirectTrackPayouts", directTrackPayout);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DirectTrackAdvertiserGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDirectTrackAdvertiserGroups(DirectTrackAdvertiserGroup directTrackAdvertiserGroup)
        {
            base.AddObject("DirectTrackAdvertiserGroups", directTrackAdvertiserGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DirectTrackAffiliates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDirectTrackAffiliates(DirectTrackAffiliate directTrackAffiliate)
        {
            base.AddObject("DirectTrackAffiliates", directTrackAffiliate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DirectTrackAffiliateGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDirectTrackAffiliateGroups(DirectTrackAffiliateGroup directTrackAffiliateGroup)
        {
            base.AddObject("DirectTrackAffiliateGroups", directTrackAffiliateGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DirectTrackStats EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDirectTrackStats(DirectTrackStat directTrackStat)
        {
            base.AddObject("DirectTrackStats", directTrackStat);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the QuickBooksInvoices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuickBooksInvoices(QuickBooksInvoice quickBooksInvoice)
        {
            base.AddObject("QuickBooksInvoices", quickBooksInvoice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Notifications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNotifications(Notification notification)
        {
            base.AddObject("Notifications", notification);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NotificationGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNotificationGroups(NotificationGroup notificationGroup)
        {
            base.AddObject("NotificationGroups", notificationGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmailServices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmailServices(EmailService emailService)
        {
            base.AddObject("EmailServices", emailService);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Messages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMessages(Message message)
        {
            base.AddObject("Messages", message);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Menus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMenus(Menu menu)
        {
            base.AddObject("Menus", menu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MenuItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMenuItems(MenuItem menuItem)
        {
            base.AddObject("MenuItems", menuItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Apps EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApps(App app)
        {
            base.AddObject("Apps", app);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserGroups(UserGroup userGroup)
        {
            base.AddObject("UserGroups", userGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Screens EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToScreens(Screen screen)
        {
            base.AddObject("Screens", screen);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Employees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployees(Employee employee)
        {
            base.AddObject("Employees", employee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DirectTrackCreatives EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDirectTrackCreatives(DirectTrackCreative directTrackCreative)
        {
            base.AddObject("DirectTrackCreatives", directTrackCreative);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LogEntries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLogEntries(LogEntry logEntry)
        {
            base.AddObject("LogEntries", logEntry);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LogEntryTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLogEntryTypes(LogEntryType logEntryType)
        {
            base.AddObject("LogEntryTypes", logEntryType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DirectTrackAllowedCountries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDirectTrackAllowedCountries(DirectTrackCampaignAllowedCountry directTrackCampaignAllowedCountry)
        {
            base.AddObject("DirectTrackAllowedCountries", directTrackCampaignAllowedCountry);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ExternalItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExternalItems(ExternalItem externalItem)
        {
            base.AddObject("ExternalItems", externalItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DirectTrackCampaignGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDirectTrackCampaignGroups(DirectTrackCampaignGroup directTrackCampaignGroup)
        {
            base.AddObject("DirectTrackCampaignGroups", directTrackCampaignGroup);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="tableName">No Metadata Documentation available.</param>
        public int DeleteTable(global::System.String tableName)
        {
            ObjectParameter tableNameParameter;
            if (tableName != null)
            {
                tableNameParameter = new ObjectParameter("tableName", tableName);
            }
            else
            {
                tableNameParameter = new ObjectParameter("tableName", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("DeleteTable", tableNameParameter);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="Advertiser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Advertiser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Advertiser object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Advertiser CreateAdvertiser(global::System.Int32 id, global::System.String name)
        {
            Advertiser advertiser = new Advertiser();
            advertiser.Id = id;
            advertiser.Name = name;
            return advertiser;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "FK_Advertiser_Client", "Client")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("DirectAgentsModel.FK_Advertiser_Client", "Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("DirectAgentsModel.FK_Advertiser_Client", "Client").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("DirectAgentsModel.FK_Advertiser_Client", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("DirectAgentsModel.FK_Advertiser_Client", "Client", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "DirectTrackAdvertiserAdvertiser", "DirectTrackAdvertiser")]
        public EntityCollection<DirectTrackAdvertiser> DirectTrackAdvertisers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DirectTrackAdvertiser>("DirectAgentsModel.DirectTrackAdvertiserAdvertiser", "DirectTrackAdvertiser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DirectTrackAdvertiser>("DirectAgentsModel.DirectTrackAdvertiserAdvertiser", "DirectTrackAdvertiser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "AdvertiserCampaign", "Campaign")]
        public EntityCollection<Campaign> Campaigns
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Campaign>("DirectAgentsModel.AdvertiserCampaign", "Campaign");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Campaign>("DirectAgentsModel.AdvertiserCampaign", "Campaign", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="AdvertisingRevenue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdvertisingRevenue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdvertisingRevenue object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static AdvertisingRevenue CreateAdvertisingRevenue(global::System.Int32 id)
        {
            AdvertisingRevenue advertisingRevenue = new AdvertisingRevenue();
            advertisingRevenue.Id = id;
            return advertisingRevenue;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "FK_AdvertisingRevenue_Charge", "Charge")]
        public Charge Charge
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Charge>("DirectAgentsModel.FK_AdvertisingRevenue_Charge", "Charge").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Charge>("DirectAgentsModel.FK_AdvertisingRevenue_Charge", "Charge").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Charge> ChargeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Charge>("DirectAgentsModel.FK_AdvertisingRevenue_Charge", "Charge");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Charge>("DirectAgentsModel.FK_AdvertisingRevenue_Charge", "Charge", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "AdvertisingRevenueCampaign", "Campaign")]
        public Campaign Campaign
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Campaign>("DirectAgentsModel.AdvertisingRevenueCampaign", "Campaign").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Campaign>("DirectAgentsModel.AdvertisingRevenueCampaign", "Campaign").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Campaign> CampaignReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Campaign>("DirectAgentsModel.AdvertisingRevenueCampaign", "Campaign");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Campaign>("DirectAgentsModel.AdvertisingRevenueCampaign", "Campaign", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="Amount")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(CreditLimit))]
    public partial class Amount : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Amount object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        public static Amount CreateAmount(global::System.Int32 id, global::System.Decimal quantity)
        {
            Amount amount = new Amount();
            amount.Id = id;
            amount.Quantity = quantity;
            return amount;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Decimal _Quantity;
        partial void OnQuantityChanging(global::System.Decimal value);
        partial void OnQuantityChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "FK_Amount_Unit", "Unit")]
        public Unit Unit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("DirectAgentsModel.FK_Amount_Unit", "Unit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("DirectAgentsModel.FK_Amount_Unit", "Unit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Unit> UnitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("DirectAgentsModel.FK_Amount_Unit", "Unit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Unit>("DirectAgentsModel.FK_Amount_Unit", "Unit", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="App")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class App : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new App object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static App CreateApp(global::System.Int32 id)
        {
            App app = new App();
            app.Id = id;
            return app;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="Campaign")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Campaign : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Campaign object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Campaign CreateCampaign(global::System.Int32 id, global::System.String name)
        {
            Campaign campaign = new Campaign();
            campaign.Id = id;
            campaign.Name = name;
            return campaign;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "AdvertisingRevenueCampaign", "AdvertisingRevenue")]
        public EntityCollection<AdvertisingRevenue> AdvertisingRevenues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdvertisingRevenue>("DirectAgentsModel.AdvertisingRevenueCampaign", "AdvertisingRevenue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdvertisingRevenue>("DirectAgentsModel.AdvertisingRevenueCampaign", "AdvertisingRevenue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "AdvertiserCampaign", "Advertiser")]
        public Advertiser Advertiser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Advertiser>("DirectAgentsModel.AdvertiserCampaign", "Advertiser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Advertiser>("DirectAgentsModel.AdvertiserCampaign", "Advertiser").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Advertiser> AdvertiserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Advertiser>("DirectAgentsModel.AdvertiserCampaign", "Advertiser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Advertiser>("DirectAgentsModel.AdvertiserCampaign", "Advertiser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "CampaignDirectTrackCampaign", "DirectTrackCampaign")]
        public EntityCollection<DirectTrackCampaign> DirectTrackCampaigns
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DirectTrackCampaign>("DirectAgentsModel.CampaignDirectTrackCampaign", "DirectTrackCampaign");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DirectTrackCampaign>("DirectAgentsModel.CampaignDirectTrackCampaign", "DirectTrackCampaign", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="Charge")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Charge : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Charge object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Charge CreateCharge(global::System.Int32 id)
        {
            Charge charge = new Charge();
            charge.Id = id;
            return charge;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "FK_Charge_Debit", "Debit")]
        public Debit Debit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Debit>("DirectAgentsModel.FK_Charge_Debit", "Debit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Debit>("DirectAgentsModel.FK_Charge_Debit", "Debit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Debit> DebitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Debit>("DirectAgentsModel.FK_Charge_Debit", "Debit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Debit>("DirectAgentsModel.FK_Charge_Debit", "Debit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "FK_AdvertisingRevenue_Charge", "AdvertisingRevenue")]
        public EntityCollection<AdvertisingRevenue> AdvertisingRevenues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdvertisingRevenue>("DirectAgentsModel.FK_AdvertisingRevenue_Charge", "AdvertisingRevenue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdvertisingRevenue>("DirectAgentsModel.FK_AdvertisingRevenue_Charge", "AdvertisingRevenue", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="Client")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Client : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Client object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Client CreateClient(global::System.Int32 id, global::System.String name)
        {
            Client client = new Client();
            client.Id = id;
            client.Name = name;
            return client;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "FK_Item_Client", "Item")]
        public EntityCollection<Item> Items
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Item>("DirectAgentsModel.FK_Item_Client", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Item>("DirectAgentsModel.FK_Item_Client", "Item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "FK_Advertiser_Client", "Advertiser")]
        public EntityCollection<Advertiser> Advertisers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Advertiser>("DirectAgentsModel.FK_Advertiser_Client", "Advertiser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Advertiser>("DirectAgentsModel.FK_Advertiser_Client", "Advertiser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "FK_Customer_Client", "Customer")]
        public EntityCollection<Customer> Customers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Customer>("DirectAgentsModel.FK_Customer_Client", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Customer>("DirectAgentsModel.FK_Customer_Client", "Customer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "ClientPayTerm", "PayTerm")]
        public PayTerm PayTerm
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayTerm>("DirectAgentsModel.ClientPayTerm", "PayTerm").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayTerm>("DirectAgentsModel.ClientPayTerm", "PayTerm").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PayTerm> PayTermReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayTerm>("DirectAgentsModel.ClientPayTerm", "PayTerm");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PayTerm>("DirectAgentsModel.ClientPayTerm", "PayTerm", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "ClientCreditLimit", "CreditLimit")]
        public CreditLimit CreditLimit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CreditLimit>("DirectAgentsModel.ClientCreditLimit", "CreditLimit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CreditLimit>("DirectAgentsModel.ClientCreditLimit", "CreditLimit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CreditLimit> CreditLimitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CreditLimit>("DirectAgentsModel.ClientCreditLimit", "CreditLimit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CreditLimit>("DirectAgentsModel.ClientCreditLimit", "CreditLimit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "ClientStartingBalance", "StartingBalance")]
        public StartingBalance StartingBalance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StartingBalance>("DirectAgentsModel.ClientStartingBalance", "StartingBalance").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StartingBalance>("DirectAgentsModel.ClientStartingBalance", "StartingBalance").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StartingBalance> StartingBalanceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StartingBalance>("DirectAgentsModel.ClientStartingBalance", "StartingBalance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StartingBalance>("DirectAgentsModel.ClientStartingBalance", "StartingBalance", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="Credit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(StartingBalance))]
    public partial class Credit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Credit object.
        /// </summary>
        /// <param name="creditId">Initial value of the CreditId property.</param>
        public static Credit CreateCredit(global::System.Int32 creditId)
        {
            Credit credit = new Credit();
            credit.CreditId = creditId;
            return credit;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreditId
        {
            get
            {
                return _CreditId;
            }
            set
            {
                if (_CreditId != value)
                {
                    OnCreditIdChanging(value);
                    ReportPropertyChanging("CreditId");
                    _CreditId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CreditId");
                    OnCreditIdChanged();
                }
            }
        }
        private global::System.Int32 _CreditId;
        partial void OnCreditIdChanging(global::System.Int32 value);
        partial void OnCreditIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "FK_Credit_Item", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("DirectAgentsModel.FK_Credit_Item", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("DirectAgentsModel.FK_Credit_Item", "Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("DirectAgentsModel.FK_Credit_Item", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("DirectAgentsModel.FK_Credit_Item", "Item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "PaymentCredit", "Payment")]
        public EntityCollection<Payment> Payments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Payment>("DirectAgentsModel.PaymentCredit", "Payment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Payment>("DirectAgentsModel.PaymentCredit", "Payment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="CreditLimit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CreditLimit : Amount
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CreditLimit object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        public static CreditLimit CreateCreditLimit(global::System.Int32 id, global::System.Decimal quantity)
        {
            CreditLimit creditLimit = new CreditLimit();
            creditLimit.Id = id;
            creditLimit.Quantity = quantity;
            return creditLimit;
        }

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "ClientCreditLimit", "Client")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("DirectAgentsModel.ClientCreditLimit", "Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("DirectAgentsModel.ClientCreditLimit", "Client").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("DirectAgentsModel.ClientCreditLimit", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("DirectAgentsModel.ClientCreditLimit", "Client", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="Customer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Customer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Customer object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Customer CreateCustomer(global::System.Int32 id, global::System.String name)
        {
            Customer customer = new Customer();
            customer.Id = id;
            customer.Name = name;
            return customer;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "FK_Customer_Client", "Client")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("DirectAgentsModel.FK_Customer_Client", "Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("DirectAgentsModel.FK_Customer_Client", "Client").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("DirectAgentsModel.FK_Customer_Client", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("DirectAgentsModel.FK_Customer_Client", "Client", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "CustomerQuickBooksCustomer", "QuickBooksCustomer")]
        public EntityCollection<QuickBooksCustomer> QuickBooksCustomer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<QuickBooksCustomer>("DirectAgentsModel.CustomerQuickBooksCustomer", "QuickBooksCustomer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<QuickBooksCustomer>("DirectAgentsModel.CustomerQuickBooksCustomer", "QuickBooksCustomer", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="DateSpan")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DateSpan : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DateSpan object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="from">Initial value of the From property.</param>
        public static DateSpan CreateDateSpan(global::System.Int32 id, global::System.DateTime from)
        {
            DateSpan dateSpan = new DateSpan();
            dateSpan.Id = id;
            dateSpan.From = from;
            return dateSpan;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime From
        {
            get
            {
                return _From;
            }
            set
            {
                OnFromChanging(value);
                ReportPropertyChanging("From");
                _From = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("From");
                OnFromChanged();
            }
        }
        private global::System.DateTime _From;
        partial void OnFromChanging(global::System.DateTime value);
        partial void OnFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> To
        {
            get
            {
                return _To;
            }
            set
            {
                OnToChanging(value);
                ReportPropertyChanging("To");
                _To = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("To");
                OnToChanged();
            }
        }
        private Nullable<global::System.DateTime> _To;
        partial void OnToChanging(Nullable<global::System.DateTime> value);
        partial void OnToChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "FK_Item_DateSpan", "Item")]
        public EntityCollection<Item> Items
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Item>("DirectAgentsModel.FK_Item_DateSpan", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Item>("DirectAgentsModel.FK_Item_DateSpan", "Item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "FK_Period_DateSpan", "Period")]
        public EntityCollection<Period> Periods
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Period>("DirectAgentsModel.FK_Period_DateSpan", "Period");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Period>("DirectAgentsModel.FK_Period_DateSpan", "Period", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "DateSpanUnitConversion", "UnitConversion")]
        public EntityCollection<UnitConversion> UnitConversions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UnitConversion>("DirectAgentsModel.DateSpanUnitConversion", "UnitConversion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UnitConversion>("DirectAgentsModel.DateSpanUnitConversion", "UnitConversion", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="Debit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Debit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Debit object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Debit CreateDebit(global::System.Int32 id)
        {
            Debit debit = new Debit();
            debit.Id = id;
            return debit;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "FK_Charge_Debit", "Charge")]
        public EntityCollection<Charge> Charges
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Charge>("DirectAgentsModel.FK_Charge_Debit", "Charge");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Charge>("DirectAgentsModel.FK_Charge_Debit", "Charge", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "FK_Debit_Item", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("DirectAgentsModel.FK_Debit_Item", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("DirectAgentsModel.FK_Debit_Item", "Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("DirectAgentsModel.FK_Debit_Item", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("DirectAgentsModel.FK_Debit_Item", "Item", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="DirectTrackAdvertiser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DirectTrackAdvertiser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DirectTrackAdvertiser object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="advertiserId">Initial value of the AdvertiserId property.</param>
        public static DirectTrackAdvertiser CreateDirectTrackAdvertiser(global::System.Int32 id, global::System.Int32 advertiserId)
        {
            DirectTrackAdvertiser directTrackAdvertiser = new DirectTrackAdvertiser();
            directTrackAdvertiser.Id = id;
            directTrackAdvertiser.AdvertiserId = advertiserId;
            return directTrackAdvertiser;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AdvertiserId
        {
            get
            {
                return _AdvertiserId;
            }
            set
            {
                if (_AdvertiserId != value)
                {
                    OnAdvertiserIdChanging(value);
                    ReportPropertyChanging("AdvertiserId");
                    _AdvertiserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AdvertiserId");
                    OnAdvertiserIdChanged();
                }
            }
        }
        private global::System.Int32 _AdvertiserId;
        partial void OnAdvertiserIdChanging(global::System.Int32 value);
        partial void OnAdvertiserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "DirectTrackAdvertiserAdvertiser", "Advertiser")]
        public Advertiser Advertiser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Advertiser>("DirectAgentsModel.DirectTrackAdvertiserAdvertiser", "Advertiser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Advertiser>("DirectAgentsModel.DirectTrackAdvertiserAdvertiser", "Advertiser").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Advertiser> AdvertiserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Advertiser>("DirectAgentsModel.DirectTrackAdvertiserAdvertiser", "Advertiser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Advertiser>("DirectAgentsModel.DirectTrackAdvertiserAdvertiser", "Advertiser", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="DirectTrackAdvertiserGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DirectTrackAdvertiserGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DirectTrackAdvertiserGroup object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static DirectTrackAdvertiserGroup CreateDirectTrackAdvertiserGroup(global::System.Int32 id)
        {
            DirectTrackAdvertiserGroup directTrackAdvertiserGroup = new DirectTrackAdvertiserGroup();
            directTrackAdvertiserGroup.Id = id;
            return directTrackAdvertiserGroup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="DirectTrackAffiliate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DirectTrackAffiliate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DirectTrackAffiliate object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static DirectTrackAffiliate CreateDirectTrackAffiliate(global::System.Int32 id)
        {
            DirectTrackAffiliate directTrackAffiliate = new DirectTrackAffiliate();
            directTrackAffiliate.Id = id;
            return directTrackAffiliate;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="DirectTrackAffiliateGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DirectTrackAffiliateGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DirectTrackAffiliateGroup object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static DirectTrackAffiliateGroup CreateDirectTrackAffiliateGroup(global::System.Int32 id)
        {
            DirectTrackAffiliateGroup directTrackAffiliateGroup = new DirectTrackAffiliateGroup();
            directTrackAffiliateGroup.Id = id;
            return directTrackAffiliateGroup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="DirectTrackCampaign")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DirectTrackCampaign : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DirectTrackCampaign object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="campaignNumber">Initial value of the CampaignNumber property.</param>
        /// <param name="campaignName">Initial value of the CampaignName property.</param>
        public static DirectTrackCampaign CreateDirectTrackCampaign(global::System.Int32 id, global::System.Int32 campaignNumber, global::System.String campaignName)
        {
            DirectTrackCampaign directTrackCampaign = new DirectTrackCampaign();
            directTrackCampaign.Id = id;
            directTrackCampaign.CampaignNumber = campaignNumber;
            directTrackCampaign.CampaignName = campaignName;
            return directTrackCampaign;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CampaignNumber
        {
            get
            {
                return _CampaignNumber;
            }
            set
            {
                OnCampaignNumberChanging(value);
                ReportPropertyChanging("CampaignNumber");
                _CampaignNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CampaignNumber");
                OnCampaignNumberChanged();
            }
        }
        private global::System.Int32 _CampaignNumber;
        partial void OnCampaignNumberChanging(global::System.Int32 value);
        partial void OnCampaignNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CampaignName
        {
            get
            {
                return _CampaignName;
            }
            set
            {
                OnCampaignNameChanging(value);
                ReportPropertyChanging("CampaignName");
                _CampaignName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CampaignName");
                OnCampaignNameChanged();
            }
        }
        private global::System.String _CampaignName;
        partial void OnCampaignNameChanging(global::System.String value);
        partial void OnCampaignNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "DirectTrackCampaignGroupDirectTrackCampaign", "DirectTrackCampaignGroup")]
        public EntityCollection<DirectTrackCampaignGroup> DirectTrackCampaignGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DirectTrackCampaignGroup>("DirectAgentsModel.DirectTrackCampaignGroupDirectTrackCampaign", "DirectTrackCampaignGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DirectTrackCampaignGroup>("DirectAgentsModel.DirectTrackCampaignGroupDirectTrackCampaign", "DirectTrackCampaignGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "DirectTrackResourceDirectTrackCampaign", "DirectTrackResource")]
        public DirectTrackResource DirectTrackResource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DirectTrackResource>("DirectAgentsModel.DirectTrackResourceDirectTrackCampaign", "DirectTrackResource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DirectTrackResource>("DirectAgentsModel.DirectTrackResourceDirectTrackCampaign", "DirectTrackResource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DirectTrackResource> DirectTrackResourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DirectTrackResource>("DirectAgentsModel.DirectTrackResourceDirectTrackCampaign", "DirectTrackResource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DirectTrackResource>("DirectAgentsModel.DirectTrackResourceDirectTrackCampaign", "DirectTrackResource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "CampaignDirectTrackCampaign", "Campaign")]
        public Campaign Campaign
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Campaign>("DirectAgentsModel.CampaignDirectTrackCampaign", "Campaign").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Campaign>("DirectAgentsModel.CampaignDirectTrackCampaign", "Campaign").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Campaign> CampaignReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Campaign>("DirectAgentsModel.CampaignDirectTrackCampaign", "Campaign");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Campaign>("DirectAgentsModel.CampaignDirectTrackCampaign", "Campaign", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="DirectTrackCampaignAllowedCountry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DirectTrackCampaignAllowedCountry : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DirectTrackCampaignAllowedCountry object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static DirectTrackCampaignAllowedCountry CreateDirectTrackCampaignAllowedCountry(global::System.Int32 id)
        {
            DirectTrackCampaignAllowedCountry directTrackCampaignAllowedCountry = new DirectTrackCampaignAllowedCountry();
            directTrackCampaignAllowedCountry.Id = id;
            return directTrackCampaignAllowedCountry;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="DirectTrackCampaignGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DirectTrackCampaignGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DirectTrackCampaignGroup object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static DirectTrackCampaignGroup CreateDirectTrackCampaignGroup(global::System.Int32 id, global::System.String name)
        {
            DirectTrackCampaignGroup directTrackCampaignGroup = new DirectTrackCampaignGroup();
            directTrackCampaignGroup.Id = id;
            directTrackCampaignGroup.Name = name;
            return directTrackCampaignGroup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "DirectTrackCampaignGroupDirectTrackCampaign", "DirectTrackCampaign")]
        public EntityCollection<DirectTrackCampaign> DirectTrackCampaigns
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DirectTrackCampaign>("DirectAgentsModel.DirectTrackCampaignGroupDirectTrackCampaign", "DirectTrackCampaign");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DirectTrackCampaign>("DirectAgentsModel.DirectTrackCampaignGroupDirectTrackCampaign", "DirectTrackCampaign", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "DirectTrackResourceDirectTrackCampaignGroup", "DirectTrackResource")]
        public DirectTrackResource DirectTrackResource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DirectTrackResource>("DirectAgentsModel.DirectTrackResourceDirectTrackCampaignGroup", "DirectTrackResource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DirectTrackResource>("DirectAgentsModel.DirectTrackResourceDirectTrackCampaignGroup", "DirectTrackResource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DirectTrackResource> DirectTrackResourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DirectTrackResource>("DirectAgentsModel.DirectTrackResourceDirectTrackCampaignGroup", "DirectTrackResource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DirectTrackResource>("DirectAgentsModel.DirectTrackResourceDirectTrackCampaignGroup", "DirectTrackResource", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="DirectTrackCreative")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DirectTrackCreative : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DirectTrackCreative object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static DirectTrackCreative CreateDirectTrackCreative(global::System.Int32 id)
        {
            DirectTrackCreative directTrackCreative = new DirectTrackCreative();
            directTrackCreative.Id = id;
            return directTrackCreative;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="DirectTrackInstance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DirectTrackInstance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DirectTrackInstance object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static DirectTrackInstance CreateDirectTrackInstance(global::System.Int32 id)
        {
            DirectTrackInstance directTrackInstance = new DirectTrackInstance();
            directTrackInstance.Id = id;
            return directTrackInstance;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="DirectTrackPayout")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DirectTrackPayout : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DirectTrackPayout object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static DirectTrackPayout CreateDirectTrackPayout(global::System.Int32 id)
        {
            DirectTrackPayout directTrackPayout = new DirectTrackPayout();
            directTrackPayout.Id = id;
            return directTrackPayout;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="DirectTrackResource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DirectTrackResource : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DirectTrackResource object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="location">Initial value of the Location property.</param>
        /// <param name="xmlDoc">Initial value of the XmlDoc property.</param>
        /// <param name="updated">Initial value of the Updated property.</param>
        /// <param name="resourceName">Initial value of the ResourceName property.</param>
        public static DirectTrackResource CreateDirectTrackResource(global::System.Int32 id, global::System.String location, global::System.String xmlDoc, global::System.DateTime updated, global::System.String resourceName)
        {
            DirectTrackResource directTrackResource = new DirectTrackResource();
            directTrackResource.Id = id;
            directTrackResource.Location = location;
            directTrackResource.XmlDoc = xmlDoc;
            directTrackResource.Updated = updated;
            directTrackResource.ResourceName = resourceName;
            return directTrackResource;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String XmlDoc
        {
            get
            {
                return _XmlDoc;
            }
            set
            {
                OnXmlDocChanging(value);
                ReportPropertyChanging("XmlDoc");
                _XmlDoc = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("XmlDoc");
                OnXmlDocChanged();
            }
        }
        private global::System.String _XmlDoc;
        partial void OnXmlDocChanging(global::System.String value);
        partial void OnXmlDocChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ResourceName
        {
            get
            {
                return _ResourceName;
            }
            set
            {
                OnResourceNameChanging(value);
                ReportPropertyChanging("ResourceName");
                _ResourceName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ResourceName");
                OnResourceNameChanged();
            }
        }
        private global::System.String _ResourceName;
        partial void OnResourceNameChanging(global::System.String value);
        partial void OnResourceNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Pushed
        {
            get
            {
                return _Pushed;
            }
            set
            {
                OnPushedChanging(value);
                ReportPropertyChanging("Pushed");
                _Pushed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Pushed");
                OnPushedChanged();
            }
        }
        private Nullable<global::System.DateTime> _Pushed;
        partial void OnPushedChanging(Nullable<global::System.DateTime> value);
        partial void OnPushedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Posted
        {
            get
            {
                return _Posted;
            }
            set
            {
                OnPostedChanging(value);
                ReportPropertyChanging("Posted");
                _Posted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Posted");
                OnPostedChanged();
            }
        }
        private Nullable<global::System.DateTime> _Posted;
        partial void OnPostedChanging(Nullable<global::System.DateTime> value);
        partial void OnPostedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "DirectTrackResourceDirectTrackCampaignGroup", "DirectTrackCampaignGroup")]
        public DirectTrackCampaignGroup DirectTrackCampaignGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DirectTrackCampaignGroup>("DirectAgentsModel.DirectTrackResourceDirectTrackCampaignGroup", "DirectTrackCampaignGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DirectTrackCampaignGroup>("DirectAgentsModel.DirectTrackResourceDirectTrackCampaignGroup", "DirectTrackCampaignGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DirectTrackCampaignGroup> DirectTrackCampaignGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DirectTrackCampaignGroup>("DirectAgentsModel.DirectTrackResourceDirectTrackCampaignGroup", "DirectTrackCampaignGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DirectTrackCampaignGroup>("DirectAgentsModel.DirectTrackResourceDirectTrackCampaignGroup", "DirectTrackCampaignGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "DirectTrackResourceDirectTrackCampaign", "DirectTrackCampaign")]
        public DirectTrackCampaign DirectTrackCampaign
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DirectTrackCampaign>("DirectAgentsModel.DirectTrackResourceDirectTrackCampaign", "DirectTrackCampaign").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DirectTrackCampaign>("DirectAgentsModel.DirectTrackResourceDirectTrackCampaign", "DirectTrackCampaign").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DirectTrackCampaign> DirectTrackCampaignReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DirectTrackCampaign>("DirectAgentsModel.DirectTrackResourceDirectTrackCampaign", "DirectTrackCampaign");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DirectTrackCampaign>("DirectAgentsModel.DirectTrackResourceDirectTrackCampaign", "DirectTrackCampaign", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="DirectTrackStat")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DirectTrackStat : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DirectTrackStat object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static DirectTrackStat CreateDirectTrackStat(global::System.Int32 id)
        {
            DirectTrackStat directTrackStat = new DirectTrackStat();
            directTrackStat.Id = id;
            return directTrackStat;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="EmailService")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmailService : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmailService object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static EmailService CreateEmailService(global::System.Int32 id)
        {
            EmailService emailService = new EmailService();
            emailService.Id = id;
            return emailService;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="Employee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Employee object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Employee CreateEmployee(global::System.Int32 id)
        {
            Employee employee = new Employee();
            employee.Id = id;
            return employee;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="ExternalItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExternalItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExternalItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="externalId">Initial value of the ExternalId property.</param>
        public static ExternalItem CreateExternalItem(global::System.Int32 id, global::System.Int32 externalId)
        {
            ExternalItem externalItem = new ExternalItem();
            externalItem.Id = id;
            externalItem.ExternalId = externalId;
            return externalItem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExternalId
        {
            get
            {
                return _ExternalId;
            }
            set
            {
                OnExternalIdChanging(value);
                ReportPropertyChanging("ExternalId");
                _ExternalId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExternalId");
                OnExternalIdChanged();
            }
        }
        private global::System.Int32 _ExternalId;
        partial void OnExternalIdChanging(global::System.Int32 value);
        partial void OnExternalIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "SqlServerDatabaseExternalItem", "SqlServerDatabase")]
        public SqlServerDatabase SqlServerDatabase
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SqlServerDatabase>("DirectAgentsModel.SqlServerDatabaseExternalItem", "SqlServerDatabase").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SqlServerDatabase>("DirectAgentsModel.SqlServerDatabaseExternalItem", "SqlServerDatabase").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SqlServerDatabase> SqlServerDatabaseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SqlServerDatabase>("DirectAgentsModel.SqlServerDatabaseExternalItem", "SqlServerDatabase");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SqlServerDatabase>("DirectAgentsModel.SqlServerDatabaseExternalItem", "SqlServerDatabase", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "ExternalItemAdvertisingRevenue", "AdvertisingRevenue")]
        public AdvertisingRevenue AdvertisingRevenue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdvertisingRevenue>("DirectAgentsModel.ExternalItemAdvertisingRevenue", "AdvertisingRevenue").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdvertisingRevenue>("DirectAgentsModel.ExternalItemAdvertisingRevenue", "AdvertisingRevenue").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AdvertisingRevenue> AdvertisingRevenueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdvertisingRevenue>("DirectAgentsModel.ExternalItemAdvertisingRevenue", "AdvertisingRevenue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AdvertisingRevenue>("DirectAgentsModel.ExternalItemAdvertisingRevenue", "AdvertisingRevenue", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="Item")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Item : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Item object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Item CreateItem(global::System.Int32 id)
        {
            Item item = new Item();
            item.Id = id;
            return item;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "FK_Item_Amount", "Amount")]
        public Amount Amount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Amount>("DirectAgentsModel.FK_Item_Amount", "Amount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Amount>("DirectAgentsModel.FK_Item_Amount", "Amount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Amount> AmountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Amount>("DirectAgentsModel.FK_Item_Amount", "Amount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Amount>("DirectAgentsModel.FK_Item_Amount", "Amount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "FK_Item_Client", "Client")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("DirectAgentsModel.FK_Item_Client", "Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("DirectAgentsModel.FK_Item_Client", "Client").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("DirectAgentsModel.FK_Item_Client", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("DirectAgentsModel.FK_Item_Client", "Client", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "FK_Credit_Item", "Credit")]
        public EntityCollection<Credit> Credits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Credit>("DirectAgentsModel.FK_Credit_Item", "Credit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Credit>("DirectAgentsModel.FK_Credit_Item", "Credit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "FK_Debit_Item", "Debit")]
        public EntityCollection<Debit> Debits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Debit>("DirectAgentsModel.FK_Debit_Item", "Debit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Debit>("DirectAgentsModel.FK_Debit_Item", "Debit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "FK_Item_DateSpan", "DateSpan")]
        public DateSpan DateSpan
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DateSpan>("DirectAgentsModel.FK_Item_DateSpan", "DateSpan").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DateSpan>("DirectAgentsModel.FK_Item_DateSpan", "DateSpan").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DateSpan> DateSpanReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DateSpan>("DirectAgentsModel.FK_Item_DateSpan", "DateSpan");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DateSpan>("DirectAgentsModel.FK_Item_DateSpan", "DateSpan", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="Log")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Log : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Log object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Log CreateLog(global::System.Int32 id, global::System.String name)
        {
            Log log = new Log();
            log.Id = id;
            log.Name = name;
            return log;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "FK_LogEntry_Log", "LogEntry")]
        public EntityCollection<LogEntry> LogEntries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LogEntry>("DirectAgentsModel.FK_LogEntry_Log", "LogEntry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LogEntry>("DirectAgentsModel.FK_LogEntry_Log", "LogEntry", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="LogEntry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LogEntry : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LogEntry object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static LogEntry CreateLogEntry(global::System.Int32 id)
        {
            LogEntry logEntry = new LogEntry();
            logEntry.Id = id;
            return logEntry;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StringData
        {
            get
            {
                return _StringData;
            }
            set
            {
                OnStringDataChanging(value);
                ReportPropertyChanging("StringData");
                _StringData = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StringData");
                OnStringDataChanged();
            }
        }
        private global::System.String _StringData;
        partial void OnStringDataChanging(global::System.String value);
        partial void OnStringDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _Created;
        partial void OnCreatedChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "FK_LogEntry_Log", "Log")]
        public Log Log
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Log>("DirectAgentsModel.FK_LogEntry_Log", "Log").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Log>("DirectAgentsModel.FK_LogEntry_Log", "Log").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Log> LogReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Log>("DirectAgentsModel.FK_LogEntry_Log", "Log");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Log>("DirectAgentsModel.FK_LogEntry_Log", "Log", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "LogEntryTypeLogEntry", "LogEntryType")]
        public LogEntryType LogEntryType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LogEntryType>("DirectAgentsModel.LogEntryTypeLogEntry", "LogEntryType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LogEntryType>("DirectAgentsModel.LogEntryTypeLogEntry", "LogEntryType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LogEntryType> LogEntryTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LogEntryType>("DirectAgentsModel.LogEntryTypeLogEntry", "LogEntryType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LogEntryType>("DirectAgentsModel.LogEntryTypeLogEntry", "LogEntryType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="LogEntryType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LogEntryType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LogEntryType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static LogEntryType CreateLogEntryType(global::System.Int32 id, global::System.String name)
        {
            LogEntryType logEntryType = new LogEntryType();
            logEntryType.Id = id;
            logEntryType.Name = name;
            return logEntryType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "LogEntryTypeLogEntry", "LogEntry")]
        public EntityCollection<LogEntry> LogEntries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LogEntry>("DirectAgentsModel.LogEntryTypeLogEntry", "LogEntry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LogEntry>("DirectAgentsModel.LogEntryTypeLogEntry", "LogEntry", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="Menu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Menu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Menu object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Menu CreateMenu(global::System.Int32 id)
        {
            Menu menu = new Menu();
            menu.Id = id;
            return menu;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="MenuItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MenuItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MenuItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static MenuItem CreateMenuItem(global::System.Int32 id)
        {
            MenuItem menuItem = new MenuItem();
            menuItem.Id = id;
            return menuItem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="Message")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Message : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Message object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Message CreateMessage(global::System.Int32 id)
        {
            Message message = new Message();
            message.Id = id;
            return message;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="Notification")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Notification : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Notification object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Notification CreateNotification(global::System.Int32 id)
        {
            Notification notification = new Notification();
            notification.Id = id;
            return notification;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="NotificationGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NotificationGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NotificationGroup object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static NotificationGroup CreateNotificationGroup(global::System.Int32 id)
        {
            NotificationGroup notificationGroup = new NotificationGroup();
            notificationGroup.Id = id;
            return notificationGroup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="Payment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Payment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Payment object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Payment CreatePayment(global::System.Int32 id)
        {
            Payment payment = new Payment();
            payment.Id = id;
            return payment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "PaymentCredit", "Credit")]
        public Credit Credit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Credit>("DirectAgentsModel.PaymentCredit", "Credit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Credit>("DirectAgentsModel.PaymentCredit", "Credit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Credit> CreditReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Credit>("DirectAgentsModel.PaymentCredit", "Credit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Credit>("DirectAgentsModel.PaymentCredit", "Credit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "PaymentQuickBooksReceivedPayment", "QuickBooksReceivedPayment")]
        public QuickBooksReceivedPayment QuickBooksReceivedPayment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuickBooksReceivedPayment>("DirectAgentsModel.PaymentQuickBooksReceivedPayment", "QuickBooksReceivedPayment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuickBooksReceivedPayment>("DirectAgentsModel.PaymentQuickBooksReceivedPayment", "QuickBooksReceivedPayment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<QuickBooksReceivedPayment> QuickBooksReceivedPaymentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuickBooksReceivedPayment>("DirectAgentsModel.PaymentQuickBooksReceivedPayment", "QuickBooksReceivedPayment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<QuickBooksReceivedPayment>("DirectAgentsModel.PaymentQuickBooksReceivedPayment", "QuickBooksReceivedPayment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="PayTerm")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PayTerm : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PayTerm object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static PayTerm CreatePayTerm(global::System.Int32 id, global::System.String name)
        {
            PayTerm payTerm = new PayTerm();
            payTerm.Id = id;
            payTerm.Name = name;
            return payTerm;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "ClientPayTerm", "Client")]
        public EntityCollection<Client> Clients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Client>("DirectAgentsModel.ClientPayTerm", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Client>("DirectAgentsModel.ClientPayTerm", "Client", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="Period")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Period : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Period object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Period CreatePeriod(global::System.Int32 id, global::System.String name)
        {
            Period period = new Period();
            period.Id = id;
            period.Name = name;
            return period;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "FK_Period_DateSpan", "DateSpan")]
        public DateSpan DateSpan
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DateSpan>("DirectAgentsModel.FK_Period_DateSpan", "DateSpan").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DateSpan>("DirectAgentsModel.FK_Period_DateSpan", "DateSpan").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DateSpan> DateSpanReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DateSpan>("DirectAgentsModel.FK_Period_DateSpan", "DateSpan");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DateSpan>("DirectAgentsModel.FK_Period_DateSpan", "DateSpan", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "SqlServerDatabasePeriod", "SqlServerDatabase")]
        public EntityCollection<SqlServerDatabase> SqlServerDatabases
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SqlServerDatabase>("DirectAgentsModel.SqlServerDatabasePeriod", "SqlServerDatabase");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SqlServerDatabase>("DirectAgentsModel.SqlServerDatabasePeriod", "SqlServerDatabase", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="Permission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Permission : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Permission object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Permission CreatePermission(global::System.Int32 id)
        {
            Permission permission = new Permission();
            permission.Id = id;
            return permission;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="PermissionGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PermissionGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PermissionGroup object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static PermissionGroup CreatePermissionGroup(global::System.Int32 id)
        {
            PermissionGroup permissionGroup = new PermissionGroup();
            permissionGroup.Id = id;
            return permissionGroup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="QuickBooksCompanyFile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class QuickBooksCompanyFile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new QuickBooksCompanyFile object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static QuickBooksCompanyFile CreateQuickBooksCompanyFile(global::System.Int32 id, global::System.String name)
        {
            QuickBooksCompanyFile quickBooksCompanyFile = new QuickBooksCompanyFile();
            quickBooksCompanyFile.Id = id;
            quickBooksCompanyFile.Name = name;
            return quickBooksCompanyFile;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "QuickBooksReceivedPaymentQuickBooksCompanyFile", "QuickBooksReceivedPayment")]
        public EntityCollection<QuickBooksReceivedPayment> QuickBooksReceivedPayments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<QuickBooksReceivedPayment>("DirectAgentsModel.QuickBooksReceivedPaymentQuickBooksCompanyFile", "QuickBooksReceivedPayment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<QuickBooksReceivedPayment>("DirectAgentsModel.QuickBooksReceivedPaymentQuickBooksCompanyFile", "QuickBooksReceivedPayment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "QuickBooksCompanyFileQuickBooksCustomer", "QuickBooksCustomer")]
        public EntityCollection<QuickBooksCustomer> QuickBooksCustomers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<QuickBooksCustomer>("DirectAgentsModel.QuickBooksCompanyFileQuickBooksCustomer", "QuickBooksCustomer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<QuickBooksCustomer>("DirectAgentsModel.QuickBooksCompanyFileQuickBooksCustomer", "QuickBooksCustomer", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="QuickBooksCustomer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class QuickBooksCustomer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new QuickBooksCustomer object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="listId">Initial value of the ListId property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        /// <param name="companyName">Initial value of the CompanyName property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="termsRefFullName">Initial value of the TermsRefFullName property.</param>
        public static QuickBooksCustomer CreateQuickBooksCustomer(global::System.Int32 id, global::System.String listId, global::System.String fullName, global::System.String companyName, global::System.String email, global::System.String termsRefFullName)
        {
            QuickBooksCustomer quickBooksCustomer = new QuickBooksCustomer();
            quickBooksCustomer.Id = id;
            quickBooksCustomer.ListId = listId;
            quickBooksCustomer.FullName = fullName;
            quickBooksCustomer.CompanyName = companyName;
            quickBooksCustomer.Email = email;
            quickBooksCustomer.TermsRefFullName = termsRefFullName;
            return quickBooksCustomer;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ListId
        {
            get
            {
                return _ListId;
            }
            set
            {
                OnListIdChanging(value);
                ReportPropertyChanging("ListId");
                _ListId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ListId");
                OnListIdChanged();
            }
        }
        private global::System.String _ListId;
        partial void OnListIdChanging(global::System.String value);
        partial void OnListIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone = "not known";
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TermsRefFullName
        {
            get
            {
                return _TermsRefFullName;
            }
            set
            {
                OnTermsRefFullNameChanging(value);
                ReportPropertyChanging("TermsRefFullName");
                _TermsRefFullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TermsRefFullName");
                OnTermsRefFullNameChanged();
            }
        }
        private global::System.String _TermsRefFullName;
        partial void OnTermsRefFullNameChanging(global::System.String value);
        partial void OnTermsRefFullNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "CustomerQuickBooksCustomer", "Customer")]
        public Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("DirectAgentsModel.CustomerQuickBooksCustomer", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("DirectAgentsModel.CustomerQuickBooksCustomer", "Customer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("DirectAgentsModel.CustomerQuickBooksCustomer", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customer>("DirectAgentsModel.CustomerQuickBooksCustomer", "Customer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "QuickBooksCompanyFileQuickBooksCustomer", "QuickBooksCompanyFile")]
        public QuickBooksCompanyFile QuickBooksCompanyFile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuickBooksCompanyFile>("DirectAgentsModel.QuickBooksCompanyFileQuickBooksCustomer", "QuickBooksCompanyFile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuickBooksCompanyFile>("DirectAgentsModel.QuickBooksCompanyFileQuickBooksCustomer", "QuickBooksCompanyFile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<QuickBooksCompanyFile> QuickBooksCompanyFileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuickBooksCompanyFile>("DirectAgentsModel.QuickBooksCompanyFileQuickBooksCustomer", "QuickBooksCompanyFile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<QuickBooksCompanyFile>("DirectAgentsModel.QuickBooksCompanyFileQuickBooksCustomer", "QuickBooksCompanyFile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "QuickBooksCustomerQuickBooksReceivedPayment", "QuickBooksReceivedPayment")]
        public EntityCollection<QuickBooksReceivedPayment> QuickBooksReceivedPayments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<QuickBooksReceivedPayment>("DirectAgentsModel.QuickBooksCustomerQuickBooksReceivedPayment", "QuickBooksReceivedPayment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<QuickBooksReceivedPayment>("DirectAgentsModel.QuickBooksCustomerQuickBooksReceivedPayment", "QuickBooksReceivedPayment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="QuickBooksInvoice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class QuickBooksInvoice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new QuickBooksInvoice object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static QuickBooksInvoice CreateQuickBooksInvoice(global::System.Int32 id)
        {
            QuickBooksInvoice quickBooksInvoice = new QuickBooksInvoice();
            quickBooksInvoice.Id = id;
            return quickBooksInvoice;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="QuickBooksReceivedPayment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class QuickBooksReceivedPayment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new QuickBooksReceivedPayment object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="txnNumber">Initial value of the TxnNumber property.</param>
        /// <param name="txnId">Initial value of the TxnId property.</param>
        /// <param name="aRAccountRefFullName">Initial value of the ARAccountRefFullName property.</param>
        /// <param name="txnDate">Initial value of the TxnDate property.</param>
        /// <param name="totalAmount">Initial value of the TotalAmount property.</param>
        /// <param name="paymentMethodRefFullName">Initial value of the PaymentMethodRefFullName property.</param>
        public static QuickBooksReceivedPayment CreateQuickBooksReceivedPayment(global::System.Int32 id, global::System.String txnNumber, global::System.String txnId, global::System.String aRAccountRefFullName, global::System.DateTime txnDate, global::System.Decimal totalAmount, global::System.String paymentMethodRefFullName)
        {
            QuickBooksReceivedPayment quickBooksReceivedPayment = new QuickBooksReceivedPayment();
            quickBooksReceivedPayment.Id = id;
            quickBooksReceivedPayment.TxnNumber = txnNumber;
            quickBooksReceivedPayment.TxnId = txnId;
            quickBooksReceivedPayment.ARAccountRefFullName = aRAccountRefFullName;
            quickBooksReceivedPayment.TxnDate = txnDate;
            quickBooksReceivedPayment.TotalAmount = totalAmount;
            quickBooksReceivedPayment.PaymentMethodRefFullName = paymentMethodRefFullName;
            return quickBooksReceivedPayment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TxnNumber
        {
            get
            {
                return _TxnNumber;
            }
            set
            {
                OnTxnNumberChanging(value);
                ReportPropertyChanging("TxnNumber");
                _TxnNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TxnNumber");
                OnTxnNumberChanged();
            }
        }
        private global::System.String _TxnNumber;
        partial void OnTxnNumberChanging(global::System.String value);
        partial void OnTxnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Memo
        {
            get
            {
                return _Memo;
            }
            set
            {
                OnMemoChanging(value);
                ReportPropertyChanging("Memo");
                _Memo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Memo");
                OnMemoChanged();
            }
        }
        private global::System.String _Memo;
        partial void OnMemoChanging(global::System.String value);
        partial void OnMemoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TxnId
        {
            get
            {
                return _TxnId;
            }
            set
            {
                OnTxnIdChanging(value);
                ReportPropertyChanging("TxnId");
                _TxnId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TxnId");
                OnTxnIdChanged();
            }
        }
        private global::System.String _TxnId;
        partial void OnTxnIdChanging(global::System.String value);
        partial void OnTxnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ARAccountRefFullName
        {
            get
            {
                return _ARAccountRefFullName;
            }
            set
            {
                OnARAccountRefFullNameChanging(value);
                ReportPropertyChanging("ARAccountRefFullName");
                _ARAccountRefFullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ARAccountRefFullName");
                OnARAccountRefFullNameChanged();
            }
        }
        private global::System.String _ARAccountRefFullName;
        partial void OnARAccountRefFullNameChanging(global::System.String value);
        partial void OnARAccountRefFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TxnDate
        {
            get
            {
                return _TxnDate;
            }
            set
            {
                OnTxnDateChanging(value);
                ReportPropertyChanging("TxnDate");
                _TxnDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TxnDate");
                OnTxnDateChanged();
            }
        }
        private global::System.DateTime _TxnDate;
        partial void OnTxnDateChanging(global::System.DateTime value);
        partial void OnTxnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TotalAmount
        {
            get
            {
                return _TotalAmount;
            }
            set
            {
                OnTotalAmountChanging(value);
                ReportPropertyChanging("TotalAmount");
                _TotalAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalAmount");
                OnTotalAmountChanged();
            }
        }
        private global::System.Decimal _TotalAmount;
        partial void OnTotalAmountChanging(global::System.Decimal value);
        partial void OnTotalAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PaymentMethodRefFullName
        {
            get
            {
                return _PaymentMethodRefFullName;
            }
            set
            {
                OnPaymentMethodRefFullNameChanging(value);
                ReportPropertyChanging("PaymentMethodRefFullName");
                _PaymentMethodRefFullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PaymentMethodRefFullName");
                OnPaymentMethodRefFullNameChanged();
            }
        }
        private global::System.String _PaymentMethodRefFullName;
        partial void OnPaymentMethodRefFullNameChanging(global::System.String value);
        partial void OnPaymentMethodRefFullNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "QuickBooksReceivedPaymentQuickBooksCompanyFile", "QuickBooksCompanyFile")]
        public QuickBooksCompanyFile QuickBooksCompanyFile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuickBooksCompanyFile>("DirectAgentsModel.QuickBooksReceivedPaymentQuickBooksCompanyFile", "QuickBooksCompanyFile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuickBooksCompanyFile>("DirectAgentsModel.QuickBooksReceivedPaymentQuickBooksCompanyFile", "QuickBooksCompanyFile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<QuickBooksCompanyFile> QuickBooksCompanyFileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuickBooksCompanyFile>("DirectAgentsModel.QuickBooksReceivedPaymentQuickBooksCompanyFile", "QuickBooksCompanyFile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<QuickBooksCompanyFile>("DirectAgentsModel.QuickBooksReceivedPaymentQuickBooksCompanyFile", "QuickBooksCompanyFile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "PaymentQuickBooksReceivedPayment", "Payment")]
        public EntityCollection<Payment> Payment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Payment>("DirectAgentsModel.PaymentQuickBooksReceivedPayment", "Payment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Payment>("DirectAgentsModel.PaymentQuickBooksReceivedPayment", "Payment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "QuickBooksCustomerQuickBooksReceivedPayment", "QuickBooksCustomer")]
        public QuickBooksCustomer QuickBooksCustomer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuickBooksCustomer>("DirectAgentsModel.QuickBooksCustomerQuickBooksReceivedPayment", "QuickBooksCustomer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuickBooksCustomer>("DirectAgentsModel.QuickBooksCustomerQuickBooksReceivedPayment", "QuickBooksCustomer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<QuickBooksCustomer> QuickBooksCustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuickBooksCustomer>("DirectAgentsModel.QuickBooksCustomerQuickBooksReceivedPayment", "QuickBooksCustomer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<QuickBooksCustomer>("DirectAgentsModel.QuickBooksCustomerQuickBooksReceivedPayment", "QuickBooksCustomer", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="Schedule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Schedule : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Schedule object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Schedule CreateSchedule(global::System.Int32 id)
        {
            Schedule schedule = new Schedule();
            schedule.Id = id;
            return schedule;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="Screen")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Screen : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Screen object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Screen CreateScreen(global::System.Int32 id)
        {
            Screen screen = new Screen();
            screen.Id = id;
            return screen;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="SqlServerDatabase")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SqlServerDatabase : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SqlServerDatabase object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="connectionString">Initial value of the ConnectionString property.</param>
        public static SqlServerDatabase CreateSqlServerDatabase(global::System.Int32 id, global::System.String name, global::System.String connectionString)
        {
            SqlServerDatabase sqlServerDatabase = new SqlServerDatabase();
            sqlServerDatabase.Id = id;
            sqlServerDatabase.Name = name;
            sqlServerDatabase.ConnectionString = connectionString;
            return sqlServerDatabase;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ConnectionString
        {
            get
            {
                return _ConnectionString;
            }
            set
            {
                OnConnectionStringChanging(value);
                ReportPropertyChanging("ConnectionString");
                _ConnectionString = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ConnectionString");
                OnConnectionStringChanged();
            }
        }
        private global::System.String _ConnectionString;
        partial void OnConnectionStringChanging(global::System.String value);
        partial void OnConnectionStringChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "SqlServerDatabasePeriod", "Period")]
        public Period Period
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("DirectAgentsModel.SqlServerDatabasePeriod", "Period").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("DirectAgentsModel.SqlServerDatabasePeriod", "Period").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Period> PeriodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("DirectAgentsModel.SqlServerDatabasePeriod", "Period");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Period>("DirectAgentsModel.SqlServerDatabasePeriod", "Period", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "SqlServerDatabaseExternalItem", "ExternalItem")]
        public EntityCollection<ExternalItem> ExternalItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExternalItem>("DirectAgentsModel.SqlServerDatabaseExternalItem", "ExternalItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExternalItem>("DirectAgentsModel.SqlServerDatabaseExternalItem", "ExternalItem", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="StartingBalance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StartingBalance : Credit
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StartingBalance object.
        /// </summary>
        /// <param name="creditId">Initial value of the CreditId property.</param>
        public static StartingBalance CreateStartingBalance(global::System.Int32 creditId)
        {
            StartingBalance startingBalance = new StartingBalance();
            startingBalance.CreditId = creditId;
            return startingBalance;
        }

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "ClientStartingBalance", "Client")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("DirectAgentsModel.ClientStartingBalance", "Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("DirectAgentsModel.ClientStartingBalance", "Client").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("DirectAgentsModel.ClientStartingBalance", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("DirectAgentsModel.ClientStartingBalance", "Client", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="Task")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Task : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Task object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Task CreateTask(global::System.Int32 id)
        {
            Task task = new Task();
            task.Id = id;
            return task;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="TaskGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaskGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TaskGroup object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static TaskGroup CreateTaskGroup(global::System.Int32 id)
        {
            TaskGroup taskGroup = new TaskGroup();
            taskGroup.Id = id;
            return taskGroup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="Unit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Unit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Unit object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Unit CreateUnit(global::System.Int32 id, global::System.String name)
        {
            Unit unit = new Unit();
            unit.Id = id;
            unit.Name = name;
            return unit;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "FK_Amount_Unit", "Amount")]
        public EntityCollection<Amount> Amounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Amount>("DirectAgentsModel.FK_Amount_Unit", "Amount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Amount>("DirectAgentsModel.FK_Amount_Unit", "Amount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "FK_UnitConversion_Unit", "UnitConversion")]
        public EntityCollection<UnitConversion> FromUnitConversions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UnitConversion>("DirectAgentsModel.FK_UnitConversion_Unit", "UnitConversion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UnitConversion>("DirectAgentsModel.FK_UnitConversion_Unit", "UnitConversion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "FK_UnitConversion_Unit1", "UnitConversion")]
        public EntityCollection<UnitConversion> ToUnitConversions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UnitConversion>("DirectAgentsModel.FK_UnitConversion_Unit1", "UnitConversion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UnitConversion>("DirectAgentsModel.FK_UnitConversion_Unit1", "UnitConversion", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="UnitConversion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UnitConversion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UnitConversion object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="multiplier">Initial value of the Multiplier property.</param>
        public static UnitConversion CreateUnitConversion(global::System.Int32 id, global::System.Decimal multiplier)
        {
            UnitConversion unitConversion = new UnitConversion();
            unitConversion.Id = id;
            unitConversion.Multiplier = multiplier;
            return unitConversion;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Multiplier
        {
            get
            {
                return _Multiplier;
            }
            set
            {
                OnMultiplierChanging(value);
                ReportPropertyChanging("Multiplier");
                _Multiplier = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Multiplier");
                OnMultiplierChanged();
            }
        }
        private global::System.Decimal _Multiplier;
        partial void OnMultiplierChanging(global::System.Decimal value);
        partial void OnMultiplierChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "FK_UnitConversion_Unit", "Unit")]
        public Unit From
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("DirectAgentsModel.FK_UnitConversion_Unit", "Unit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("DirectAgentsModel.FK_UnitConversion_Unit", "Unit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Unit> FromReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("DirectAgentsModel.FK_UnitConversion_Unit", "Unit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Unit>("DirectAgentsModel.FK_UnitConversion_Unit", "Unit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "FK_UnitConversion_Unit1", "Unit")]
        public Unit To
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("DirectAgentsModel.FK_UnitConversion_Unit1", "Unit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("DirectAgentsModel.FK_UnitConversion_Unit1", "Unit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Unit> ToReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("DirectAgentsModel.FK_UnitConversion_Unit1", "Unit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Unit>("DirectAgentsModel.FK_UnitConversion_Unit1", "Unit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectAgentsModel", "DateSpanUnitConversion", "DateSpan")]
        public DateSpan DateSpan
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DateSpan>("DirectAgentsModel.DateSpanUnitConversion", "DateSpan").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DateSpan>("DirectAgentsModel.DateSpanUnitConversion", "DateSpan").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DateSpan> DateSpanReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DateSpan>("DirectAgentsModel.DateSpanUnitConversion", "DateSpan");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DateSpan>("DirectAgentsModel.DateSpanUnitConversion", "DateSpan", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String name)
        {
            User user = new User();
            user.Id = id;
            user.Name = name;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectAgentsModel", Name="UserGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserGroup object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static UserGroup CreateUserGroup(global::System.Int32 id)
        {
            UserGroup userGroup = new UserGroup();
            userGroup.Id = id;
            return userGroup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
    }

    #endregion
    
}
