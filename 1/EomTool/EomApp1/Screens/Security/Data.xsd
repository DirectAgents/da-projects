<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="Data" targetNamespace="http://tempuri.org/DataSet1.xsd" xmlns:mstns="http://tempuri.org/DataSet1.xsd" xmlns="http://tempuri.org/DataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="EomToolSecurityConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="EomToolSecurityConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.EomApp1.Properties.Settings.GlobalReference.Default.EomToolSecurityConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="GroupsTableAdapter" GeneratorDataComponentClassName="GroupsTableAdapter" Name="Groups" UserDataComponentName="GroupsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EomToolSecurityConnectionString (Settings)" DbObjectName="EomToolSecurity.dbo.Groups" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Groups] WHERE (([Id] = @Original_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Groups] ([Name]) VALUES (@Name);
SELECT Id, Name FROM Groups WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Name FROM dbo.Groups</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Groups] SET [Name] = @Name WHERE (([Id] = @Original_Id));
SELECT Id, Name FROM Groups WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RolesTableAdapter" GeneratorDataComponentClassName="RolesTableAdapter" Name="Roles" UserDataComponentName="RolesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EomToolSecurityConnectionString (Settings)" DbObjectName="EomToolSecurity.dbo.Roles" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Roles] WHERE (([Id] = @Original_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Roles] ([Name]) VALUES (@Name);
SELECT Id, Name FROM Roles WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Name FROM dbo.Roles</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Roles] SET [Name] = @Name WHERE (([Id] = @Original_Id));
SELECT Id, Name FROM Roles WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PermissionsTableAdapter" GeneratorDataComponentClassName="PermissionsTableAdapter" Name="Permissions" UserDataComponentName="PermissionsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EomToolSecurityConnectionString (Settings)" DbObjectName="EomToolSecurity.dbo.Permissions" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Permissions] WHERE (([Id] = @Original_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Permissions] ([Name]) VALUES (@Name);
SELECT Id, Name FROM Permissions WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Name FROM dbo.Permissions</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Permissions] SET [Name] = @Name WHERE (([Id] = @Original_Id));
SELECT Id, Name FROM Permissions WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RoleGroupTableAdapter" GeneratorDataComponentClassName="RoleGroupTableAdapter" Name="RoleGroup" UserDataComponentName="RoleGroupTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EomToolSecurityConnectionString (Settings)" DbObjectName="EomToolSecurity.dbo.RoleGroup" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[RoleGroup] WHERE (([Roles_Id] = @Original_Roles_Id) AND ([Groups_Id] = @Original_Groups_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Roles_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Roles_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Groups_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Groups_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[RoleGroup] ([Roles_Id], [Groups_Id]) VALUES (@Roles_Id, @Groups_Id);
SELECT Roles_Id, Groups_Id FROM RoleGroup WHERE (Groups_Id = @Groups_Id) AND (Roles_Id = @Roles_Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Roles_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Roles_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Groups_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Groups_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Roles_Id, Groups_Id FROM dbo.RoleGroup</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[RoleGroup] SET [Roles_Id] = @Roles_Id, [Groups_Id] = @Groups_Id WHERE (([Roles_Id] = @Original_Roles_Id) AND ([Groups_Id] = @Original_Groups_Id));
SELECT Roles_Id, Groups_Id FROM RoleGroup WHERE (Groups_Id = @Groups_Id) AND (Roles_Id = @Roles_Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Roles_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Roles_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Groups_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Groups_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Roles_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Roles_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Groups_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Groups_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Roles_Id" DataSetColumn="Roles_Id" />
              <Mapping SourceColumn="Groups_Id" DataSetColumn="Groups_Id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RolePermissionTableAdapter" GeneratorDataComponentClassName="RolePermissionTableAdapter" Name="RolePermission" UserDataComponentName="RolePermissionTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EomToolSecurityConnectionString (Settings)" DbObjectName="EomToolSecurity.dbo.RolePermission" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[RolePermission] WHERE (([Roles_Id] = @Original_Roles_Id) AND ([Permissions_Id] = @Original_Permissions_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Roles_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Roles_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Permissions_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Permissions_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[RolePermission] ([Roles_Id], [Permissions_Id]) VALUES (@Roles_Id, @Permissions_Id);
SELECT Roles_Id, Permissions_Id FROM RolePermission WHERE (Permissions_Id = @Permissions_Id) AND (Roles_Id = @Roles_Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Roles_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Roles_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Permissions_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Permissions_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Roles_Id, Permissions_Id FROM dbo.RolePermission</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[RolePermission] SET [Roles_Id] = @Roles_Id, [Permissions_Id] = @Permissions_Id WHERE (([Roles_Id] = @Original_Roles_Id) AND ([Permissions_Id] = @Original_Permissions_Id));
SELECT Roles_Id, Permissions_Id FROM RolePermission WHERE (Permissions_Id = @Permissions_Id) AND (Roles_Id = @Roles_Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Roles_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Roles_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Permissions_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Permissions_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Roles_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Roles_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Permissions_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Permissions_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Roles_Id" DataSetColumn="Roles_Id" />
              <Mapping SourceColumn="Permissions_Id" DataSetColumn="Permissions_Id" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="Data" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="Data" msprop:Generator_UserDSName="Data">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Groups" msprop:Generator_TableClassName="GroupsDataTable" msprop:Generator_TableVarName="tableGroups" msprop:Generator_TablePropName="Groups" msprop:Generator_RowDeletingName="GroupsRowDeleting" msprop:Generator_UserTableName="Groups" msprop:Generator_RowChangingName="GroupsRowChanging" msprop:Generator_RowEvHandlerName="GroupsRowChangeEventHandler" msprop:Generator_RowDeletedName="GroupsRowDeleted" msprop:Generator_RowEvArgName="GroupsRowChangeEvent" msprop:Generator_RowChangedName="GroupsRowChanged" msprop:Generator_RowClassName="GroupsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Roles" msprop:Generator_TableClassName="RolesDataTable" msprop:Generator_TableVarName="tableRoles" msprop:Generator_TablePropName="Roles" msprop:Generator_RowDeletingName="RolesRowDeleting" msprop:Generator_UserTableName="Roles" msprop:Generator_RowChangingName="RolesRowChanging" msprop:Generator_RowEvHandlerName="RolesRowChangeEventHandler" msprop:Generator_RowDeletedName="RolesRowDeleted" msprop:Generator_RowEvArgName="RolesRowChangeEvent" msprop:Generator_RowChangedName="RolesRowChanged" msprop:Generator_RowClassName="RolesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Permissions" msprop:Generator_TableClassName="PermissionsDataTable" msprop:Generator_TableVarName="tablePermissions" msprop:Generator_TablePropName="Permissions" msprop:Generator_RowDeletingName="PermissionsRowDeleting" msprop:Generator_UserTableName="Permissions" msprop:Generator_RowChangingName="PermissionsRowChanging" msprop:Generator_RowEvHandlerName="PermissionsRowChangeEventHandler" msprop:Generator_RowDeletedName="PermissionsRowDeleted" msprop:Generator_RowEvArgName="PermissionsRowChangeEvent" msprop:Generator_RowChangedName="PermissionsRowChanged" msprop:Generator_RowClassName="PermissionsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="RoleGroup" msprop:Generator_TableClassName="RoleGroupDataTable" msprop:Generator_TableVarName="tableRoleGroup" msprop:Generator_TablePropName="RoleGroup" msprop:Generator_RowDeletingName="RoleGroupRowDeleting" msprop:Generator_UserTableName="RoleGroup" msprop:Generator_RowChangingName="RoleGroupRowChanging" msprop:Generator_RowEvHandlerName="RoleGroupRowChangeEventHandler" msprop:Generator_RowDeletedName="RoleGroupRowDeleted" msprop:Generator_RowEvArgName="RoleGroupRowChangeEvent" msprop:Generator_RowChangedName="RoleGroupRowChanged" msprop:Generator_RowClassName="RoleGroupRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Roles_Id" msprop:Generator_ColumnVarNameInTable="columnRoles_Id" msprop:Generator_ColumnPropNameInRow="Roles_Id" msprop:Generator_ColumnPropNameInTable="Roles_IdColumn" msprop:Generator_UserColumnName="Roles_Id" type="xs:int" />
              <xs:element name="Groups_Id" msprop:Generator_ColumnVarNameInTable="columnGroups_Id" msprop:Generator_ColumnPropNameInRow="Groups_Id" msprop:Generator_ColumnPropNameInTable="Groups_IdColumn" msprop:Generator_UserColumnName="Groups_Id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="RolePermission" msprop:Generator_TableClassName="RolePermissionDataTable" msprop:Generator_TableVarName="tableRolePermission" msprop:Generator_TablePropName="RolePermission" msprop:Generator_RowDeletingName="RolePermissionRowDeleting" msprop:Generator_UserTableName="RolePermission" msprop:Generator_RowChangingName="RolePermissionRowChanging" msprop:Generator_RowEvHandlerName="RolePermissionRowChangeEventHandler" msprop:Generator_RowDeletedName="RolePermissionRowDeleted" msprop:Generator_RowEvArgName="RolePermissionRowChangeEvent" msprop:Generator_RowChangedName="RolePermissionRowChanged" msprop:Generator_RowClassName="RolePermissionRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Roles_Id" msprop:Generator_ColumnVarNameInTable="columnRoles_Id" msprop:Generator_ColumnPropNameInRow="Roles_Id" msprop:Generator_ColumnPropNameInTable="Roles_IdColumn" msprop:Generator_UserColumnName="Roles_Id" type="xs:int" />
              <xs:element name="Permissions_Id" msprop:Generator_ColumnVarNameInTable="columnPermissions_Id" msprop:Generator_ColumnPropNameInRow="Permissions_Id" msprop:Generator_ColumnPropNameInTable="Permissions_IdColumn" msprop:Generator_UserColumnName="Permissions_Id" type="xs:int" />
              <xs:element name="PermissionName" msdata:ReadOnly="true" msdata:Expression="Parent(FK_RolePermission_Permission).Name" msprop:Generator_ColumnVarNameInTable="columnPermissionName" msprop:Generator_ColumnPropNameInRow="PermissionName" msprop:Generator_ColumnPropNameInTable="PermissionNameColumn" msprop:Generator_UserColumnName="PermissionName" type="xs:string" minOccurs="0" />
              <xs:element name="RoleName" msdata:ReadOnly="true" msdata:Expression="Parent(FK_RolePermission_Role).Name" msprop:Generator_ColumnVarNameInTable="columnRoleName" msprop:Generator_ColumnPropNameInRow="RoleName" msprop:Generator_ColumnPropNameInTable="RoleNameColumn" msprop:Generator_UserColumnName="RoleName" type="xs:string" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Groups" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="Roles_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Roles" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="Permissions_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Permissions" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="RoleGroup_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:RoleGroup" />
      <xs:field xpath="mstns:Roles_Id" />
      <xs:field xpath="mstns:Groups_Id" />
    </xs:unique>
    <xs:unique name="RolePermission_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:RolePermission" />
      <xs:field xpath="mstns:Roles_Id" />
      <xs:field xpath="mstns:Permissions_Id" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_RoleGroup_Group" msdata:parent="Groups" msdata:child="RoleGroup" msdata:parentkey="Id" msdata:childkey="Groups_Id" msprop:Generator_UserChildTable="RoleGroup" msprop:Generator_ChildPropName="GetRoleGroupRows" msprop:Generator_ParentPropName="GroupsRow" msprop:Generator_UserRelationName="FK_RoleGroup_Group" msprop:Generator_RelationVarName="relationFK_RoleGroup_Group" msprop:Generator_UserParentTable="Groups" />
      <msdata:Relationship name="FK_RoleGroup_Role" msdata:parent="Roles" msdata:child="RoleGroup" msdata:parentkey="Id" msdata:childkey="Roles_Id" msprop:Generator_UserChildTable="RoleGroup" msprop:Generator_ChildPropName="GetRoleGroupRows" msprop:Generator_ParentPropName="RolesRow" msprop:Generator_UserRelationName="FK_RoleGroup_Role" msprop:Generator_RelationVarName="relationFK_RoleGroup_Role" msprop:Generator_UserParentTable="Roles" />
      <msdata:Relationship name="FK_RolePermission_Permission" msdata:parent="Permissions" msdata:child="RolePermission" msdata:parentkey="Id" msdata:childkey="Permissions_Id" msprop:Generator_UserChildTable="RolePermission" msprop:Generator_ChildPropName="GetRolePermissionRows" msprop:Generator_ParentPropName="PermissionsRow" msprop:Generator_UserRelationName="FK_RolePermission_Permission" msprop:Generator_RelationVarName="relationFK_RolePermission_Permission" msprop:Generator_UserParentTable="Permissions" />
      <msdata:Relationship name="FK_RolePermission_Role" msdata:parent="Roles" msdata:child="RolePermission" msdata:parentkey="Id" msdata:childkey="Roles_Id" msprop:Generator_UserChildTable="RolePermission" msprop:Generator_ChildPropName="GetRolePermissionRows" msprop:Generator_ParentPropName="RolesRow" msprop:Generator_UserRelationName="FK_RolePermission_Role" msprop:Generator_RelationVarName="relationFK_RolePermission_Role" msprop:Generator_UserParentTable="Roles" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>