#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EomApp1.Screens.Affiliate.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DADatabaseR1")]
	public partial class AffilaiteDataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAffiliate(Affiliate instance);
    partial void UpdateAffiliate(Affiliate instance);
    partial void DeleteAffiliate(Affiliate instance);
    partial void InsertMediaBuyer(MediaBuyer instance);
    partial void UpdateMediaBuyer(MediaBuyer instance);
    partial void DeleteMediaBuyer(MediaBuyer instance);
    partial void InsertCurrency(Currency instance);
    partial void UpdateCurrency(Currency instance);
    partial void DeleteCurrency(Currency instance);
    partial void InsertNetTermType(NetTermType instance);
    partial void UpdateNetTermType(NetTermType instance);
    partial void DeleteNetTermType(NetTermType instance);
    partial void InsertAffiliatePaymentMethod(AffiliatePaymentMethod instance);
    partial void UpdateAffiliatePaymentMethod(AffiliatePaymentMethod instance);
    partial void DeleteAffiliatePaymentMethod(AffiliatePaymentMethod instance);
    #endregion
		
		public AffilaiteDataClasses1DataContext() : 
				base(global::EomApp1.Properties.Settings.Default.DADatabaseR1ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AffilaiteDataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AffilaiteDataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AffilaiteDataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AffilaiteDataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Affiliate> Affiliates
		{
			get
			{
				return this.GetTable<Affiliate>();
			}
		}
		
		public System.Data.Linq.Table<MediaBuyer> MediaBuyers
		{
			get
			{
				return this.GetTable<MediaBuyer>();
			}
		}
		
		public System.Data.Linq.Table<Currency> Currencies
		{
			get
			{
				return this.GetTable<Currency>();
			}
		}
		
		public System.Data.Linq.Table<NetTermType> NetTermTypes
		{
			get
			{
				return this.GetTable<NetTermType>();
			}
		}
		
		public System.Data.Linq.Table<AffiliatePaymentMethod> AffiliatePaymentMethods
		{
			get
			{
				return this.GetTable<AffiliatePaymentMethod>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Affiliate")]
	public partial class Affiliate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private int _media_buyer_id;
		
		private int _affid;
		
		private int _currency_id;
		
		private string _email;
		
		private string _add_code;
		
		private string _name2;
		
		private System.Nullable<int> _net_term_type_id;
		
		private int _payment_method_id;
		
		private EntityRef<MediaBuyer> _MediaBuyer;
		
		private EntityRef<Currency> _Currency;
		
		private EntityRef<NetTermType> _NetTermType;
		
		private EntityRef<AffiliatePaymentMethod> _AffiliatePaymentMethod;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onmedia_buyer_idChanging(int value);
    partial void Onmedia_buyer_idChanged();
    partial void OnaffidChanging(int value);
    partial void OnaffidChanged();
    partial void Oncurrency_idChanging(int value);
    partial void Oncurrency_idChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Onadd_codeChanging(string value);
    partial void Onadd_codeChanged();
    partial void Onname2Changing(string value);
    partial void Onname2Changed();
    partial void Onnet_term_type_idChanging(System.Nullable<int> value);
    partial void Onnet_term_type_idChanged();
    partial void Onpayment_method_idChanging(int value);
    partial void Onpayment_method_idChanged();
    #endregion
		
		public Affiliate()
		{
			this._MediaBuyer = default(EntityRef<MediaBuyer>);
			this._Currency = default(EntityRef<Currency>);
			this._NetTermType = default(EntityRef<NetTermType>);
			this._AffiliatePaymentMethod = default(EntityRef<AffiliatePaymentMethod>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_media_buyer_id", DbType="Int NOT NULL")]
		public int media_buyer_id
		{
			get
			{
				return this._media_buyer_id;
			}
			set
			{
				if ((this._media_buyer_id != value))
				{
					if (this._MediaBuyer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmedia_buyer_idChanging(value);
					this.SendPropertyChanging();
					this._media_buyer_id = value;
					this.SendPropertyChanged("media_buyer_id");
					this.Onmedia_buyer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_affid", DbType="Int NOT NULL")]
		public int affid
		{
			get
			{
				return this._affid;
			}
			set
			{
				if ((this._affid != value))
				{
					this.OnaffidChanging(value);
					this.SendPropertyChanging();
					this._affid = value;
					this.SendPropertyChanged("affid");
					this.OnaffidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currency_id", DbType="Int NOT NULL")]
		public int currency_id
		{
			get
			{
				return this._currency_id;
			}
			set
			{
				if ((this._currency_id != value))
				{
					if (this._Currency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncurrency_idChanging(value);
					this.SendPropertyChanging();
					this._currency_id = value;
					this.SendPropertyChanged("currency_id");
					this.Oncurrency_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_add_code", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string add_code
		{
			get
			{
				return this._add_code;
			}
			set
			{
				if ((this._add_code != value))
				{
					this.Onadd_codeChanging(value);
					this.SendPropertyChanging();
					this._add_code = value;
					this.SendPropertyChanged("add_code");
					this.Onadd_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name2", AutoSync=AutoSync.Always, DbType="VarChar(358) NOT NULL", CanBeNull=false, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string name2
		{
			get
			{
				return this._name2;
			}
			set
			{
				if ((this._name2 != value))
				{
					this.Onname2Changing(value);
					this.SendPropertyChanging();
					this._name2 = value;
					this.SendPropertyChanged("name2");
					this.Onname2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_net_term_type_id", DbType="Int")]
		public System.Nullable<int> net_term_type_id
		{
			get
			{
				return this._net_term_type_id;
			}
			set
			{
				if ((this._net_term_type_id != value))
				{
					if (this._NetTermType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onnet_term_type_idChanging(value);
					this.SendPropertyChanging();
					this._net_term_type_id = value;
					this.SendPropertyChanged("net_term_type_id");
					this.Onnet_term_type_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_method_id", DbType="Int NOT NULL")]
		public int payment_method_id
		{
			get
			{
				return this._payment_method_id;
			}
			set
			{
				if ((this._payment_method_id != value))
				{
					if (this._AffiliatePaymentMethod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpayment_method_idChanging(value);
					this.SendPropertyChanging();
					this._payment_method_id = value;
					this.SendPropertyChanged("payment_method_id");
					this.Onpayment_method_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MediaBuyer_Affiliate", Storage="_MediaBuyer", ThisKey="media_buyer_id", OtherKey="id", IsForeignKey=true)]
		public MediaBuyer MediaBuyer
		{
			get
			{
				return this._MediaBuyer.Entity;
			}
			set
			{
				MediaBuyer previousValue = this._MediaBuyer.Entity;
				if (((previousValue != value) 
							|| (this._MediaBuyer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MediaBuyer.Entity = null;
						previousValue.Affiliates.Remove(this);
					}
					this._MediaBuyer.Entity = value;
					if ((value != null))
					{
						value.Affiliates.Add(this);
						this._media_buyer_id = value.id;
					}
					else
					{
						this._media_buyer_id = default(int);
					}
					this.SendPropertyChanged("MediaBuyer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_Affiliate", Storage="_Currency", ThisKey="currency_id", OtherKey="id", IsForeignKey=true)]
		public Currency Currency
		{
			get
			{
				return this._Currency.Entity;
			}
			set
			{
				Currency previousValue = this._Currency.Entity;
				if (((previousValue != value) 
							|| (this._Currency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Currency.Entity = null;
						previousValue.Affiliates.Remove(this);
					}
					this._Currency.Entity = value;
					if ((value != null))
					{
						value.Affiliates.Add(this);
						this._currency_id = value.id;
					}
					else
					{
						this._currency_id = default(int);
					}
					this.SendPropertyChanged("Currency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NetTermType_Affiliate", Storage="_NetTermType", ThisKey="net_term_type_id", OtherKey="id", IsForeignKey=true)]
		public NetTermType NetTermType
		{
			get
			{
				return this._NetTermType.Entity;
			}
			set
			{
				NetTermType previousValue = this._NetTermType.Entity;
				if (((previousValue != value) 
							|| (this._NetTermType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NetTermType.Entity = null;
						previousValue.Affiliates.Remove(this);
					}
					this._NetTermType.Entity = value;
					if ((value != null))
					{
						value.Affiliates.Add(this);
						this._net_term_type_id = value.id;
					}
					else
					{
						this._net_term_type_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("NetTermType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AffiliatePaymentMethod_Affiliate", Storage="_AffiliatePaymentMethod", ThisKey="payment_method_id", OtherKey="id", IsForeignKey=true)]
		public AffiliatePaymentMethod AffiliatePaymentMethod
		{
			get
			{
				return this._AffiliatePaymentMethod.Entity;
			}
			set
			{
				AffiliatePaymentMethod previousValue = this._AffiliatePaymentMethod.Entity;
				if (((previousValue != value) 
							|| (this._AffiliatePaymentMethod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AffiliatePaymentMethod.Entity = null;
						previousValue.Affiliates.Remove(this);
					}
					this._AffiliatePaymentMethod.Entity = value;
					if ((value != null))
					{
						value.Affiliates.Add(this);
						this._payment_method_id = value.id;
					}
					else
					{
						this._payment_method_id = default(int);
					}
					this.SendPropertyChanged("AffiliatePaymentMethod");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MediaBuyer")]
	public partial class MediaBuyer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private EntitySet<Affiliate> _Affiliates;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public MediaBuyer()
		{
			this._Affiliates = new EntitySet<Affiliate>(new Action<Affiliate>(this.attach_Affiliates), new Action<Affiliate>(this.detach_Affiliates));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MediaBuyer_Affiliate", Storage="_Affiliates", ThisKey="id", OtherKey="media_buyer_id")]
		public EntitySet<Affiliate> Affiliates
		{
			get
			{
				return this._Affiliates;
			}
			set
			{
				this._Affiliates.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Affiliates(Affiliate entity)
		{
			this.SendPropertyChanging();
			entity.MediaBuyer = this;
		}
		
		private void detach_Affiliates(Affiliate entity)
		{
			this.SendPropertyChanging();
			entity.MediaBuyer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Currency")]
	public partial class Currency : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private decimal _to_usd_multiplier;
		
		private EntitySet<Affiliate> _Affiliates;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onto_usd_multiplierChanging(decimal value);
    partial void Onto_usd_multiplierChanged();
    #endregion
		
		public Currency()
		{
			this._Affiliates = new EntitySet<Affiliate>(new Action<Affiliate>(this.attach_Affiliates), new Action<Affiliate>(this.detach_Affiliates));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_to_usd_multiplier", DbType="Decimal(14,4) NOT NULL")]
		public decimal to_usd_multiplier
		{
			get
			{
				return this._to_usd_multiplier;
			}
			set
			{
				if ((this._to_usd_multiplier != value))
				{
					this.Onto_usd_multiplierChanging(value);
					this.SendPropertyChanging();
					this._to_usd_multiplier = value;
					this.SendPropertyChanged("to_usd_multiplier");
					this.Onto_usd_multiplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_Affiliate", Storage="_Affiliates", ThisKey="id", OtherKey="currency_id")]
		public EntitySet<Affiliate> Affiliates
		{
			get
			{
				return this._Affiliates;
			}
			set
			{
				this._Affiliates.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Affiliates(Affiliate entity)
		{
			this.SendPropertyChanging();
			entity.Currency = this;
		}
		
		private void detach_Affiliates(Affiliate entity)
		{
			this.SendPropertyChanging();
			entity.Currency = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NetTermType")]
	public partial class NetTermType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private EntitySet<Affiliate> _Affiliates;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public NetTermType()
		{
			this._Affiliates = new EntitySet<Affiliate>(new Action<Affiliate>(this.attach_Affiliates), new Action<Affiliate>(this.detach_Affiliates));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NetTermType_Affiliate", Storage="_Affiliates", ThisKey="id", OtherKey="net_term_type_id")]
		public EntitySet<Affiliate> Affiliates
		{
			get
			{
				return this._Affiliates;
			}
			set
			{
				this._Affiliates.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Affiliates(Affiliate entity)
		{
			this.SendPropertyChanging();
			entity.NetTermType = this;
		}
		
		private void detach_Affiliates(Affiliate entity)
		{
			this.SendPropertyChanging();
			entity.NetTermType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AffiliatePaymentMethod")]
	public partial class AffiliatePaymentMethod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private EntitySet<Affiliate> _Affiliates;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public AffiliatePaymentMethod()
		{
			this._Affiliates = new EntitySet<Affiliate>(new Action<Affiliate>(this.attach_Affiliates), new Action<Affiliate>(this.detach_Affiliates));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AffiliatePaymentMethod_Affiliate", Storage="_Affiliates", ThisKey="id", OtherKey="payment_method_id")]
		public EntitySet<Affiliate> Affiliates
		{
			get
			{
				return this._Affiliates;
			}
			set
			{
				this._Affiliates.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Affiliates(Affiliate entity)
		{
			this.SendPropertyChanging();
			entity.AffiliatePaymentMethod = this;
		}
		
		private void detach_Affiliates(Affiliate entity)
		{
			this.SendPropertyChanging();
			entity.AffiliatePaymentMethod = null;
		}
	}
}
#pragma warning restore 1591
