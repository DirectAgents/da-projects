#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAgents.Synch
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DADatabaseR1")]
	public partial class SynchDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccountManagerEntity(AccountManagerEntity instance);
    partial void UpdateAccountManagerEntity(AccountManagerEntity instance);
    partial void DeleteAccountManagerEntity(AccountManagerEntity instance);
    partial void InsertAdManagerEntity(AdManagerEntity instance);
    partial void UpdateAdManagerEntity(AdManagerEntity instance);
    partial void DeleteAdManagerEntity(AdManagerEntity instance);
    partial void InsertPayoutEntity(PayoutEntity instance);
    partial void UpdatePayoutEntity(PayoutEntity instance);
    partial void DeletePayoutEntity(PayoutEntity instance);
    partial void InsertCurrencyEntity(CurrencyEntity instance);
    partial void UpdateCurrencyEntity(CurrencyEntity instance);
    partial void DeleteCurrencyEntity(CurrencyEntity instance);
    partial void InsertStatEntity(StatEntity instance);
    partial void UpdateStatEntity(StatEntity instance);
    partial void DeleteStatEntity(StatEntity instance);
    partial void InsertMediaBuyerEntity(MediaBuyerEntity instance);
    partial void UpdateMediaBuyerEntity(MediaBuyerEntity instance);
    partial void DeleteMediaBuyerEntity(MediaBuyerEntity instance);
    partial void InsertSourceEntity(SourceEntity instance);
    partial void UpdateSourceEntity(SourceEntity instance);
    partial void DeleteSourceEntity(SourceEntity instance);
    partial void InsertUnitType(UnitType instance);
    partial void UpdateUnitType(UnitType instance);
    partial void DeleteUnitType(UnitType instance);
    partial void InsertXmlSourceEntity(XmlSourceEntity instance);
    partial void UpdateXmlSourceEntity(XmlSourceEntity instance);
    partial void DeleteXmlSourceEntity(XmlSourceEntity instance);
    partial void InsertItemEntity(ItemEntity instance);
    partial void UpdateItemEntity(ItemEntity instance);
    partial void DeleteItemEntity(ItemEntity instance);
    partial void InsertItemAccountingStatusEntity(ItemAccountingStatusEntity instance);
    partial void UpdateItemAccountingStatusEntity(ItemAccountingStatusEntity instance);
    partial void DeleteItemAccountingStatusEntity(ItemAccountingStatusEntity instance);
    partial void InsertItemReportingStatusEntity(ItemReportingStatusEntity instance);
    partial void UpdateItemReportingStatusEntity(ItemReportingStatusEntity instance);
    partial void DeleteItemReportingStatusEntity(ItemReportingStatusEntity instance);
    partial void InsertCampaignEntity(CampaignEntity instance);
    partial void UpdateCampaignEntity(CampaignEntity instance);
    partial void DeleteCampaignEntity(CampaignEntity instance);
    partial void InsertAffiliateEntity(AffiliateEntity instance);
    partial void UpdateAffiliateEntity(AffiliateEntity instance);
    partial void DeleteAffiliateEntity(AffiliateEntity instance);
    #endregion
		
		public SynchDBDataContext() : 
				base(global::DAgents.Common.Properties.Settings.Default.DADatabaseR1ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SynchDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SynchDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SynchDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SynchDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AccountManagerEntity> AccountManagerEntities
		{
			get
			{
				return this.GetTable<AccountManagerEntity>();
			}
		}
		
		public System.Data.Linq.Table<AdManagerEntity> AdManagerEntities
		{
			get
			{
				return this.GetTable<AdManagerEntity>();
			}
		}
		
		public System.Data.Linq.Table<PayoutEntity> PayoutEntities
		{
			get
			{
				return this.GetTable<PayoutEntity>();
			}
		}
		
		public System.Data.Linq.Table<CurrencyEntity> CurrencyEntities
		{
			get
			{
				return this.GetTable<CurrencyEntity>();
			}
		}
		
		public System.Data.Linq.Table<StatEntity> StatEntities
		{
			get
			{
				return this.GetTable<StatEntity>();
			}
		}
		
		public System.Data.Linq.Table<MediaBuyerEntity> MediaBuyerEntities
		{
			get
			{
				return this.GetTable<MediaBuyerEntity>();
			}
		}
		
		public System.Data.Linq.Table<SourceEntity> SourceEntities
		{
			get
			{
				return this.GetTable<SourceEntity>();
			}
		}
		
		public System.Data.Linq.Table<UnitType> UnitTypes
		{
			get
			{
				return this.GetTable<UnitType>();
			}
		}
		
		public System.Data.Linq.Table<XmlSourceEntity> XmlSourceEntities
		{
			get
			{
				return this.GetTable<XmlSourceEntity>();
			}
		}
		
		public System.Data.Linq.Table<ItemEntity> ItemEntities
		{
			get
			{
				return this.GetTable<ItemEntity>();
			}
		}
		
		public System.Data.Linq.Table<ItemAccountingStatusEntity> ItemAccountingStatusEntities
		{
			get
			{
				return this.GetTable<ItemAccountingStatusEntity>();
			}
		}
		
		public System.Data.Linq.Table<ItemReportingStatusEntity> ItemReportingStatusEntities
		{
			get
			{
				return this.GetTable<ItemReportingStatusEntity>();
			}
		}
		
		public System.Data.Linq.Table<CampaignEntity> CampaignEntities
		{
			get
			{
				return this.GetTable<CampaignEntity>();
			}
		}
		
		public System.Data.Linq.Table<AffiliateEntity> AffiliateEntities
		{
			get
			{
				return this.GetTable<AffiliateEntity>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountManager")]
	public partial class AccountManagerEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private EntitySet<CampaignEntity> _CampaignEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public AccountManagerEntity()
		{
			this._CampaignEntities = new EntitySet<CampaignEntity>(new Action<CampaignEntity>(this.attach_CampaignEntities), new Action<CampaignEntity>(this.detach_CampaignEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccountManagerEntity_CampaignEntity", Storage="_CampaignEntities", ThisKey="id", OtherKey="account_manager_id")]
		public EntitySet<CampaignEntity> CampaignEntities
		{
			get
			{
				return this._CampaignEntities;
			}
			set
			{
				this._CampaignEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CampaignEntities(CampaignEntity entity)
		{
			this.SendPropertyChanging();
			entity.AccountManagerEntity = this;
		}
		
		private void detach_CampaignEntities(CampaignEntity entity)
		{
			this.SendPropertyChanging();
			entity.AccountManagerEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdManager")]
	public partial class AdManagerEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private EntitySet<CampaignEntity> _CampaignEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public AdManagerEntity()
		{
			this._CampaignEntities = new EntitySet<CampaignEntity>(new Action<CampaignEntity>(this.attach_CampaignEntities), new Action<CampaignEntity>(this.detach_CampaignEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdManagerEntity_CampaignEntity", Storage="_CampaignEntities", ThisKey="id", OtherKey="ad_manager_id")]
		public EntitySet<CampaignEntity> CampaignEntities
		{
			get
			{
				return this._CampaignEntities;
			}
			set
			{
				this._CampaignEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CampaignEntities(CampaignEntity entity)
		{
			this.SendPropertyChanging();
			entity.AdManagerEntity = this;
		}
		
		private void detach_CampaignEntities(CampaignEntity entity)
		{
			this.SendPropertyChanging();
			entity.AdManagerEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Payout")]
	public partial class PayoutEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _currency_id;
		
		private string _payout_id;
		
		private string _payout_type;
		
		private int _pid;
		
		private int _affid;
		
		private System.Nullable<decimal> _impression;
		
		private decimal _click;
		
		private decimal _lead;
		
		private decimal _percent_sale;
		
		private decimal _flat_sale;
		
		private decimal _percent_sub_sale;
		
		private decimal _flat_sub_sale;
		
		private System.DateTime _effective_date;
		
		private System.DateTime _modify_date;
		
		private int _product_id;
		
		private EntitySet<StatEntity> _Stats;
		
		private EntitySet<StatEntity> _StatEntities;
		
		private EntityRef<CurrencyEntity> _CurrencyEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Oncurrency_idChanging(int value);
    partial void Oncurrency_idChanged();
    partial void Onpayout_idChanging(string value);
    partial void Onpayout_idChanged();
    partial void Onpayout_typeChanging(string value);
    partial void Onpayout_typeChanged();
    partial void OnpidChanging(int value);
    partial void OnpidChanged();
    partial void OnaffidChanging(int value);
    partial void OnaffidChanged();
    partial void OnimpressionChanging(System.Nullable<decimal> value);
    partial void OnimpressionChanged();
    partial void OnclickChanging(decimal value);
    partial void OnclickChanged();
    partial void OnleadChanging(decimal value);
    partial void OnleadChanged();
    partial void Onpercent_saleChanging(decimal value);
    partial void Onpercent_saleChanged();
    partial void Onflat_saleChanging(decimal value);
    partial void Onflat_saleChanged();
    partial void Onpercent_sub_saleChanging(decimal value);
    partial void Onpercent_sub_saleChanged();
    partial void Onflat_sub_saleChanging(decimal value);
    partial void Onflat_sub_saleChanged();
    partial void Oneffective_dateChanging(System.DateTime value);
    partial void Oneffective_dateChanged();
    partial void Onmodify_dateChanging(System.DateTime value);
    partial void Onmodify_dateChanged();
    partial void Onproduct_idChanging(int value);
    partial void Onproduct_idChanged();
    #endregion
		
		public PayoutEntity()
		{
			this._Stats = new EntitySet<StatEntity>(new Action<StatEntity>(this.attach_Stats), new Action<StatEntity>(this.detach_Stats));
			this._StatEntities = new EntitySet<StatEntity>(new Action<StatEntity>(this.attach_StatEntities), new Action<StatEntity>(this.detach_StatEntities));
			this._CurrencyEntity = default(EntityRef<CurrencyEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currency_id", DbType="Int NOT NULL")]
		public int currency_id
		{
			get
			{
				return this._currency_id;
			}
			set
			{
				if ((this._currency_id != value))
				{
					if (this._CurrencyEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncurrency_idChanging(value);
					this.SendPropertyChanging();
					this._currency_id = value;
					this.SendPropertyChanged("currency_id");
					this.Oncurrency_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payout_id", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string payout_id
		{
			get
			{
				return this._payout_id;
			}
			set
			{
				if ((this._payout_id != value))
				{
					this.Onpayout_idChanging(value);
					this.SendPropertyChanging();
					this._payout_id = value;
					this.SendPropertyChanged("payout_id");
					this.Onpayout_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payout_type", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string payout_type
		{
			get
			{
				return this._payout_type;
			}
			set
			{
				if ((this._payout_type != value))
				{
					this.Onpayout_typeChanging(value);
					this.SendPropertyChanging();
					this._payout_type = value;
					this.SendPropertyChanged("payout_type");
					this.Onpayout_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pid", DbType="Int NOT NULL")]
		public int pid
		{
			get
			{
				return this._pid;
			}
			set
			{
				if ((this._pid != value))
				{
					this.OnpidChanging(value);
					this.SendPropertyChanging();
					this._pid = value;
					this.SendPropertyChanged("pid");
					this.OnpidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_affid", DbType="Int NOT NULL")]
		public int affid
		{
			get
			{
				return this._affid;
			}
			set
			{
				if ((this._affid != value))
				{
					this.OnaffidChanging(value);
					this.SendPropertyChanging();
					this._affid = value;
					this.SendPropertyChanged("affid");
					this.OnaffidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_impression", DbType="Money")]
		public System.Nullable<decimal> impression
		{
			get
			{
				return this._impression;
			}
			set
			{
				if ((this._impression != value))
				{
					this.OnimpressionChanging(value);
					this.SendPropertyChanging();
					this._impression = value;
					this.SendPropertyChanged("impression");
					this.OnimpressionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_click", DbType="Money NOT NULL")]
		public decimal click
		{
			get
			{
				return this._click;
			}
			set
			{
				if ((this._click != value))
				{
					this.OnclickChanging(value);
					this.SendPropertyChanging();
					this._click = value;
					this.SendPropertyChanged("click");
					this.OnclickChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lead", DbType="Money NOT NULL")]
		public decimal lead
		{
			get
			{
				return this._lead;
			}
			set
			{
				if ((this._lead != value))
				{
					this.OnleadChanging(value);
					this.SendPropertyChanging();
					this._lead = value;
					this.SendPropertyChanged("lead");
					this.OnleadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_percent_sale", DbType="Money NOT NULL")]
		public decimal percent_sale
		{
			get
			{
				return this._percent_sale;
			}
			set
			{
				if ((this._percent_sale != value))
				{
					this.Onpercent_saleChanging(value);
					this.SendPropertyChanging();
					this._percent_sale = value;
					this.SendPropertyChanged("percent_sale");
					this.Onpercent_saleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flat_sale", DbType="Money NOT NULL")]
		public decimal flat_sale
		{
			get
			{
				return this._flat_sale;
			}
			set
			{
				if ((this._flat_sale != value))
				{
					this.Onflat_saleChanging(value);
					this.SendPropertyChanging();
					this._flat_sale = value;
					this.SendPropertyChanged("flat_sale");
					this.Onflat_saleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_percent_sub_sale", DbType="Money NOT NULL")]
		public decimal percent_sub_sale
		{
			get
			{
				return this._percent_sub_sale;
			}
			set
			{
				if ((this._percent_sub_sale != value))
				{
					this.Onpercent_sub_saleChanging(value);
					this.SendPropertyChanging();
					this._percent_sub_sale = value;
					this.SendPropertyChanged("percent_sub_sale");
					this.Onpercent_sub_saleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flat_sub_sale", DbType="Money NOT NULL")]
		public decimal flat_sub_sale
		{
			get
			{
				return this._flat_sub_sale;
			}
			set
			{
				if ((this._flat_sub_sale != value))
				{
					this.Onflat_sub_saleChanging(value);
					this.SendPropertyChanging();
					this._flat_sub_sale = value;
					this.SendPropertyChanged("flat_sub_sale");
					this.Onflat_sub_saleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_effective_date", DbType="Date NOT NULL")]
		public System.DateTime effective_date
		{
			get
			{
				return this._effective_date;
			}
			set
			{
				if ((this._effective_date != value))
				{
					this.Oneffective_dateChanging(value);
					this.SendPropertyChanging();
					this._effective_date = value;
					this.SendPropertyChanged("effective_date");
					this.Oneffective_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modify_date", DbType="Date NOT NULL")]
		public System.DateTime modify_date
		{
			get
			{
				return this._modify_date;
			}
			set
			{
				if ((this._modify_date != value))
				{
					this.Onmodify_dateChanging(value);
					this.SendPropertyChanging();
					this._modify_date = value;
					this.SendPropertyChanged("modify_date");
					this.Onmodify_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", DbType="Int NOT NULL")]
		public int product_id
		{
			get
			{
				return this._product_id;
			}
			set
			{
				if ((this._product_id != value))
				{
					this.Onproduct_idChanging(value);
					this.SendPropertyChanging();
					this._product_id = value;
					this.SendPropertyChanged("product_id");
					this.Onproduct_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PayoutEntity_StatEntity", Storage="_Stats", ThisKey="id", OtherKey="revenue_payout_id")]
		public EntitySet<StatEntity> Stats
		{
			get
			{
				return this._Stats;
			}
			set
			{
				this._Stats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PayoutEntity_StatEntity1", Storage="_StatEntities", ThisKey="id", OtherKey="cost_payout_id")]
		public EntitySet<StatEntity> StatEntities
		{
			get
			{
				return this._StatEntities;
			}
			set
			{
				this._StatEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CurrencyEntity_PayoutEntity", Storage="_CurrencyEntity", ThisKey="currency_id", OtherKey="id", IsForeignKey=true)]
		public CurrencyEntity CurrencyEntity
		{
			get
			{
				return this._CurrencyEntity.Entity;
			}
			set
			{
				CurrencyEntity previousValue = this._CurrencyEntity.Entity;
				if (((previousValue != value) 
							|| (this._CurrencyEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CurrencyEntity.Entity = null;
						previousValue.PayoutEntities.Remove(this);
					}
					this._CurrencyEntity.Entity = value;
					if ((value != null))
					{
						value.PayoutEntities.Add(this);
						this._currency_id = value.id;
					}
					else
					{
						this._currency_id = default(int);
					}
					this.SendPropertyChanged("CurrencyEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Stats(StatEntity entity)
		{
			this.SendPropertyChanging();
			entity.RevenuePayout = this;
		}
		
		private void detach_Stats(StatEntity entity)
		{
			this.SendPropertyChanging();
			entity.RevenuePayout = null;
		}
		
		private void attach_StatEntities(StatEntity entity)
		{
			this.SendPropertyChanging();
			entity.CostPayoutEntity = this;
		}
		
		private void detach_StatEntities(StatEntity entity)
		{
			this.SendPropertyChanging();
			entity.CostPayoutEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Currency")]
	public partial class CurrencyEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private decimal _to_usd_multiplier;
		
		private EntitySet<PayoutEntity> _PayoutEntities;
		
		private EntitySet<ItemEntity> _Items;
		
		private EntitySet<ItemEntity> _ItemEntities;
		
		private EntitySet<AffiliateEntity> _AffiliateEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onto_usd_multiplierChanging(decimal value);
    partial void Onto_usd_multiplierChanged();
    #endregion
		
		public CurrencyEntity()
		{
			this._PayoutEntities = new EntitySet<PayoutEntity>(new Action<PayoutEntity>(this.attach_PayoutEntities), new Action<PayoutEntity>(this.detach_PayoutEntities));
			this._Items = new EntitySet<ItemEntity>(new Action<ItemEntity>(this.attach_Items), new Action<ItemEntity>(this.detach_Items));
			this._ItemEntities = new EntitySet<ItemEntity>(new Action<ItemEntity>(this.attach_ItemEntities), new Action<ItemEntity>(this.detach_ItemEntities));
			this._AffiliateEntities = new EntitySet<AffiliateEntity>(new Action<AffiliateEntity>(this.attach_AffiliateEntities), new Action<AffiliateEntity>(this.detach_AffiliateEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_to_usd_multiplier", DbType="Decimal(14,4) NOT NULL")]
		public decimal to_usd_multiplier
		{
			get
			{
				return this._to_usd_multiplier;
			}
			set
			{
				if ((this._to_usd_multiplier != value))
				{
					this.Onto_usd_multiplierChanging(value);
					this.SendPropertyChanging();
					this._to_usd_multiplier = value;
					this.SendPropertyChanged("to_usd_multiplier");
					this.Onto_usd_multiplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CurrencyEntity_PayoutEntity", Storage="_PayoutEntities", ThisKey="id", OtherKey="currency_id")]
		public EntitySet<PayoutEntity> PayoutEntities
		{
			get
			{
				return this._PayoutEntities;
			}
			set
			{
				this._PayoutEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CurrencyEntity_ItemEntity", Storage="_Items", ThisKey="id", OtherKey="revenue_currency_id")]
		public EntitySet<ItemEntity> Items
		{
			get
			{
				return this._Items;
			}
			set
			{
				this._Items.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CurrencyEntity_ItemEntity1", Storage="_ItemEntities", ThisKey="id", OtherKey="cost_currency_id")]
		public EntitySet<ItemEntity> ItemEntities
		{
			get
			{
				return this._ItemEntities;
			}
			set
			{
				this._ItemEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CurrencyEntity_Affiliate", Storage="_AffiliateEntities", ThisKey="id", OtherKey="currency_id")]
		public EntitySet<AffiliateEntity> AffiliateEntities
		{
			get
			{
				return this._AffiliateEntities;
			}
			set
			{
				this._AffiliateEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PayoutEntities(PayoutEntity entity)
		{
			this.SendPropertyChanging();
			entity.CurrencyEntity = this;
		}
		
		private void detach_PayoutEntities(PayoutEntity entity)
		{
			this.SendPropertyChanging();
			entity.CurrencyEntity = null;
		}
		
		private void attach_Items(ItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.RevenueCurrencyEntity = this;
		}
		
		private void detach_Items(ItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.RevenueCurrencyEntity = null;
		}
		
		private void attach_ItemEntities(ItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.CostCurrencyEntity = this;
		}
		
		private void detach_ItemEntities(ItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.CostCurrencyEntity = null;
		}
		
		private void attach_AffiliateEntities(AffiliateEntity entity)
		{
			this.SendPropertyChanging();
			entity.CurrencyEntity = this;
		}
		
		private void detach_AffiliateEntities(AffiliateEntity entity)
		{
			this.SendPropertyChanging();
			entity.CurrencyEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Stat")]
	public partial class StatEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _pid;
		
		private int _affid;
		
		private int _revenue_payout_id;
		
		private int _cost_payout_id;
		
		private string _apiurl;
		
		private int _clicks;
		
		private int _leads;
		
		private int _num_sales;
		
		private int _num_post_impression_sales;
		
		private decimal _sale_amount;
		
		private decimal _post_impression_sale_amount;
		
		private int _num_sub_sales;
		
		private int _num_post_impression_sub_sales;
		
		private decimal _sub_sale_amount;
		
		private decimal _post_impression_sub_sale_amount;
		
		private System.DateTime _stat_date;
		
		private EntitySet<ItemEntity> _ItemEntities;
		
		private EntityRef<PayoutEntity> _PayoutEntity;
		
		private EntityRef<PayoutEntity> _PayoutEntity1;
		
		private EntityRef<CampaignEntity> _CampaignEntity;
		
		private EntityRef<AffiliateEntity> _AffiliateEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnpidChanging(int value);
    partial void OnpidChanged();
    partial void OnaffidChanging(int value);
    partial void OnaffidChanged();
    partial void Onrevenue_payout_idChanging(int value);
    partial void Onrevenue_payout_idChanged();
    partial void Oncost_payout_idChanging(int value);
    partial void Oncost_payout_idChanged();
    partial void OnapiurlChanging(string value);
    partial void OnapiurlChanged();
    partial void OnclicksChanging(int value);
    partial void OnclicksChanged();
    partial void OnleadsChanging(int value);
    partial void OnleadsChanged();
    partial void Onnum_salesChanging(int value);
    partial void Onnum_salesChanged();
    partial void Onnum_post_impression_salesChanging(int value);
    partial void Onnum_post_impression_salesChanged();
    partial void Onsale_amountChanging(decimal value);
    partial void Onsale_amountChanged();
    partial void Onpost_impression_sale_amountChanging(decimal value);
    partial void Onpost_impression_sale_amountChanged();
    partial void Onnum_sub_salesChanging(int value);
    partial void Onnum_sub_salesChanged();
    partial void Onnum_post_impression_sub_salesChanging(int value);
    partial void Onnum_post_impression_sub_salesChanged();
    partial void Onsub_sale_amountChanging(decimal value);
    partial void Onsub_sale_amountChanged();
    partial void Onpost_impression_sub_sale_amountChanging(decimal value);
    partial void Onpost_impression_sub_sale_amountChanged();
    partial void Onstat_dateChanging(System.DateTime value);
    partial void Onstat_dateChanged();
    #endregion
		
		public StatEntity()
		{
			this._ItemEntities = new EntitySet<ItemEntity>(new Action<ItemEntity>(this.attach_ItemEntities), new Action<ItemEntity>(this.detach_ItemEntities));
			this._PayoutEntity = default(EntityRef<PayoutEntity>);
			this._PayoutEntity1 = default(EntityRef<PayoutEntity>);
			this._CampaignEntity = default(EntityRef<CampaignEntity>);
			this._AffiliateEntity = default(EntityRef<AffiliateEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pid", DbType="Int NOT NULL")]
		public int pid
		{
			get
			{
				return this._pid;
			}
			set
			{
				if ((this._pid != value))
				{
					if (this._CampaignEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpidChanging(value);
					this.SendPropertyChanging();
					this._pid = value;
					this.SendPropertyChanged("pid");
					this.OnpidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_affid", DbType="Int NOT NULL")]
		public int affid
		{
			get
			{
				return this._affid;
			}
			set
			{
				if ((this._affid != value))
				{
					if (this._AffiliateEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnaffidChanging(value);
					this.SendPropertyChanging();
					this._affid = value;
					this.SendPropertyChanged("affid");
					this.OnaffidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_revenue_payout_id", DbType="Int NOT NULL")]
		public int revenue_payout_id
		{
			get
			{
				return this._revenue_payout_id;
			}
			set
			{
				if ((this._revenue_payout_id != value))
				{
					if (this._PayoutEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onrevenue_payout_idChanging(value);
					this.SendPropertyChanging();
					this._revenue_payout_id = value;
					this.SendPropertyChanged("revenue_payout_id");
					this.Onrevenue_payout_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cost_payout_id", DbType="Int NOT NULL")]
		public int cost_payout_id
		{
			get
			{
				return this._cost_payout_id;
			}
			set
			{
				if ((this._cost_payout_id != value))
				{
					if (this._PayoutEntity1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncost_payout_idChanging(value);
					this.SendPropertyChanging();
					this._cost_payout_id = value;
					this.SendPropertyChanged("cost_payout_id");
					this.Oncost_payout_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apiurl", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string apiurl
		{
			get
			{
				return this._apiurl;
			}
			set
			{
				if ((this._apiurl != value))
				{
					this.OnapiurlChanging(value);
					this.SendPropertyChanging();
					this._apiurl = value;
					this.SendPropertyChanged("apiurl");
					this.OnapiurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_clicks", DbType="Int NOT NULL")]
		public int clicks
		{
			get
			{
				return this._clicks;
			}
			set
			{
				if ((this._clicks != value))
				{
					this.OnclicksChanging(value);
					this.SendPropertyChanging();
					this._clicks = value;
					this.SendPropertyChanged("clicks");
					this.OnclicksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_leads", DbType="Int NOT NULL")]
		public int leads
		{
			get
			{
				return this._leads;
			}
			set
			{
				if ((this._leads != value))
				{
					this.OnleadsChanging(value);
					this.SendPropertyChanging();
					this._leads = value;
					this.SendPropertyChanged("leads");
					this.OnleadsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_num_sales", DbType="Int NOT NULL")]
		public int num_sales
		{
			get
			{
				return this._num_sales;
			}
			set
			{
				if ((this._num_sales != value))
				{
					this.Onnum_salesChanging(value);
					this.SendPropertyChanging();
					this._num_sales = value;
					this.SendPropertyChanged("num_sales");
					this.Onnum_salesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_num_post_impression_sales", DbType="Int NOT NULL")]
		public int num_post_impression_sales
		{
			get
			{
				return this._num_post_impression_sales;
			}
			set
			{
				if ((this._num_post_impression_sales != value))
				{
					this.Onnum_post_impression_salesChanging(value);
					this.SendPropertyChanging();
					this._num_post_impression_sales = value;
					this.SendPropertyChanged("num_post_impression_sales");
					this.Onnum_post_impression_salesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sale_amount", DbType="Decimal(16,2) NOT NULL")]
		public decimal sale_amount
		{
			get
			{
				return this._sale_amount;
			}
			set
			{
				if ((this._sale_amount != value))
				{
					this.Onsale_amountChanging(value);
					this.SendPropertyChanging();
					this._sale_amount = value;
					this.SendPropertyChanged("sale_amount");
					this.Onsale_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_post_impression_sale_amount", DbType="Decimal(16,2) NOT NULL")]
		public decimal post_impression_sale_amount
		{
			get
			{
				return this._post_impression_sale_amount;
			}
			set
			{
				if ((this._post_impression_sale_amount != value))
				{
					this.Onpost_impression_sale_amountChanging(value);
					this.SendPropertyChanging();
					this._post_impression_sale_amount = value;
					this.SendPropertyChanged("post_impression_sale_amount");
					this.Onpost_impression_sale_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_num_sub_sales", DbType="Int NOT NULL")]
		public int num_sub_sales
		{
			get
			{
				return this._num_sub_sales;
			}
			set
			{
				if ((this._num_sub_sales != value))
				{
					this.Onnum_sub_salesChanging(value);
					this.SendPropertyChanging();
					this._num_sub_sales = value;
					this.SendPropertyChanged("num_sub_sales");
					this.Onnum_sub_salesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_num_post_impression_sub_sales", DbType="Int NOT NULL")]
		public int num_post_impression_sub_sales
		{
			get
			{
				return this._num_post_impression_sub_sales;
			}
			set
			{
				if ((this._num_post_impression_sub_sales != value))
				{
					this.Onnum_post_impression_sub_salesChanging(value);
					this.SendPropertyChanging();
					this._num_post_impression_sub_sales = value;
					this.SendPropertyChanged("num_post_impression_sub_sales");
					this.Onnum_post_impression_sub_salesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sub_sale_amount", DbType="Decimal(16,2) NOT NULL")]
		public decimal sub_sale_amount
		{
			get
			{
				return this._sub_sale_amount;
			}
			set
			{
				if ((this._sub_sale_amount != value))
				{
					this.Onsub_sale_amountChanging(value);
					this.SendPropertyChanging();
					this._sub_sale_amount = value;
					this.SendPropertyChanged("sub_sale_amount");
					this.Onsub_sale_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_post_impression_sub_sale_amount", DbType="Decimal(16,2) NOT NULL")]
		public decimal post_impression_sub_sale_amount
		{
			get
			{
				return this._post_impression_sub_sale_amount;
			}
			set
			{
				if ((this._post_impression_sub_sale_amount != value))
				{
					this.Onpost_impression_sub_sale_amountChanging(value);
					this.SendPropertyChanging();
					this._post_impression_sub_sale_amount = value;
					this.SendPropertyChanged("post_impression_sub_sale_amount");
					this.Onpost_impression_sub_sale_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stat_date", DbType="Date NOT NULL")]
		public System.DateTime stat_date
		{
			get
			{
				return this._stat_date;
			}
			set
			{
				if ((this._stat_date != value))
				{
					this.Onstat_dateChanging(value);
					this.SendPropertyChanging();
					this._stat_date = value;
					this.SendPropertyChanged("stat_date");
					this.Onstat_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatEntity_ItemEntity", Storage="_ItemEntities", ThisKey="id", OtherKey="stat_id_n")]
		public EntitySet<ItemEntity> ItemEntities
		{
			get
			{
				return this._ItemEntities;
			}
			set
			{
				this._ItemEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PayoutEntity_StatEntity", Storage="_PayoutEntity", ThisKey="revenue_payout_id", OtherKey="id", IsForeignKey=true)]
		public PayoutEntity RevenuePayout
		{
			get
			{
				return this._PayoutEntity.Entity;
			}
			set
			{
				PayoutEntity previousValue = this._PayoutEntity.Entity;
				if (((previousValue != value) 
							|| (this._PayoutEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PayoutEntity.Entity = null;
						previousValue.Stats.Remove(this);
					}
					this._PayoutEntity.Entity = value;
					if ((value != null))
					{
						value.Stats.Add(this);
						this._revenue_payout_id = value.id;
					}
					else
					{
						this._revenue_payout_id = default(int);
					}
					this.SendPropertyChanged("RevenuePayout");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PayoutEntity_StatEntity1", Storage="_PayoutEntity1", ThisKey="cost_payout_id", OtherKey="id", IsForeignKey=true)]
		public PayoutEntity CostPayoutEntity
		{
			get
			{
				return this._PayoutEntity1.Entity;
			}
			set
			{
				PayoutEntity previousValue = this._PayoutEntity1.Entity;
				if (((previousValue != value) 
							|| (this._PayoutEntity1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PayoutEntity1.Entity = null;
						previousValue.StatEntities.Remove(this);
					}
					this._PayoutEntity1.Entity = value;
					if ((value != null))
					{
						value.StatEntities.Add(this);
						this._cost_payout_id = value.id;
					}
					else
					{
						this._cost_payout_id = default(int);
					}
					this.SendPropertyChanged("CostPayoutEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CampaignEntity_StatEntity", Storage="_CampaignEntity", ThisKey="pid", OtherKey="pid", IsForeignKey=true)]
		public CampaignEntity CampaignEntity
		{
			get
			{
				return this._CampaignEntity.Entity;
			}
			set
			{
				CampaignEntity previousValue = this._CampaignEntity.Entity;
				if (((previousValue != value) 
							|| (this._CampaignEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CampaignEntity.Entity = null;
						previousValue.StatEntities.Remove(this);
					}
					this._CampaignEntity.Entity = value;
					if ((value != null))
					{
						value.StatEntities.Add(this);
						this._pid = value.pid;
					}
					else
					{
						this._pid = default(int);
					}
					this.SendPropertyChanged("CampaignEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Affiliate_StatEntity", Storage="_AffiliateEntity", ThisKey="affid", OtherKey="affid", IsForeignKey=true)]
		public AffiliateEntity AffiliateEntity
		{
			get
			{
				return this._AffiliateEntity.Entity;
			}
			set
			{
				AffiliateEntity previousValue = this._AffiliateEntity.Entity;
				if (((previousValue != value) 
							|| (this._AffiliateEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AffiliateEntity.Entity = null;
						previousValue.StatEntities.Remove(this);
					}
					this._AffiliateEntity.Entity = value;
					if ((value != null))
					{
						value.StatEntities.Add(this);
						this._affid = value.affid;
					}
					else
					{
						this._affid = default(int);
					}
					this.SendPropertyChanged("AffiliateEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ItemEntities(ItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.StatEntity = this;
		}
		
		private void detach_ItemEntities(ItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.StatEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MediaBuyer")]
	public partial class MediaBuyerEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private EntitySet<AffiliateEntity> _AffiliateEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public MediaBuyerEntity()
		{
			this._AffiliateEntities = new EntitySet<AffiliateEntity>(new Action<AffiliateEntity>(this.attach_AffiliateEntities), new Action<AffiliateEntity>(this.detach_AffiliateEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MediaBuyerEntity_Affiliate", Storage="_AffiliateEntities", ThisKey="id", OtherKey="media_buyer_id")]
		public EntitySet<AffiliateEntity> AffiliateEntities
		{
			get
			{
				return this._AffiliateEntities;
			}
			set
			{
				this._AffiliateEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AffiliateEntities(AffiliateEntity entity)
		{
			this.SendPropertyChanging();
			entity.MediaBuyerEntity = this;
		}
		
		private void detach_AffiliateEntities(AffiliateEntity entity)
		{
			this.SendPropertyChanging();
			entity.MediaBuyerEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Source")]
	public partial class SourceEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private EntitySet<ItemEntity> _ItemEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public SourceEntity()
		{
			this._ItemEntities = new EntitySet<ItemEntity>(new Action<ItemEntity>(this.attach_ItemEntities), new Action<ItemEntity>(this.detach_ItemEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SourceEntity_ItemEntity", Storage="_ItemEntities", ThisKey="id", OtherKey="source_id")]
		public EntitySet<ItemEntity> ItemEntities
		{
			get
			{
				return this._ItemEntities;
			}
			set
			{
				this._ItemEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ItemEntities(ItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.SourceEntity = this;
		}
		
		private void detach_ItemEntities(ItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.SourceEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UnitType")]
	public partial class UnitType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private EntitySet<ItemEntity> _ItemEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public UnitType()
		{
			this._ItemEntities = new EntitySet<ItemEntity>(new Action<ItemEntity>(this.attach_ItemEntities), new Action<ItemEntity>(this.detach_ItemEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnitType_ItemEntity", Storage="_ItemEntities", ThisKey="id", OtherKey="unit_type_id")]
		public EntitySet<ItemEntity> ItemEntities
		{
			get
			{
				return this._ItemEntities;
			}
			set
			{
				this._ItemEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ItemEntities(ItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.UnitType = this;
		}
		
		private void detach_ItemEntities(ItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.UnitType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.XmlSource")]
	public partial class XmlSourceEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _data;
		
		private string _apiurl;
		
		private int _pid;
		
		private EntityRef<CampaignEntity> _CampaignEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OndataChanging(string value);
    partial void OndataChanged();
    partial void OnapiurlChanging(string value);
    partial void OnapiurlChanged();
    partial void OnpidChanging(int value);
    partial void OnpidChanged();
    #endregion
		
		public XmlSourceEntity()
		{
			this._CampaignEntity = default(EntityRef<CampaignEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string data
		{
			get
			{
				return this._data;
			}
			set
			{
				if ((this._data != value))
				{
					this.OndataChanging(value);
					this.SendPropertyChanging();
					this._data = value;
					this.SendPropertyChanged("data");
					this.OndataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apiurl", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string apiurl
		{
			get
			{
				return this._apiurl;
			}
			set
			{
				if ((this._apiurl != value))
				{
					this.OnapiurlChanging(value);
					this.SendPropertyChanging();
					this._apiurl = value;
					this.SendPropertyChanged("apiurl");
					this.OnapiurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pid", DbType="Int NOT NULL")]
		public int pid
		{
			get
			{
				return this._pid;
			}
			set
			{
				if ((this._pid != value))
				{
					if (this._CampaignEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpidChanging(value);
					this.SendPropertyChanging();
					this._pid = value;
					this.SendPropertyChanged("pid");
					this.OnpidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CampaignEntity_XmlSourceEntity", Storage="_CampaignEntity", ThisKey="pid", OtherKey="pid", IsForeignKey=true)]
		public CampaignEntity CampaignEntity
		{
			get
			{
				return this._CampaignEntity.Entity;
			}
			set
			{
				CampaignEntity previousValue = this._CampaignEntity.Entity;
				if (((previousValue != value) 
							|| (this._CampaignEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CampaignEntity.Entity = null;
						previousValue.XmlSourceEntities.Remove(this);
					}
					this._CampaignEntity.Entity = value;
					if ((value != null))
					{
						value.XmlSourceEntities.Add(this);
						this._pid = value.pid;
					}
					else
					{
						this._pid = default(int);
					}
					this.SendPropertyChanged("CampaignEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Item")]
	public partial class ItemEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private int _pid;
		
		private int _affid;
		
		private int _source_id;
		
		private int _unit_type_id;
		
		private System.Nullable<int> _stat_id_n;
		
		private int _revenue_currency_id;
		
		private int _cost_currency_id;
		
		private decimal _revenue_per_unit;
		
		private decimal _cost_per_unit;
		
		private decimal _num_units;
		
		private string _notes;
		
		private int _item_accounting_status_id;
		
		private int _item_reporting_status_id;
		
		private string _accounting_notes;
		
		private EntityRef<CurrencyEntity> _RevenueCurrencyEntity;
		
		private EntityRef<CurrencyEntity> _CostCurrencyEntity;
		
		private EntityRef<SourceEntity> _SourceEntity;
		
		private EntityRef<StatEntity> _StatEntity;
		
		private EntityRef<UnitType> _UnitType;
		
		private EntityRef<ItemAccountingStatusEntity> _ItemAccountingStatusEntity;
		
		private EntityRef<ItemReportingStatusEntity> _ItemReportingStatusEntity;
		
		private EntityRef<CampaignEntity> _CampaignEntity;
		
		private EntityRef<AffiliateEntity> _AffiliateEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnpidChanging(int value);
    partial void OnpidChanged();
    partial void OnaffidChanging(int value);
    partial void OnaffidChanged();
    partial void Onsource_idChanging(int value);
    partial void Onsource_idChanged();
    partial void Onunit_type_idChanging(int value);
    partial void Onunit_type_idChanged();
    partial void Onstat_id_nChanging(System.Nullable<int> value);
    partial void Onstat_id_nChanged();
    partial void Onrevenue_currency_idChanging(int value);
    partial void Onrevenue_currency_idChanged();
    partial void Oncost_currency_idChanging(int value);
    partial void Oncost_currency_idChanged();
    partial void Onrevenue_per_unitChanging(decimal value);
    partial void Onrevenue_per_unitChanged();
    partial void Oncost_per_unitChanging(decimal value);
    partial void Oncost_per_unitChanged();
    partial void Onnum_unitsChanging(decimal value);
    partial void Onnum_unitsChanged();
    partial void OnnotesChanging(string value);
    partial void OnnotesChanged();
    partial void Onitem_accounting_status_idChanging(int value);
    partial void Onitem_accounting_status_idChanged();
    partial void Onitem_reporting_status_idChanging(int value);
    partial void Onitem_reporting_status_idChanged();
    partial void Onaccounting_notesChanging(string value);
    partial void Onaccounting_notesChanged();
    #endregion
		
		public ItemEntity()
		{
			this._RevenueCurrencyEntity = default(EntityRef<CurrencyEntity>);
			this._CostCurrencyEntity = default(EntityRef<CurrencyEntity>);
			this._SourceEntity = default(EntityRef<SourceEntity>);
			this._StatEntity = default(EntityRef<StatEntity>);
			this._UnitType = default(EntityRef<UnitType>);
			this._ItemAccountingStatusEntity = default(EntityRef<ItemAccountingStatusEntity>);
			this._ItemReportingStatusEntity = default(EntityRef<ItemReportingStatusEntity>);
			this._CampaignEntity = default(EntityRef<CampaignEntity>);
			this._AffiliateEntity = default(EntityRef<AffiliateEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pid", DbType="Int NOT NULL")]
		public int pid
		{
			get
			{
				return this._pid;
			}
			set
			{
				if ((this._pid != value))
				{
					if (this._CampaignEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpidChanging(value);
					this.SendPropertyChanging();
					this._pid = value;
					this.SendPropertyChanged("pid");
					this.OnpidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_affid", DbType="Int NOT NULL")]
		public int affid
		{
			get
			{
				return this._affid;
			}
			set
			{
				if ((this._affid != value))
				{
					if (this._AffiliateEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnaffidChanging(value);
					this.SendPropertyChanging();
					this._affid = value;
					this.SendPropertyChanged("affid");
					this.OnaffidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_source_id", DbType="Int NOT NULL")]
		public int source_id
		{
			get
			{
				return this._source_id;
			}
			set
			{
				if ((this._source_id != value))
				{
					if (this._SourceEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsource_idChanging(value);
					this.SendPropertyChanging();
					this._source_id = value;
					this.SendPropertyChanged("source_id");
					this.Onsource_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unit_type_id", DbType="Int NOT NULL")]
		public int unit_type_id
		{
			get
			{
				return this._unit_type_id;
			}
			set
			{
				if ((this._unit_type_id != value))
				{
					if (this._UnitType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onunit_type_idChanging(value);
					this.SendPropertyChanging();
					this._unit_type_id = value;
					this.SendPropertyChanged("unit_type_id");
					this.Onunit_type_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stat_id_n", DbType="Int")]
		public System.Nullable<int> stat_id_n
		{
			get
			{
				return this._stat_id_n;
			}
			set
			{
				if ((this._stat_id_n != value))
				{
					if (this._StatEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstat_id_nChanging(value);
					this.SendPropertyChanging();
					this._stat_id_n = value;
					this.SendPropertyChanged("stat_id_n");
					this.Onstat_id_nChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_revenue_currency_id", DbType="Int NOT NULL")]
		public int revenue_currency_id
		{
			get
			{
				return this._revenue_currency_id;
			}
			set
			{
				if ((this._revenue_currency_id != value))
				{
					if (this._RevenueCurrencyEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onrevenue_currency_idChanging(value);
					this.SendPropertyChanging();
					this._revenue_currency_id = value;
					this.SendPropertyChanged("revenue_currency_id");
					this.Onrevenue_currency_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cost_currency_id", DbType="Int NOT NULL")]
		public int cost_currency_id
		{
			get
			{
				return this._cost_currency_id;
			}
			set
			{
				if ((this._cost_currency_id != value))
				{
					if (this._CostCurrencyEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncost_currency_idChanging(value);
					this.SendPropertyChanging();
					this._cost_currency_id = value;
					this.SendPropertyChanged("cost_currency_id");
					this.Oncost_currency_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_revenue_per_unit", DbType="Money NOT NULL")]
		public decimal revenue_per_unit
		{
			get
			{
				return this._revenue_per_unit;
			}
			set
			{
				if ((this._revenue_per_unit != value))
				{
					this.Onrevenue_per_unitChanging(value);
					this.SendPropertyChanging();
					this._revenue_per_unit = value;
					this.SendPropertyChanged("revenue_per_unit");
					this.Onrevenue_per_unitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cost_per_unit", DbType="Money NOT NULL")]
		public decimal cost_per_unit
		{
			get
			{
				return this._cost_per_unit;
			}
			set
			{
				if ((this._cost_per_unit != value))
				{
					this.Oncost_per_unitChanging(value);
					this.SendPropertyChanging();
					this._cost_per_unit = value;
					this.SendPropertyChanged("cost_per_unit");
					this.Oncost_per_unitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_num_units", DbType="Decimal(12,6) NOT NULL")]
		public decimal num_units
		{
			get
			{
				return this._num_units;
			}
			set
			{
				if ((this._num_units != value))
				{
					this.Onnum_unitsChanging(value);
					this.SendPropertyChanging();
					this._num_units = value;
					this.SendPropertyChanged("num_units");
					this.Onnum_unitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notes", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string notes
		{
			get
			{
				return this._notes;
			}
			set
			{
				if ((this._notes != value))
				{
					this.OnnotesChanging(value);
					this.SendPropertyChanging();
					this._notes = value;
					this.SendPropertyChanged("notes");
					this.OnnotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_accounting_status_id", DbType="Int NOT NULL")]
		public int item_accounting_status_id
		{
			get
			{
				return this._item_accounting_status_id;
			}
			set
			{
				if ((this._item_accounting_status_id != value))
				{
					if (this._ItemAccountingStatusEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onitem_accounting_status_idChanging(value);
					this.SendPropertyChanging();
					this._item_accounting_status_id = value;
					this.SendPropertyChanged("item_accounting_status_id");
					this.Onitem_accounting_status_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_reporting_status_id", DbType="Int NOT NULL")]
		public int item_reporting_status_id
		{
			get
			{
				return this._item_reporting_status_id;
			}
			set
			{
				if ((this._item_reporting_status_id != value))
				{
					if (this._ItemReportingStatusEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onitem_reporting_status_idChanging(value);
					this.SendPropertyChanging();
					this._item_reporting_status_id = value;
					this.SendPropertyChanged("item_reporting_status_id");
					this.Onitem_reporting_status_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accounting_notes", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string accounting_notes
		{
			get
			{
				return this._accounting_notes;
			}
			set
			{
				if ((this._accounting_notes != value))
				{
					this.Onaccounting_notesChanging(value);
					this.SendPropertyChanging();
					this._accounting_notes = value;
					this.SendPropertyChanged("accounting_notes");
					this.Onaccounting_notesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CurrencyEntity_ItemEntity", Storage="_RevenueCurrencyEntity", ThisKey="revenue_currency_id", OtherKey="id", IsForeignKey=true)]
		public CurrencyEntity RevenueCurrencyEntity
		{
			get
			{
				return this._RevenueCurrencyEntity.Entity;
			}
			set
			{
				CurrencyEntity previousValue = this._RevenueCurrencyEntity.Entity;
				if (((previousValue != value) 
							|| (this._RevenueCurrencyEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RevenueCurrencyEntity.Entity = null;
						previousValue.Items.Remove(this);
					}
					this._RevenueCurrencyEntity.Entity = value;
					if ((value != null))
					{
						value.Items.Add(this);
						this._revenue_currency_id = value.id;
					}
					else
					{
						this._revenue_currency_id = default(int);
					}
					this.SendPropertyChanged("RevenueCurrencyEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CurrencyEntity_ItemEntity1", Storage="_CostCurrencyEntity", ThisKey="cost_currency_id", OtherKey="id", IsForeignKey=true)]
		public CurrencyEntity CostCurrencyEntity
		{
			get
			{
				return this._CostCurrencyEntity.Entity;
			}
			set
			{
				CurrencyEntity previousValue = this._CostCurrencyEntity.Entity;
				if (((previousValue != value) 
							|| (this._CostCurrencyEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CostCurrencyEntity.Entity = null;
						previousValue.ItemEntities.Remove(this);
					}
					this._CostCurrencyEntity.Entity = value;
					if ((value != null))
					{
						value.ItemEntities.Add(this);
						this._cost_currency_id = value.id;
					}
					else
					{
						this._cost_currency_id = default(int);
					}
					this.SendPropertyChanged("CostCurrencyEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SourceEntity_ItemEntity", Storage="_SourceEntity", ThisKey="source_id", OtherKey="id", IsForeignKey=true)]
		public SourceEntity SourceEntity
		{
			get
			{
				return this._SourceEntity.Entity;
			}
			set
			{
				SourceEntity previousValue = this._SourceEntity.Entity;
				if (((previousValue != value) 
							|| (this._SourceEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SourceEntity.Entity = null;
						previousValue.ItemEntities.Remove(this);
					}
					this._SourceEntity.Entity = value;
					if ((value != null))
					{
						value.ItemEntities.Add(this);
						this._source_id = value.id;
					}
					else
					{
						this._source_id = default(int);
					}
					this.SendPropertyChanged("SourceEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatEntity_ItemEntity", Storage="_StatEntity", ThisKey="stat_id_n", OtherKey="id", IsForeignKey=true)]
		public StatEntity StatEntity
		{
			get
			{
				return this._StatEntity.Entity;
			}
			set
			{
				StatEntity previousValue = this._StatEntity.Entity;
				if (((previousValue != value) 
							|| (this._StatEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StatEntity.Entity = null;
						previousValue.ItemEntities.Remove(this);
					}
					this._StatEntity.Entity = value;
					if ((value != null))
					{
						value.ItemEntities.Add(this);
						this._stat_id_n = value.id;
					}
					else
					{
						this._stat_id_n = default(Nullable<int>);
					}
					this.SendPropertyChanged("StatEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnitType_ItemEntity", Storage="_UnitType", ThisKey="unit_type_id", OtherKey="id", IsForeignKey=true)]
		public UnitType UnitType
		{
			get
			{
				return this._UnitType.Entity;
			}
			set
			{
				UnitType previousValue = this._UnitType.Entity;
				if (((previousValue != value) 
							|| (this._UnitType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UnitType.Entity = null;
						previousValue.ItemEntities.Remove(this);
					}
					this._UnitType.Entity = value;
					if ((value != null))
					{
						value.ItemEntities.Add(this);
						this._unit_type_id = value.id;
					}
					else
					{
						this._unit_type_id = default(int);
					}
					this.SendPropertyChanged("UnitType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemAccountingStatusEntity_ItemEntity", Storage="_ItemAccountingStatusEntity", ThisKey="item_accounting_status_id", OtherKey="id", IsForeignKey=true)]
		public ItemAccountingStatusEntity ItemAccountingStatusEntity
		{
			get
			{
				return this._ItemAccountingStatusEntity.Entity;
			}
			set
			{
				ItemAccountingStatusEntity previousValue = this._ItemAccountingStatusEntity.Entity;
				if (((previousValue != value) 
							|| (this._ItemAccountingStatusEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ItemAccountingStatusEntity.Entity = null;
						previousValue.ItemEntities.Remove(this);
					}
					this._ItemAccountingStatusEntity.Entity = value;
					if ((value != null))
					{
						value.ItemEntities.Add(this);
						this._item_accounting_status_id = value.id;
					}
					else
					{
						this._item_accounting_status_id = default(int);
					}
					this.SendPropertyChanged("ItemAccountingStatusEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemReportingStatusEntity_ItemEntity", Storage="_ItemReportingStatusEntity", ThisKey="item_reporting_status_id", OtherKey="id", IsForeignKey=true)]
		public ItemReportingStatusEntity ItemReportingStatusEntity
		{
			get
			{
				return this._ItemReportingStatusEntity.Entity;
			}
			set
			{
				ItemReportingStatusEntity previousValue = this._ItemReportingStatusEntity.Entity;
				if (((previousValue != value) 
							|| (this._ItemReportingStatusEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ItemReportingStatusEntity.Entity = null;
						previousValue.ItemEntities.Remove(this);
					}
					this._ItemReportingStatusEntity.Entity = value;
					if ((value != null))
					{
						value.ItemEntities.Add(this);
						this._item_reporting_status_id = value.id;
					}
					else
					{
						this._item_reporting_status_id = default(int);
					}
					this.SendPropertyChanged("ItemReportingStatusEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CampaignEntity_ItemEntity", Storage="_CampaignEntity", ThisKey="pid", OtherKey="pid", IsForeignKey=true)]
		public CampaignEntity CampaignEntity
		{
			get
			{
				return this._CampaignEntity.Entity;
			}
			set
			{
				CampaignEntity previousValue = this._CampaignEntity.Entity;
				if (((previousValue != value) 
							|| (this._CampaignEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CampaignEntity.Entity = null;
						previousValue.ItemEntities.Remove(this);
					}
					this._CampaignEntity.Entity = value;
					if ((value != null))
					{
						value.ItemEntities.Add(this);
						this._pid = value.pid;
					}
					else
					{
						this._pid = default(int);
					}
					this.SendPropertyChanged("CampaignEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Affiliate_ItemEntity", Storage="_AffiliateEntity", ThisKey="affid", OtherKey="affid", IsForeignKey=true)]
		public AffiliateEntity AffiliateEntity
		{
			get
			{
				return this._AffiliateEntity.Entity;
			}
			set
			{
				AffiliateEntity previousValue = this._AffiliateEntity.Entity;
				if (((previousValue != value) 
							|| (this._AffiliateEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AffiliateEntity.Entity = null;
						previousValue.ItemEntities.Remove(this);
					}
					this._AffiliateEntity.Entity = value;
					if ((value != null))
					{
						value.ItemEntities.Add(this);
						this._affid = value.affid;
					}
					else
					{
						this._affid = default(int);
					}
					this.SendPropertyChanged("AffiliateEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ItemAccountingStatus")]
	public partial class ItemAccountingStatusEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private EntitySet<ItemEntity> _ItemEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public ItemAccountingStatusEntity()
		{
			this._ItemEntities = new EntitySet<ItemEntity>(new Action<ItemEntity>(this.attach_ItemEntities), new Action<ItemEntity>(this.detach_ItemEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemAccountingStatusEntity_ItemEntity", Storage="_ItemEntities", ThisKey="id", OtherKey="item_accounting_status_id")]
		public EntitySet<ItemEntity> ItemEntities
		{
			get
			{
				return this._ItemEntities;
			}
			set
			{
				this._ItemEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ItemEntities(ItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.ItemAccountingStatusEntity = this;
		}
		
		private void detach_ItemEntities(ItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.ItemAccountingStatusEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ItemReportingStatus")]
	public partial class ItemReportingStatusEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private EntitySet<ItemEntity> _ItemEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public ItemReportingStatusEntity()
		{
			this._ItemEntities = new EntitySet<ItemEntity>(new Action<ItemEntity>(this.attach_ItemEntities), new Action<ItemEntity>(this.detach_ItemEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemReportingStatusEntity_ItemEntity", Storage="_ItemEntities", ThisKey="id", OtherKey="item_reporting_status_id")]
		public EntitySet<ItemEntity> ItemEntities
		{
			get
			{
				return this._ItemEntities;
			}
			set
			{
				this._ItemEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ItemEntities(ItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.ItemReportingStatusEntity = this;
		}
		
		private void detach_ItemEntities(ItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.ItemReportingStatusEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Campaign")]
	public partial class CampaignEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _account_manager_id;
		
		private int _campaign_status_id;
		
		private int _ad_manager_id;
		
		private int _advertiser_id;
		
		private int _pid;
		
		private string _campaign_name;
		
		private string _campaign_type;
		
		private System.Nullable<System.DateTime> _modified;
		
		private System.Nullable<System.DateTime> _created;
		
		private string _dt_campaign_status;
		
		private string _dt_campaign_url;
		
		private string _dt_allowed_country_names;
		
		private System.Nullable<bool> _is_email;
		
		private System.Nullable<bool> _is_search;
		
		private System.Nullable<bool> _is_display;
		
		private System.Nullable<bool> _is_coreg;
		
		private System.Nullable<int> _max_scrub;
		
		private string _notes;
		
		private EntitySet<StatEntity> _StatEntities;
		
		private EntitySet<XmlSourceEntity> _XmlSourceEntities;
		
		private EntitySet<ItemEntity> _ItemEntities;
		
		private EntityRef<AccountManagerEntity> _AccountManagerEntity;
		
		private EntityRef<AdManagerEntity> _AdManagerEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onaccount_manager_idChanging(int value);
    partial void Onaccount_manager_idChanged();
    partial void Oncampaign_status_idChanging(int value);
    partial void Oncampaign_status_idChanged();
    partial void Onad_manager_idChanging(int value);
    partial void Onad_manager_idChanged();
    partial void Onadvertiser_idChanging(int value);
    partial void Onadvertiser_idChanged();
    partial void OnpidChanging(int value);
    partial void OnpidChanged();
    partial void Oncampaign_nameChanging(string value);
    partial void Oncampaign_nameChanged();
    partial void Oncampaign_typeChanging(string value);
    partial void Oncampaign_typeChanged();
    partial void OnmodifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnmodifiedChanged();
    partial void OncreatedChanging(System.Nullable<System.DateTime> value);
    partial void OncreatedChanged();
    partial void Ondt_campaign_statusChanging(string value);
    partial void Ondt_campaign_statusChanged();
    partial void Ondt_campaign_urlChanging(string value);
    partial void Ondt_campaign_urlChanged();
    partial void Ondt_allowed_country_namesChanging(string value);
    partial void Ondt_allowed_country_namesChanged();
    partial void Onis_emailChanging(System.Nullable<bool> value);
    partial void Onis_emailChanged();
    partial void Onis_searchChanging(System.Nullable<bool> value);
    partial void Onis_searchChanged();
    partial void Onis_displayChanging(System.Nullable<bool> value);
    partial void Onis_displayChanged();
    partial void Onis_coregChanging(System.Nullable<bool> value);
    partial void Onis_coregChanged();
    partial void Onmax_scrubChanging(System.Nullable<int> value);
    partial void Onmax_scrubChanged();
    partial void OnnotesChanging(string value);
    partial void OnnotesChanged();
    #endregion
		
		public CampaignEntity()
		{
			this._StatEntities = new EntitySet<StatEntity>(new Action<StatEntity>(this.attach_StatEntities), new Action<StatEntity>(this.detach_StatEntities));
			this._XmlSourceEntities = new EntitySet<XmlSourceEntity>(new Action<XmlSourceEntity>(this.attach_XmlSourceEntities), new Action<XmlSourceEntity>(this.detach_XmlSourceEntities));
			this._ItemEntities = new EntitySet<ItemEntity>(new Action<ItemEntity>(this.attach_ItemEntities), new Action<ItemEntity>(this.detach_ItemEntities));
			this._AccountManagerEntity = default(EntityRef<AccountManagerEntity>);
			this._AdManagerEntity = default(EntityRef<AdManagerEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account_manager_id", DbType="Int NOT NULL")]
		public int account_manager_id
		{
			get
			{
				return this._account_manager_id;
			}
			set
			{
				if ((this._account_manager_id != value))
				{
					if (this._AccountManagerEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onaccount_manager_idChanging(value);
					this.SendPropertyChanging();
					this._account_manager_id = value;
					this.SendPropertyChanged("account_manager_id");
					this.Onaccount_manager_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_campaign_status_id", DbType="Int NOT NULL")]
		public int campaign_status_id
		{
			get
			{
				return this._campaign_status_id;
			}
			set
			{
				if ((this._campaign_status_id != value))
				{
					this.Oncampaign_status_idChanging(value);
					this.SendPropertyChanging();
					this._campaign_status_id = value;
					this.SendPropertyChanged("campaign_status_id");
					this.Oncampaign_status_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ad_manager_id", DbType="Int NOT NULL")]
		public int ad_manager_id
		{
			get
			{
				return this._ad_manager_id;
			}
			set
			{
				if ((this._ad_manager_id != value))
				{
					if (this._AdManagerEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onad_manager_idChanging(value);
					this.SendPropertyChanging();
					this._ad_manager_id = value;
					this.SendPropertyChanged("ad_manager_id");
					this.Onad_manager_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_advertiser_id", DbType="Int NOT NULL")]
		public int advertiser_id
		{
			get
			{
				return this._advertiser_id;
			}
			set
			{
				if ((this._advertiser_id != value))
				{
					this.Onadvertiser_idChanging(value);
					this.SendPropertyChanging();
					this._advertiser_id = value;
					this.SendPropertyChanged("advertiser_id");
					this.Onadvertiser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pid", DbType="Int NOT NULL")]
		public int pid
		{
			get
			{
				return this._pid;
			}
			set
			{
				if ((this._pid != value))
				{
					this.OnpidChanging(value);
					this.SendPropertyChanging();
					this._pid = value;
					this.SendPropertyChanged("pid");
					this.OnpidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_campaign_name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string campaign_name
		{
			get
			{
				return this._campaign_name;
			}
			set
			{
				if ((this._campaign_name != value))
				{
					this.Oncampaign_nameChanging(value);
					this.SendPropertyChanging();
					this._campaign_name = value;
					this.SendPropertyChanged("campaign_name");
					this.Oncampaign_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_campaign_type", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string campaign_type
		{
			get
			{
				return this._campaign_type;
			}
			set
			{
				if ((this._campaign_type != value))
				{
					this.Oncampaign_typeChanging(value);
					this.SendPropertyChanging();
					this._campaign_type = value;
					this.SendPropertyChanged("campaign_type");
					this.Oncampaign_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified", DbType="DateTime")]
		public System.Nullable<System.DateTime> modified
		{
			get
			{
				return this._modified;
			}
			set
			{
				if ((this._modified != value))
				{
					this.OnmodifiedChanging(value);
					this.SendPropertyChanging();
					this._modified = value;
					this.SendPropertyChanged("modified");
					this.OnmodifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime")]
		public System.Nullable<System.DateTime> created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dt_campaign_status", DbType="VarChar(25)")]
		public string dt_campaign_status
		{
			get
			{
				return this._dt_campaign_status;
			}
			set
			{
				if ((this._dt_campaign_status != value))
				{
					this.Ondt_campaign_statusChanging(value);
					this.SendPropertyChanging();
					this._dt_campaign_status = value;
					this.SendPropertyChanged("dt_campaign_status");
					this.Ondt_campaign_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dt_campaign_url", DbType="VarChar(255)")]
		public string dt_campaign_url
		{
			get
			{
				return this._dt_campaign_url;
			}
			set
			{
				if ((this._dt_campaign_url != value))
				{
					this.Ondt_campaign_urlChanging(value);
					this.SendPropertyChanging();
					this._dt_campaign_url = value;
					this.SendPropertyChanged("dt_campaign_url");
					this.Ondt_campaign_urlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dt_allowed_country_names", DbType="VarChar(255)")]
		public string dt_allowed_country_names
		{
			get
			{
				return this._dt_allowed_country_names;
			}
			set
			{
				if ((this._dt_allowed_country_names != value))
				{
					this.Ondt_allowed_country_namesChanging(value);
					this.SendPropertyChanging();
					this._dt_allowed_country_names = value;
					this.SendPropertyChanged("dt_allowed_country_names");
					this.Ondt_allowed_country_namesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_email", DbType="Bit")]
		public System.Nullable<bool> is_email
		{
			get
			{
				return this._is_email;
			}
			set
			{
				if ((this._is_email != value))
				{
					this.Onis_emailChanging(value);
					this.SendPropertyChanging();
					this._is_email = value;
					this.SendPropertyChanged("is_email");
					this.Onis_emailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_search", DbType="Bit")]
		public System.Nullable<bool> is_search
		{
			get
			{
				return this._is_search;
			}
			set
			{
				if ((this._is_search != value))
				{
					this.Onis_searchChanging(value);
					this.SendPropertyChanging();
					this._is_search = value;
					this.SendPropertyChanged("is_search");
					this.Onis_searchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_display", DbType="Bit")]
		public System.Nullable<bool> is_display
		{
			get
			{
				return this._is_display;
			}
			set
			{
				if ((this._is_display != value))
				{
					this.Onis_displayChanging(value);
					this.SendPropertyChanging();
					this._is_display = value;
					this.SendPropertyChanged("is_display");
					this.Onis_displayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_coreg", DbType="Bit")]
		public System.Nullable<bool> is_coreg
		{
			get
			{
				return this._is_coreg;
			}
			set
			{
				if ((this._is_coreg != value))
				{
					this.Onis_coregChanging(value);
					this.SendPropertyChanging();
					this._is_coreg = value;
					this.SendPropertyChanged("is_coreg");
					this.Onis_coregChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_max_scrub", DbType="Int")]
		public System.Nullable<int> max_scrub
		{
			get
			{
				return this._max_scrub;
			}
			set
			{
				if ((this._max_scrub != value))
				{
					this.Onmax_scrubChanging(value);
					this.SendPropertyChanging();
					this._max_scrub = value;
					this.SendPropertyChanged("max_scrub");
					this.Onmax_scrubChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notes", DbType="VarChar(MAX)")]
		public string notes
		{
			get
			{
				return this._notes;
			}
			set
			{
				if ((this._notes != value))
				{
					this.OnnotesChanging(value);
					this.SendPropertyChanging();
					this._notes = value;
					this.SendPropertyChanged("notes");
					this.OnnotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CampaignEntity_StatEntity", Storage="_StatEntities", ThisKey="pid", OtherKey="pid")]
		public EntitySet<StatEntity> StatEntities
		{
			get
			{
				return this._StatEntities;
			}
			set
			{
				this._StatEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CampaignEntity_XmlSourceEntity", Storage="_XmlSourceEntities", ThisKey="pid", OtherKey="pid")]
		public EntitySet<XmlSourceEntity> XmlSourceEntities
		{
			get
			{
				return this._XmlSourceEntities;
			}
			set
			{
				this._XmlSourceEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CampaignEntity_ItemEntity", Storage="_ItemEntities", ThisKey="pid", OtherKey="pid")]
		public EntitySet<ItemEntity> ItemEntities
		{
			get
			{
				return this._ItemEntities;
			}
			set
			{
				this._ItemEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccountManagerEntity_CampaignEntity", Storage="_AccountManagerEntity", ThisKey="account_manager_id", OtherKey="id", IsForeignKey=true)]
		public AccountManagerEntity AccountManagerEntity
		{
			get
			{
				return this._AccountManagerEntity.Entity;
			}
			set
			{
				AccountManagerEntity previousValue = this._AccountManagerEntity.Entity;
				if (((previousValue != value) 
							|| (this._AccountManagerEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountManagerEntity.Entity = null;
						previousValue.CampaignEntities.Remove(this);
					}
					this._AccountManagerEntity.Entity = value;
					if ((value != null))
					{
						value.CampaignEntities.Add(this);
						this._account_manager_id = value.id;
					}
					else
					{
						this._account_manager_id = default(int);
					}
					this.SendPropertyChanged("AccountManagerEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdManagerEntity_CampaignEntity", Storage="_AdManagerEntity", ThisKey="ad_manager_id", OtherKey="id", IsForeignKey=true)]
		public AdManagerEntity AdManagerEntity
		{
			get
			{
				return this._AdManagerEntity.Entity;
			}
			set
			{
				AdManagerEntity previousValue = this._AdManagerEntity.Entity;
				if (((previousValue != value) 
							|| (this._AdManagerEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdManagerEntity.Entity = null;
						previousValue.CampaignEntities.Remove(this);
					}
					this._AdManagerEntity.Entity = value;
					if ((value != null))
					{
						value.CampaignEntities.Add(this);
						this._ad_manager_id = value.id;
					}
					else
					{
						this._ad_manager_id = default(int);
					}
					this.SendPropertyChanged("AdManagerEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StatEntities(StatEntity entity)
		{
			this.SendPropertyChanging();
			entity.CampaignEntity = this;
		}
		
		private void detach_StatEntities(StatEntity entity)
		{
			this.SendPropertyChanging();
			entity.CampaignEntity = null;
		}
		
		private void attach_XmlSourceEntities(XmlSourceEntity entity)
		{
			this.SendPropertyChanging();
			entity.CampaignEntity = this;
		}
		
		private void detach_XmlSourceEntities(XmlSourceEntity entity)
		{
			this.SendPropertyChanging();
			entity.CampaignEntity = null;
		}
		
		private void attach_ItemEntities(ItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.CampaignEntity = this;
		}
		
		private void detach_ItemEntities(ItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.CampaignEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Affiliate")]
	public partial class AffiliateEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private int _media_buyer_id;
		
		private int _affid;
		
		private int _currency_id;
		
		private string _email;
		
		private string _add_code;
		
		private string _name2;
		
		private System.Nullable<int> _net_term_type_id;
		
		private int _payment_method_id;
		
		private EntitySet<StatEntity> _StatEntities;
		
		private EntitySet<ItemEntity> _ItemEntities;
		
		private EntityRef<CurrencyEntity> _CurrencyEntity;
		
		private EntityRef<MediaBuyerEntity> _MediaBuyerEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onmedia_buyer_idChanging(int value);
    partial void Onmedia_buyer_idChanged();
    partial void OnaffidChanging(int value);
    partial void OnaffidChanged();
    partial void Oncurrency_idChanging(int value);
    partial void Oncurrency_idChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Onadd_codeChanging(string value);
    partial void Onadd_codeChanged();
    partial void Onname2Changing(string value);
    partial void Onname2Changed();
    partial void Onnet_term_type_idChanging(System.Nullable<int> value);
    partial void Onnet_term_type_idChanged();
    partial void Onpayment_method_idChanging(int value);
    partial void Onpayment_method_idChanged();
    #endregion
		
		public AffiliateEntity()
		{
			this._StatEntities = new EntitySet<StatEntity>(new Action<StatEntity>(this.attach_StatEntities), new Action<StatEntity>(this.detach_StatEntities));
			this._ItemEntities = new EntitySet<ItemEntity>(new Action<ItemEntity>(this.attach_ItemEntities), new Action<ItemEntity>(this.detach_ItemEntities));
			this._CurrencyEntity = default(EntityRef<CurrencyEntity>);
			this._MediaBuyerEntity = default(EntityRef<MediaBuyerEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_media_buyer_id", DbType="Int NOT NULL")]
		public int media_buyer_id
		{
			get
			{
				return this._media_buyer_id;
			}
			set
			{
				if ((this._media_buyer_id != value))
				{
					if (this._MediaBuyerEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmedia_buyer_idChanging(value);
					this.SendPropertyChanging();
					this._media_buyer_id = value;
					this.SendPropertyChanged("media_buyer_id");
					this.Onmedia_buyer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_affid", DbType="Int NOT NULL")]
		public int affid
		{
			get
			{
				return this._affid;
			}
			set
			{
				if ((this._affid != value))
				{
					this.OnaffidChanging(value);
					this.SendPropertyChanging();
					this._affid = value;
					this.SendPropertyChanged("affid");
					this.OnaffidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currency_id", DbType="Int NOT NULL")]
		public int currency_id
		{
			get
			{
				return this._currency_id;
			}
			set
			{
				if ((this._currency_id != value))
				{
					if (this._CurrencyEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncurrency_idChanging(value);
					this.SendPropertyChanging();
					this._currency_id = value;
					this.SendPropertyChanged("currency_id");
					this.Oncurrency_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_add_code", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string add_code
		{
			get
			{
				return this._add_code;
			}
			set
			{
				if ((this._add_code != value))
				{
					this.Onadd_codeChanging(value);
					this.SendPropertyChanging();
					this._add_code = value;
					this.SendPropertyChanged("add_code");
					this.Onadd_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name2", AutoSync=AutoSync.Always, DbType="VarChar(358) NOT NULL", CanBeNull=false, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string name2
		{
			get
			{
				return this._name2;
			}
			set
			{
				if ((this._name2 != value))
				{
					this.Onname2Changing(value);
					this.SendPropertyChanging();
					this._name2 = value;
					this.SendPropertyChanged("name2");
					this.Onname2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_net_term_type_id", DbType="Int")]
		public System.Nullable<int> net_term_type_id
		{
			get
			{
				return this._net_term_type_id;
			}
			set
			{
				if ((this._net_term_type_id != value))
				{
					this.Onnet_term_type_idChanging(value);
					this.SendPropertyChanging();
					this._net_term_type_id = value;
					this.SendPropertyChanged("net_term_type_id");
					this.Onnet_term_type_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_method_id", DbType="Int NOT NULL")]
		public int payment_method_id
		{
			get
			{
				return this._payment_method_id;
			}
			set
			{
				if ((this._payment_method_id != value))
				{
					this.Onpayment_method_idChanging(value);
					this.SendPropertyChanging();
					this._payment_method_id = value;
					this.SendPropertyChanged("payment_method_id");
					this.Onpayment_method_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Affiliate_StatEntity", Storage="_StatEntities", ThisKey="affid", OtherKey="affid")]
		public EntitySet<StatEntity> StatEntities
		{
			get
			{
				return this._StatEntities;
			}
			set
			{
				this._StatEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Affiliate_ItemEntity", Storage="_ItemEntities", ThisKey="affid", OtherKey="affid")]
		public EntitySet<ItemEntity> ItemEntities
		{
			get
			{
				return this._ItemEntities;
			}
			set
			{
				this._ItemEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CurrencyEntity_Affiliate", Storage="_CurrencyEntity", ThisKey="currency_id", OtherKey="id", IsForeignKey=true)]
		public CurrencyEntity CurrencyEntity
		{
			get
			{
				return this._CurrencyEntity.Entity;
			}
			set
			{
				CurrencyEntity previousValue = this._CurrencyEntity.Entity;
				if (((previousValue != value) 
							|| (this._CurrencyEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CurrencyEntity.Entity = null;
						previousValue.AffiliateEntities.Remove(this);
					}
					this._CurrencyEntity.Entity = value;
					if ((value != null))
					{
						value.AffiliateEntities.Add(this);
						this._currency_id = value.id;
					}
					else
					{
						this._currency_id = default(int);
					}
					this.SendPropertyChanged("CurrencyEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MediaBuyerEntity_Affiliate", Storage="_MediaBuyerEntity", ThisKey="media_buyer_id", OtherKey="id", IsForeignKey=true)]
		public MediaBuyerEntity MediaBuyerEntity
		{
			get
			{
				return this._MediaBuyerEntity.Entity;
			}
			set
			{
				MediaBuyerEntity previousValue = this._MediaBuyerEntity.Entity;
				if (((previousValue != value) 
							|| (this._MediaBuyerEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MediaBuyerEntity.Entity = null;
						previousValue.AffiliateEntities.Remove(this);
					}
					this._MediaBuyerEntity.Entity = value;
					if ((value != null))
					{
						value.AffiliateEntities.Add(this);
						this._media_buyer_id = value.id;
					}
					else
					{
						this._media_buyer_id = default(int);
					}
					this.SendPropertyChanged("MediaBuyerEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StatEntities(StatEntity entity)
		{
			this.SendPropertyChanging();
			entity.AffiliateEntity = this;
		}
		
		private void detach_StatEntities(StatEntity entity)
		{
			this.SendPropertyChanging();
			entity.AffiliateEntity = null;
		}
		
		private void attach_ItemEntities(ItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.AffiliateEntity = this;
		}
		
		private void detach_ItemEntities(ItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.AffiliateEntity = null;
		}
	}
}
#pragma warning restore 1591
