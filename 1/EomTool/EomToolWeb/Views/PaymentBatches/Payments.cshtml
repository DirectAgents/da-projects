@model System.Linq.IGrouping<PaymentGroup, EomTool.Domain.Entities.PublisherPayment>
@{
    bool allowHold = ViewBag.AllowHold ?? false;
    var iGroup = ViewData["iGroup"];
    int iPayment = 0;
    var payoutTotal = Model.Sum(p => p.PubPayout);
}

<table style="border:solid">
<caption style="text-align:left">@Model.Key.Currency | @Model.Key.PaymentMethod | @Model.Key.NetTermType</caption>
@foreach (var payment in Model.OrderBy(p => p.Publisher))
{
<tr>
    <td>@payment.AccountingPeriod</td>
    <td><a href="#" onclick="ShowPubRep('@payment.Publisher', '@payment.AccountingPeriod'); return false">@payment.Publisher</a></td>
    <td style="text-align:right">@Html.FormatCurrency(payment.PubPayCurr, payment.PubPayout.Value)</td>
    <td id="actionarea@(iGroup)_@(iPayment)">
        @using (Html.BeginForm("ReleaseItems", "PaymentBatches", FormMethod.Post, new { id = "form" + iGroup + "_" + iPayment }))
        {
            <input type="hidden" name="acctperiod" value="@payment.AccountingPeriod" />
            <input type="hidden" name="itemids" value="@payment.ItemIds" />
            <a href="#" onclick="if (confirm('Press OK to confirm Release')) ReleasePayment('@(iGroup +"_"+ iPayment)'); return false">Release</a>
            if (allowHold) {
                <a href="#" onclick="if (confirm('Press OK to confirm Hold')) HoldPayment('@(iGroup +"_"+ iPayment)')">Hold</a>
            }
        }
    </td>
    <td id="statusarea@(iGroup)_@(iPayment)">@payment.AccountingStatus</td>
    <td>@payment.PaymentBatchId</td>
    <td>@payment.AffIds</td>
</tr>
    iPayment++;
}
<tr>
    <td></td>
    <td style="font-weight:bold">TOTAL</td>
    <td style="font-weight:bold">@Html.FormatCurrency(Model.Key.Currency, payoutTotal.Value)</td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
</tr>
</table>
