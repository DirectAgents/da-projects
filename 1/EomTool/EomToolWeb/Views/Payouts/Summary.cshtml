@model PublisherSummaryViewModel
@{
    ViewBag.Title = "Publisher Summary";
}
<style type="text/css">
    #summaryOuter
    {
        position: absolute;
        height: 100%;
        width: 100%;
    }
    #summaryGridContainer
    {
        position: absolute;
        left: 0;
        width: 50%;
        height: 50%;
        overflow: auto;
    }
    #publisherReportContainer
    {
        border-left: 3px solid Black;
        position: absolute;
        top: 0;
        right: 0;
        height: 50%;
        width: 50%;
        overflow: auto;
    }
    #publisherDetailsContainer
    {
        border-top: 3px solid Black;
        position: absolute;
        bottom: 0;
        height: 50%;
        width: 100%;
        font-size: 11px;
        overflow: auto;
    }
    #tblSummary
    {
        width: 100%;
    }
</style>
<div id="summaryOuter">
    <div id="summaryGridContainer">
        @Html.ActionLink("Pending", "Summary", new { mode = "preapproval", includeZero = Model.IncludeZero }, new { @class = Model.Mode == "preapproval" ? "selected" : "notselected" })
        |
        @Html.ActionLink("ActionNeeded", "Summary", new { mode = (string)null, includeZero = Model.IncludeZero }, new { @class = string.IsNullOrWhiteSpace(Model.Mode) ? "selected" : "notselected" })
        |
        @Html.ActionLink("Held", "Summary", new { mode = "held", includeZero = Model.IncludeZero }, new { @class = Model.Mode == "held" ? "selected" : "notselected" })
        |
        @Html.ActionLink("Approved", "Summary", new { mode = "approved", includeZero = Model.IncludeZero }, new { @class = Model.Mode == "approved" ? "selected" : "notselected" })
        <div id="summaryGrid" style="width: 100%;">
            @Html.Partial("SummaryGrid", Model)
        </div>
    </div>
    <div id="publisherReportContainer">
        <div id="publisherReport" style="width: 100%;">
        </div>
    </div>
    <div id="publisherDetailsContainer">
        <div id="publisherDetails" style="width: 100%; height: 100%;">
        </div>
    </div>
</div>
<div id="divNotes" title="Add Notes">
    Enter Notes:
    <form id="frmNotes">
    <input id="dlgAction" type="hidden" value="" />
    <input id="dlgAffId" type="hidden" name="affid" value="" />
    <input id="dlgReleasing" type="hidden" name="releasing" value="false" />
    <textarea id="txtNote" style="width: 315px; height: 135px" name="note"></textarea>
    <span id="spnOptional">(Optional)</span> <span id="spnRequired" style="display: none">
        (Required)</span>
    </form>
</div>
<div id="divNotesSummary" title="Notes">
    <div id="divNotesSummaryInner">
    </div>
</div>
@section scripts {
    <script type="text/javascript">

        var grid = null;

        function ShowDetails(affid) {

            // Display loading icons
            var loadingHTML = '<img src="@Url.Content("~/Images/loading_lg.gif")" style="position: absolute; left: 50%; top: 50%" />';
            $('#publisherDetails').empty().html(loadingHTML);
            $('#publisherReport').empty().html(loadingHTML);

            // Remove current highlighted row
            $('#tblSummary tr').removeClass('highlighted');

            // Add new highlighted row
            $('#pub' + affid).addClass('highlighted');

            // Get the data to display inside the grid
            $.get('@Url.Action("DetailsJson", new { mode = Model.Mode, includeZero = Model.IncludeZero })&affid=' + affid + '&ts=' + new Date().getTime(), function (data) {

                // Define the grid columns
                var columns = [
                        { id: "campaign", name: "Campaign", field: "Campaign_Name", width: 300, cssClass: "cell-title", sortable: true }
                    , { id: "costperunit", name: "Cost/Unit", field: "Cost_Unit", width: 120, sortable: true }
                    , { id: "units", name: "Units", field: "Units", width: 120, sortable: true }
                    , { id: "pctmargin", name: "%Margin", field: "MarginPct", width: 120, sortable: true }
                    , { id: "netterms", name: "Terms", field: "Net_Terms", width: 120, sortable: true }
                    , { id: "paycurr", name: "Pay Curr", field: "Pub_Pay_Curr", width: 120, sortable: true }
                    , { id: "pubpayout", name: "Payout", field: "Pub_Payout", width: 120, sortable: true }
                    , { id: "cmpnstatus", name: "Campn Status", field: "Status", width: 120, sortable: true }
                    , { id: "acctgstatus", name: "Acctng Status", field: "Accounting_Status", width: 120, sortable: true }
                    , { id: "approval", name: "Approval", field: "Media_Buyer_Approval_Status", width: 120, sortable: true }
                ];

                // Define the grid options
                var options = {
                    enableCellNavigation: true,
                    enableColumnReorder: false,
                    autoHeight: false,
                    enableTextSelectionOnCells: true,
                    rowHeight: 19
                };

                // Create the grid
                grid = new Slick.Grid("#publisherDetails", data, columns, options);

                // Add sorting to the grid
                grid.onSort.subscribe(function (e, args) {
                    var field = args.sortCol.field;
                    data.sort(function (a, b) {
                        var result = a[field] > b[field] ? 1 : a[field] < b[field] ? -1 : 0;
                        return args.sortAsc ? result : -result;
                    });
                    grid.setData(data);
                    grid.updateRowCount();
                    grid.render();
                });
            });

            // Display the publisher report
            $.get('@Url.Action("PublisherReport", new { mode = Model.Mode })?affid=' + affid + '&ts=' + new Date().getTime(), function (publisherReportContent) {
                $('#publisherReport').empty().html(publisherReportContent);
            });
        }

        function ApprovePub(affid, releasing) {
            $('#dlgAction').val("Approve");
            $('#dlgAffId').val(affid);
            $('#dlgReleasing').val(releasing);
            var title = "Approve";
            if (releasing) title = "Release";
            $('#spnRequired').hide();
            $('#spnOptional').show();
            $('#divNotes').dialog("option", "title", title).dialog("open");
        }

        function HoldPub(affid) {
            $('#dlgAction').val("Hold");
            $('#dlgAffId').val(affid);
            $('#spnRequired').show();
            $('#spnOptional').hide();
            $('#divNotes').dialog("option", "title", "Hold").dialog("open");
        }

        function ApproveOrHold() {
            if ($('#spnRequired').is(":visible") && $.trim($('#txtNote').val()) == "") {
                alert("Please enter a note.");
                return;
            }
            var affid = $('#dlgAffId').val();
            var url;
            if ($('#dlgAction').val() == "Approve")
                url = '@Url.Action("Approve", "Publishers")';
            else
                url = '@Url.Action("Hold", "Publishers")';
            $.get(url, $('#frmNotes').serialize(), function (data) {
                $('#tdPubActions' + affid).html(data);
                $('#divNotes').dialog("close");
            });
        }

        function ShowNotes(batchids) {
            $.get('@Url.Action("ShowNotes", "Batches")', { batchids: batchids }, function (data) {
                $('#divNotesSummaryInner').html(data);
                $('#divNotesSummary').dialog("open");
            });
        }

        $(function () {
            $("#divNotes").dialog({
                autoOpen: false,
                height: 320,
                width: 350,
                modal: true,
                buttons: {
                    "OK": ApproveOrHold,
                    Cancel: function () {
                        $(this).dialog("close");
                    }
                },
                close: function () {
                    //allFields.val("").removeClass("ui-state-error");
                }
            });

            $("#divNotesSummary").dialog({
                autoOpen: false,
                height: 500,
                width: 400,
                modal: true
            });

            // Setup the horizontal resizing splitter
            $("#publisherDetailsContainer").resizable({
                stop: function (event, ui) {

                    // Resize the slick grid
                    var publisherDetailsContainerHeight = $("#publisherDetailsContainer").height();
                    $("#publisherDetails").height(publisherDetailsContainerHeight);
                    if (grid != null) grid.resizeCanvas();

                    // Resize the top panes
                    var summaryOuterHeight = $(window).height();
                    var topHeight = summaryOuterHeight - publisherDetailsContainerHeight;
                    $("#publisherReportContainer").height(topHeight);
                    $("#summaryGridContainer").height(topHeight);
                },
                handles: 'n'
            });
        });

    </script>
}
