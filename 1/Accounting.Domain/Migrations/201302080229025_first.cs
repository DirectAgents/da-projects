namespace Accounting.Domain.Migrations
{
    using System;
    using System.Data.Entity.Migrations;
    
    public partial class first : DbMigration
    {
        public override void Up()
        {
            CreateTable(
                "dbo.CompanyFiles",
                c => new
                    {
                        CompanyId = c.Int(nullable: false, identity: true),
                        CompanyName = c.String(nullable: false, maxLength: 255),
                    })
                .PrimaryKey(t => t.CompanyId);
            
            CreateTable(
                "dbo.Customers",
                c => new
                    {
                        CompanyId = c.Int(nullable: false),
                        ListID = c.String(nullable: false, maxLength: 36),
                        TimeCreated = c.DateTime(nullable: false),
                        TimeModified = c.DateTime(nullable: false),
                        EditSequence = c.String(nullable: false, maxLength: 16),
                        Name = c.String(nullable: false, maxLength: 41),
                        FullName = c.String(maxLength: 209),
                        IsActive = c.Boolean(nullable: false),
                        ParentRefListID = c.String(maxLength: 36),
                        ParentRefFullName = c.String(maxLength: 209),
                        Sublevel = c.Int(nullable: false),
                        CompanyName = c.String(maxLength: 41),
                        Salutation = c.String(maxLength: 15),
                        FirstName = c.String(maxLength: 25),
                        MiddleName = c.String(maxLength: 5),
                        LastName = c.String(maxLength: 25),
                        BillAddressAddr1 = c.String(maxLength: 41),
                        BillAddressAddr2 = c.String(maxLength: 41),
                        BillAddressAddr3 = c.String(maxLength: 41),
                        BillAddressAddr4 = c.String(maxLength: 41),
                        BillAddressAddr5 = c.String(maxLength: 41),
                        BillAddressCity = c.String(maxLength: 31),
                        BillAddressState = c.String(maxLength: 21),
                        BillAddressProvince = c.String(maxLength: 21),
                        BillAddressCounty = c.String(maxLength: 21),
                        BillAddressPostalCode = c.String(maxLength: 13),
                        BillAddressCountry = c.String(maxLength: 31),
                        BillAddressNote = c.String(maxLength: 41),
                        BillAddressBlockAddr1 = c.String(maxLength: 41),
                        BillAddressBlockAddr2 = c.String(maxLength: 41),
                        BillAddressBlockAddr3 = c.String(maxLength: 41),
                        BillAddressBlockAddr4 = c.String(maxLength: 41),
                        BillAddressBlockAddr5 = c.String(maxLength: 41),
                        ShipAddressAddr1 = c.String(maxLength: 41),
                        ShipAddressAddr2 = c.String(maxLength: 41),
                        ShipAddressAddr3 = c.String(maxLength: 41),
                        ShipAddressAddr4 = c.String(maxLength: 41),
                        ShipAddressAddr5 = c.String(maxLength: 41),
                        ShipAddressCity = c.String(maxLength: 31),
                        ShipAddressState = c.String(maxLength: 21),
                        ShipAddressProvince = c.String(maxLength: 21),
                        ShipAddressCounty = c.String(maxLength: 21),
                        ShipAddressPostalCode = c.String(maxLength: 13),
                        ShipAddressCountry = c.String(maxLength: 31),
                        ShipAddressNote = c.String(maxLength: 41),
                        ShipAddressBlockAddr1 = c.String(maxLength: 41),
                        ShipAddressBlockAddr2 = c.String(maxLength: 41),
                        ShipAddressBlockAddr3 = c.String(maxLength: 41),
                        ShipAddressBlockAddr4 = c.String(maxLength: 41),
                        ShipAddressBlockAddr5 = c.String(maxLength: 41),
                        Phone = c.String(maxLength: 21),
                        AltPhone = c.String(maxLength: 21),
                        Fax = c.String(maxLength: 21),
                        Email = c.String(maxLength: 1023),
                        Contact = c.String(maxLength: 41),
                        AltContact = c.String(maxLength: 41),
                        CustomerTypeRefListID = c.String(maxLength: 36),
                        CustomerTypeRefFullName = c.String(maxLength: 159),
                        TermsRefListID = c.String(maxLength: 36),
                        TermsRefFullName = c.String(maxLength: 31),
                        SalesRepRefListID = c.String(maxLength: 36),
                        SalesRepRefFullName = c.String(maxLength: 5),
                        Balance = c.Decimal(nullable: false, precision: 18, scale: 2),
                        TotalBalance = c.Decimal(nullable: false, precision: 18, scale: 2),
                        OpenBalance = c.Decimal(nullable: false, precision: 18, scale: 2),
                        OpenBalanceDate = c.DateTime(nullable: false),
                        SalesTaxCodeRefListID = c.String(maxLength: 36),
                        SalesTaxCodeRefFullName = c.String(maxLength: 3),
                        TaxCodeRefListID = c.String(maxLength: 36),
                        TaxCodeRefFullName = c.String(maxLength: 3),
                        ItemSalesTaxRefListID = c.String(maxLength: 36),
                        ItemSalesTaxRefFullName = c.String(maxLength: 31),
                        SalesTaxCountry = c.String(maxLength: 31),
                        ResaleNumber = c.String(maxLength: 15),
                        AccountNumber = c.String(maxLength: 99),
                        BusinessNumber = c.String(maxLength: 99),
                        CreditLimit = c.Decimal(nullable: false, precision: 18, scale: 2),
                        PreferredPaymentMethodRefListID = c.String(maxLength: 36),
                        PreferredPaymentMethodRefFullName = c.String(maxLength: 31),
                        CreditCardInfoCreditCardNumber = c.String(maxLength: 25),
                        CreditCardInfoExpirationMonth = c.Int(nullable: false),
                        CreditCardInfoExpirationYear = c.Int(nullable: false),
                        CreditCardInfoNameOnCard = c.String(maxLength: 41),
                        CreditCardInfoCreditCardAddress = c.String(maxLength: 41),
                        CreditCardInfoCreditCardPostalCode = c.String(maxLength: 41),
                        JobStatus = c.String(maxLength: 10),
                        JobStartDate = c.DateTime(nullable: false),
                        JobProjectedEndDate = c.DateTime(nullable: false),
                        JobEndDate = c.DateTime(nullable: false),
                        JobDesc = c.String(maxLength: 99),
                        JobTypeRefListID = c.String(maxLength: 36),
                        JobTypeRefFullName = c.String(maxLength: 159),
                        Notes = c.String(),
                        IsUsingCustomerTaxCode = c.Boolean(nullable: false),
                        PriceLevelRefListID = c.String(maxLength: 36),
                        PriceLevelRefFullName = c.String(maxLength: 31),
                        ExternalGUID = c.String(maxLength: 40),
                        TaxRegistrationNumber = c.String(maxLength: 30),
                        CurrencyRefListID = c.String(maxLength: 36),
                        CurrencyRefFullName = c.String(maxLength: 64),
                    })
                .PrimaryKey(t => new { t.CompanyId, t.ListID });
            
            CreateTable(
                "dbo.InvoiceLines",
                c => new
                    {
                        CompanyId = c.Int(nullable: false),
                        TxnID = c.String(maxLength: 36),
                        TimeCreated = c.DateTime(nullable: false),
                        TimeModified = c.DateTime(nullable: false),
                        EditSequence = c.String(nullable: false, maxLength: 16),
                        TxnNumber = c.Int(nullable: false),
                        CustomerRefListID = c.String(nullable: false, maxLength: 36),
                        CustomerRefFullName = c.String(nullable: false, maxLength: 209),
                        ClassRefListID = c.String(maxLength: 36),
                        ClassRefFullName = c.String(maxLength: 159),
                        ARAccountRefListID = c.String(maxLength: 36),
                        ARAccountRefFullName = c.String(maxLength: 159),
                        TemplateRefListID = c.String(maxLength: 36),
                        TemplateRefFullName = c.String(maxLength: 159),
                        TxnDate = c.DateTime(nullable: false),
                        TxnDateMacro = c.String(maxLength: 23),
                        RefNumber = c.String(maxLength: 11),
                        BillAddressAddr1 = c.String(maxLength: 41),
                        BillAddressAddr2 = c.String(maxLength: 41),
                        BillAddressAddr3 = c.String(maxLength: 41),
                        BillAddressAddr4 = c.String(maxLength: 41),
                        BillAddressAddr5 = c.String(maxLength: 41),
                        BillAddressCity = c.String(maxLength: 31),
                        BillAddressState = c.String(maxLength: 21),
                        BillAddressProvince = c.String(maxLength: 21),
                        BillAddressCounty = c.String(maxLength: 21),
                        BillAddressPostalCode = c.String(maxLength: 13),
                        BillAddressCountry = c.String(maxLength: 31),
                        BillAddressNote = c.String(maxLength: 41),
                        BillAddressBlockAddr1 = c.String(maxLength: 41),
                        BillAddressBlockAddr2 = c.String(maxLength: 41),
                        BillAddressBlockAddr3 = c.String(maxLength: 41),
                        BillAddressBlockAddr4 = c.String(maxLength: 41),
                        BillAddressBlockAddr5 = c.String(maxLength: 41),
                        ShipAddressAddr1 = c.String(maxLength: 41),
                        ShipAddressAddr2 = c.String(maxLength: 41),
                        ShipAddressAddr3 = c.String(maxLength: 41),
                        ShipAddressAddr4 = c.String(maxLength: 41),
                        ShipAddressAddr5 = c.String(maxLength: 41),
                        ShipAddressCity = c.String(maxLength: 31),
                        ShipAddressState = c.String(maxLength: 21),
                        ShipAddressProvince = c.String(maxLength: 21),
                        ShipAddressCounty = c.String(maxLength: 21),
                        ShipAddressPostalCode = c.String(maxLength: 13),
                        ShipAddressCountry = c.String(maxLength: 31),
                        ShipAddressNote = c.String(maxLength: 41),
                        ShipAddressBlockAddr1 = c.String(maxLength: 41),
                        ShipAddressBlockAddr2 = c.String(maxLength: 41),
                        ShipAddressBlockAddr3 = c.String(maxLength: 41),
                        ShipAddressBlockAddr4 = c.String(maxLength: 41),
                        ShipAddressBlockAddr5 = c.String(maxLength: 41),
                        IsPending = c.Boolean(nullable: false),
                        IsFinanceCharge = c.Boolean(nullable: false),
                        PONumber = c.String(maxLength: 25),
                        TermsRefListID = c.String(maxLength: 36),
                        TermsRefFullName = c.String(maxLength: 31),
                        DueDate = c.DateTime(nullable: false),
                        SalesRepRefListID = c.String(maxLength: 36),
                        SalesRepRefFullName = c.String(maxLength: 5),
                        FOB = c.String(maxLength: 13),
                        ShipDate = c.DateTime(nullable: false),
                        ShipMethodRefListID = c.String(maxLength: 36),
                        ShipMethodRefFullName = c.String(maxLength: 15),
                        Subtotal = c.Decimal(nullable: false, precision: 18, scale: 2),
                        ItemSalesTaxRefListID = c.String(maxLength: 36),
                        ItemSalesTaxRefFullName = c.String(maxLength: 31),
                        SalesTaxPercentage = c.Decimal(nullable: false, precision: 18, scale: 2),
                        SalesTaxTotal = c.Decimal(nullable: false, precision: 18, scale: 2),
                        AppliedAmount = c.Decimal(nullable: false, precision: 18, scale: 2),
                        BalanceRemaining = c.Decimal(nullable: false, precision: 18, scale: 2),
                        CurrencyRefListID = c.String(maxLength: 36),
                        CurrencyRefFullName = c.String(maxLength: 64),
                        ExchangeRate = c.Decimal(nullable: false, precision: 18, scale: 2),
                        BalanceRemainingInHomeCurrency = c.Decimal(nullable: false, precision: 18, scale: 2),
                        Memo = c.String(),
                        IsPaid = c.Boolean(nullable: false),
                        CustomerMsgRefListID = c.String(maxLength: 36),
                        CustomerMsgRefFullName = c.String(maxLength: 101),
                        IsToBePrinted = c.Boolean(nullable: false),
                        IsToBeEmailed = c.Boolean(nullable: false),
                        IsTaxIncluded = c.Boolean(nullable: false),
                        CustomerSalesTaxCodeRefListID = c.String(maxLength: 36),
                        CustomerSalesTaxCodeRefFullName = c.String(maxLength: 3),
                        CustomerTaxCodeRefListID = c.String(maxLength: 36),
                        SuggestedDiscountAmount = c.Decimal(nullable: false, precision: 18, scale: 2),
                        SuggestedDiscountDate = c.DateTime(nullable: false),
                        CustomFieldOther = c.String(maxLength: 29),
                        LinkToTxnID1 = c.String(maxLength: 36),
                        InvoiceLineType = c.String(maxLength: 11),
                        InvoiceLineSeqNo = c.Int(nullable: false),
                        InvoiceLineGroupTxnLineID = c.String(maxLength: 36),
                        InvoiceLineGroupItemGroupRefListID = c.String(maxLength: 36),
                        InvoiceLineGroupItemGroupRefFullName = c.String(maxLength: 31),
                        InvoiceLineGroupDesc = c.String(),
                        InvoiceLineGroupQuantity = c.Decimal(nullable: false, precision: 18, scale: 2),
                        InvoiceLineGroupUnitOfMeasure = c.String(maxLength: 31),
                        InvoiceLineGroupOverrideUOMSetRefListID = c.String(maxLength: 36),
                        InvoiceLineGroupOverrideUOMSetRefFullName = c.String(maxLength: 31),
                        InvoiceLineGroupIsPrintItemsInGroup = c.Boolean(nullable: false),
                        InvoiceLineGroupTotalAmount = c.Decimal(nullable: false, precision: 18, scale: 2),
                        InvoiceLineGroupServiceDate = c.DateTime(nullable: false),
                        InvoiceLineGroupSeqNo = c.Int(nullable: false),
                        InvoiceLineTxnLineID = c.String(maxLength: 36),
                        InvoiceLineItemRefListID = c.String(maxLength: 36),
                        InvoiceLineItemRefFullName = c.String(maxLength: 159),
                        InvoiceLineDesc = c.String(),
                        InvoiceLineQuantity = c.Decimal(nullable: false, precision: 18, scale: 2),
                        InvoiceLineUnitOfMeasure = c.String(maxLength: 31),
                        InvoiceLineOverrideUOMSetRefListID = c.String(maxLength: 36),
                        InvoiceLineOverrideUOMSetRefFullName = c.String(maxLength: 31),
                        InvoiceLineRate = c.Decimal(nullable: false, precision: 18, scale: 2),
                        InvoiceLineRatePercent = c.Decimal(nullable: false, precision: 18, scale: 2),
                        InvoiceLinePriceLevelRefListID = c.String(maxLength: 36),
                        InvoiceLinePriceLevelRefFullName = c.String(maxLength: 159),
                        InvoiceLineClassRefListID = c.String(maxLength: 36),
                        InvoiceLineClassRefFullName = c.String(maxLength: 159),
                        InvoiceLineAmount = c.Decimal(nullable: false, precision: 18, scale: 2),
                        InvoiceLineTaxAmount = c.Decimal(nullable: false, precision: 18, scale: 2),
                        InvoiceLineServiceDate = c.DateTime(nullable: false),
                        InvoiceLineSalesTaxCodeRefListID = c.String(maxLength: 36),
                        InvoiceLineSalesTaxCodeRefFullName = c.String(maxLength: 3),
                        InvoiceLineTaxCodeRefListID = c.String(maxLength: 36),
                        InvoiceLineTaxCodeRefFullName = c.String(maxLength: 3),
                        InvoiceLineOverrideItemAccountRefListID = c.String(maxLength: 36),
                        InvoiceLineOverrideItemAccountRefFullName = c.String(maxLength: 159),
                        CustomFieldInvoiceLineOther1 = c.String(maxLength: 29),
                        CustomFieldInvoiceLineOther2 = c.String(maxLength: 29),
                        InvoiceLineLinkToTxnTxnID = c.String(maxLength: 36),
                        InvoiceLineLinkToTxnTxnLineID = c.String(maxLength: 36),
                        Tax1Total = c.Decimal(nullable: false, precision: 18, scale: 2),
                        Tax2Total = c.Decimal(nullable: false, precision: 18, scale: 2),
                        AmountIncludesVAT = c.Boolean(nullable: false),
                        FQSaveToCache = c.Boolean(nullable: false),
                        FQPrimaryKey = c.String(nullable: false, maxLength: 110),
                        FQTxnLinkKey = c.String(maxLength: 110),
                    })
                .PrimaryKey(t => t.CompanyId)
                .ForeignKey("dbo.Customers", t => new { t.CompanyId, t.CustomerRefListID }, cascadeDelete: true)
                .Index(t => new { t.CompanyId, t.CustomerRefListID });
            
        }
        
        public override void Down()
        {
            DropIndex("dbo.InvoiceLines", new[] { "CompanyId", "CustomerRefListID" });
            DropForeignKey("dbo.InvoiceLines", new[] { "CompanyId", "CustomerRefListID" }, "dbo.Customers");
            DropTable("dbo.InvoiceLines");
            DropTable("dbo.Customers");
            DropTable("dbo.CompanyFiles");
        }
    }
}
