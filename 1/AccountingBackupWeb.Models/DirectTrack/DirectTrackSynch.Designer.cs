//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("DirectTrackModel", "EntityTypeEntity", "EntityType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AccountingBackupWeb.Models.DirectTrack.EntityType), "Entity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingBackupWeb.Models.DirectTrack.Entity))]
[assembly: EdmRelationshipAttribute("DirectTrackModel", "ApiLoginDirectTrack", "ApiLogin", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AccountingBackupWeb.Models.DirectTrack.ApiLogin), "DirectTrack", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingBackupWeb.Models.DirectTrack.DirectTrack))]
[assembly: EdmRelationshipAttribute("DirectTrackModel", "EntityCampaign", "Entity", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AccountingBackupWeb.Models.DirectTrack.Entity), "Campaign", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingBackupWeb.Models.DirectTrack.Campaign))]
[assembly: EdmRelationshipAttribute("DirectTrackModel", "EntitySynchTask", "Entity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingBackupWeb.Models.DirectTrack.Entity), "SynchTask", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingBackupWeb.Models.DirectTrack.SynchTask))]
[assembly: EdmRelationshipAttribute("DirectTrackModel", "SynchTaskTypeSynchTask", "SynchTaskType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AccountingBackupWeb.Models.DirectTrack.SynchTaskType), "SynchTask", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingBackupWeb.Models.DirectTrack.SynchTask))]
[assembly: EdmRelationshipAttribute("DirectTrackModel", "SynchTaskSynchTaskParameter", "SynchTask", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AccountingBackupWeb.Models.DirectTrack.SynchTask), "SynchTaskParameter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingBackupWeb.Models.DirectTrack.SynchTaskParameter))]
[assembly: EdmRelationshipAttribute("DirectTrackModel", "SynchTaskSynchTask", "SynchTask", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingBackupWeb.Models.DirectTrack.SynchTask), "SynchTask1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingBackupWeb.Models.DirectTrack.SynchTask))]

#endregion

namespace AccountingBackupWeb.Models.DirectTrack
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DirectTrackSynchContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DirectTrackSynchContainer object using the connection string found in the 'DirectTrackSynchContainer' section of the application configuration file.
        /// </summary>
        public DirectTrackSynchContainer() : base("name=DirectTrackSynchContainer", "DirectTrackSynchContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DirectTrackSynchContainer object.
        /// </summary>
        public DirectTrackSynchContainer(string connectionString) : base(connectionString, "DirectTrackSynchContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DirectTrackSynchContainer object.
        /// </summary>
        public DirectTrackSynchContainer(EntityConnection connection) : base(connection, "DirectTrackSynchContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Entity> Entities
        {
            get
            {
                if ((_Entities == null))
                {
                    _Entities = base.CreateObjectSet<Entity>("Entities");
                }
                return _Entities;
            }
        }
        private ObjectSet<Entity> _Entities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EntityType> EntityTypes
        {
            get
            {
                if ((_EntityTypes == null))
                {
                    _EntityTypes = base.CreateObjectSet<EntityType>("EntityTypes");
                }
                return _EntityTypes;
            }
        }
        private ObjectSet<EntityType> _EntityTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DirectTrack> DirectTracks
        {
            get
            {
                if ((_DirectTracks == null))
                {
                    _DirectTracks = base.CreateObjectSet<DirectTrack>("DirectTracks");
                }
                return _DirectTracks;
            }
        }
        private ObjectSet<DirectTrack> _DirectTracks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ApiLogin> ApiLogins
        {
            get
            {
                if ((_ApiLogins == null))
                {
                    _ApiLogins = base.CreateObjectSet<ApiLogin>("ApiLogins");
                }
                return _ApiLogins;
            }
        }
        private ObjectSet<ApiLogin> _ApiLogins;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Campaign> Campaigns
        {
            get
            {
                if ((_Campaigns == null))
                {
                    _Campaigns = base.CreateObjectSet<Campaign>("Campaigns");
                }
                return _Campaigns;
            }
        }
        private ObjectSet<Campaign> _Campaigns;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SynchTask> SynchTasks
        {
            get
            {
                if ((_SynchTasks == null))
                {
                    _SynchTasks = base.CreateObjectSet<SynchTask>("SynchTasks");
                }
                return _SynchTasks;
            }
        }
        private ObjectSet<SynchTask> _SynchTasks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SynchTaskType> SynchTaskTypes
        {
            get
            {
                if ((_SynchTaskTypes == null))
                {
                    _SynchTaskTypes = base.CreateObjectSet<SynchTaskType>("SynchTaskTypes");
                }
                return _SynchTaskTypes;
            }
        }
        private ObjectSet<SynchTaskType> _SynchTaskTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SynchTaskParameter> SynchTaskParameters
        {
            get
            {
                if ((_SynchTaskParameters == null))
                {
                    _SynchTaskParameters = base.CreateObjectSet<SynchTaskParameter>("SynchTaskParameters");
                }
                return _SynchTaskParameters;
            }
        }
        private ObjectSet<SynchTaskParameter> _SynchTaskParameters;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Entities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEntities(Entity entity)
        {
            base.AddObject("Entities", entity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EntityTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEntityTypes(EntityType entityType)
        {
            base.AddObject("EntityTypes", entityType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DirectTracks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDirectTracks(DirectTrack directTrack)
        {
            base.AddObject("DirectTracks", directTrack);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ApiLogins EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApiLogins(ApiLogin apiLogin)
        {
            base.AddObject("ApiLogins", apiLogin);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Campaigns EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCampaigns(Campaign campaign)
        {
            base.AddObject("Campaigns", campaign);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SynchTasks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSynchTasks(SynchTask synchTask)
        {
            base.AddObject("SynchTasks", synchTask);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SynchTaskTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSynchTaskTypes(SynchTaskType synchTaskType)
        {
            base.AddObject("SynchTaskTypes", synchTaskType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SynchTaskParameters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSynchTaskParameters(SynchTaskParameter synchTaskParameter)
        {
            base.AddObject("SynchTaskParameters", synchTaskParameter);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectTrackModel", Name="ApiLogin")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ApiLogin : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ApiLogin object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="clientId">Initial value of the ClientId property.</param>
        public static ApiLogin CreateApiLogin(global::System.Int32 id, global::System.String userName, global::System.String password, global::System.String clientId)
        {
            ApiLogin apiLogin = new ApiLogin();
            apiLogin.Id = id;
            apiLogin.UserName = userName;
            apiLogin.Password = password;
            apiLogin.ClientId = clientId;
            return apiLogin;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                OnClientIdChanging(value);
                ReportPropertyChanging("ClientId");
                _ClientId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ClientId");
                OnClientIdChanged();
            }
        }
        private global::System.String _ClientId;
        partial void OnClientIdChanging(global::System.String value);
        partial void OnClientIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectTrackModel", "ApiLoginDirectTrack", "DirectTrack")]
        public EntityCollection<DirectTrack> DirectTracks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DirectTrack>("DirectTrackModel.ApiLoginDirectTrack", "DirectTrack");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DirectTrack>("DirectTrackModel.ApiLoginDirectTrack", "DirectTrack", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectTrackModel", Name="Campaign")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Campaign : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Campaign object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="pid">Initial value of the Pid property.</param>
        public static Campaign CreateCampaign(global::System.Int32 id, global::System.String name, global::System.String pid)
        {
            Campaign campaign = new Campaign();
            campaign.Id = id;
            campaign.Name = name;
            campaign.Pid = pid;
            return campaign;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Pid
        {
            get
            {
                return _Pid;
            }
            set
            {
                OnPidChanging(value);
                ReportPropertyChanging("Pid");
                _Pid = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Pid");
                OnPidChanged();
            }
        }
        private global::System.String _Pid;
        partial void OnPidChanging(global::System.String value);
        partial void OnPidChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectTrackModel", "EntityCampaign", "Entity")]
        public Entity Entity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entity>("DirectTrackModel.EntityCampaign", "Entity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entity>("DirectTrackModel.EntityCampaign", "Entity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Entity> EntityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entity>("DirectTrackModel.EntityCampaign", "Entity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Entity>("DirectTrackModel.EntityCampaign", "Entity", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectTrackModel", Name="DirectTrack")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DirectTrack : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DirectTrack object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="url">Initial value of the Url property.</param>
        /// <param name="apiUrl">Initial value of the ApiUrl property.</param>
        public static DirectTrack CreateDirectTrack(global::System.Int32 id, global::System.String url, global::System.String apiUrl)
        {
            DirectTrack directTrack = new DirectTrack();
            directTrack.Id = id;
            directTrack.Url = url;
            directTrack.ApiUrl = apiUrl;
            return directTrack;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApiUrl
        {
            get
            {
                return _ApiUrl;
            }
            set
            {
                OnApiUrlChanging(value);
                ReportPropertyChanging("ApiUrl");
                _ApiUrl = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ApiUrl");
                OnApiUrlChanged();
            }
        }
        private global::System.String _ApiUrl;
        partial void OnApiUrlChanging(global::System.String value);
        partial void OnApiUrlChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectTrackModel", "ApiLoginDirectTrack", "ApiLogin")]
        public ApiLogin ApiLogin
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApiLogin>("DirectTrackModel.ApiLoginDirectTrack", "ApiLogin").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApiLogin>("DirectTrackModel.ApiLoginDirectTrack", "ApiLogin").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ApiLogin> ApiLoginReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApiLogin>("DirectTrackModel.ApiLoginDirectTrack", "ApiLogin");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ApiLogin>("DirectTrackModel.ApiLoginDirectTrack", "ApiLogin", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectTrackModel", Name="Entity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Entity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Entity object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="key">Initial value of the Key property.</param>
        /// <param name="content">Initial value of the Content property.</param>
        public static Entity CreateEntity(global::System.Int32 id, global::System.String key, global::System.String content)
        {
            Entity entity = new Entity();
            entity.Id = id;
            entity.Key = key;
            entity.Content = content;
            return entity;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Pulled
        {
            get
            {
                return _Pulled;
            }
            set
            {
                OnPulledChanging(value);
                ReportPropertyChanging("Pulled");
                _Pulled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Pulled");
                OnPulledChanged();
            }
        }
        private Nullable<global::System.DateTime> _Pulled;
        partial void OnPulledChanging(Nullable<global::System.DateTime> value);
        partial void OnPulledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Pushed
        {
            get
            {
                return _Pushed;
            }
            set
            {
                OnPushedChanging(value);
                ReportPropertyChanging("Pushed");
                _Pushed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Pushed");
                OnPushedChanged();
            }
        }
        private Nullable<global::System.DateTime> _Pushed;
        partial void OnPushedChanging(Nullable<global::System.DateTime> value);
        partial void OnPushedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private Nullable<global::System.DateTime> _Modified;
        partial void OnModifiedChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Key
        {
            get
            {
                return _Key;
            }
            set
            {
                OnKeyChanging(value);
                ReportPropertyChanging("Key");
                _Key = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Key");
                OnKeyChanged();
            }
        }
        private global::System.String _Key;
        partial void OnKeyChanging(global::System.String value);
        partial void OnKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.String _Content;
        partial void OnContentChanging(global::System.String value);
        partial void OnContentChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectTrackModel", "EntityTypeEntity", "EntityType")]
        public EntityType EntityType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntityType>("DirectTrackModel.EntityTypeEntity", "EntityType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntityType>("DirectTrackModel.EntityTypeEntity", "EntityType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EntityType> EntityTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntityType>("DirectTrackModel.EntityTypeEntity", "EntityType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EntityType>("DirectTrackModel.EntityTypeEntity", "EntityType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectTrackModel", "EntityCampaign", "Campaign")]
        public EntityCollection<Campaign> Campaigns
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Campaign>("DirectTrackModel.EntityCampaign", "Campaign");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Campaign>("DirectTrackModel.EntityCampaign", "Campaign", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectTrackModel", "EntitySynchTask", "SynchTask")]
        public EntityCollection<SynchTask> SynchTasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SynchTask>("DirectTrackModel.EntitySynchTask", "SynchTask");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SynchTask>("DirectTrackModel.EntitySynchTask", "SynchTask", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectTrackModel", Name="EntityType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EntityType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EntityType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static EntityType CreateEntityType(global::System.Int32 id, global::System.String name)
        {
            EntityType entityType = new EntityType();
            entityType.Id = id;
            entityType.Name = name;
            return entityType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectTrackModel", "EntityTypeEntity", "Entity")]
        public EntityCollection<Entity> Entities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Entity>("DirectTrackModel.EntityTypeEntity", "Entity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Entity>("DirectTrackModel.EntityTypeEntity", "Entity", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectTrackModel", Name="SynchTask")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SynchTask : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SynchTask object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="added">Initial value of the Added property.</param>
        public static SynchTask CreateSynchTask(global::System.Int32 id, global::System.DateTime added)
        {
            SynchTask synchTask = new SynchTask();
            synchTask.Id = id;
            synchTask.Added = added;
            return synchTask;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Started
        {
            get
            {
                return _Started;
            }
            set
            {
                OnStartedChanging(value);
                ReportPropertyChanging("Started");
                _Started = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Started");
                OnStartedChanged();
            }
        }
        private Nullable<global::System.DateTime> _Started;
        partial void OnStartedChanging(Nullable<global::System.DateTime> value);
        partial void OnStartedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Stopped
        {
            get
            {
                return _Stopped;
            }
            set
            {
                OnStoppedChanging(value);
                ReportPropertyChanging("Stopped");
                _Stopped = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Stopped");
                OnStoppedChanged();
            }
        }
        private Nullable<global::System.DateTime> _Stopped;
        partial void OnStoppedChanging(Nullable<global::System.DateTime> value);
        partial void OnStoppedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Error
        {
            get
            {
                return _Error;
            }
            set
            {
                OnErrorChanging(value);
                ReportPropertyChanging("Error");
                _Error = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Error");
                OnErrorChanged();
            }
        }
        private global::System.String _Error;
        partial void OnErrorChanging(global::System.String value);
        partial void OnErrorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Added
        {
            get
            {
                return _Added;
            }
            set
            {
                OnAddedChanging(value);
                ReportPropertyChanging("Added");
                _Added = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Added");
                OnAddedChanged();
            }
        }
        private global::System.DateTime _Added;
        partial void OnAddedChanging(global::System.DateTime value);
        partial void OnAddedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectTrackModel", "EntitySynchTask", "Entity")]
        public Entity Entity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entity>("DirectTrackModel.EntitySynchTask", "Entity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entity>("DirectTrackModel.EntitySynchTask", "Entity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Entity> EntityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entity>("DirectTrackModel.EntitySynchTask", "Entity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Entity>("DirectTrackModel.EntitySynchTask", "Entity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectTrackModel", "SynchTaskTypeSynchTask", "SynchTaskType")]
        public SynchTaskType SynchTaskType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SynchTaskType>("DirectTrackModel.SynchTaskTypeSynchTask", "SynchTaskType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SynchTaskType>("DirectTrackModel.SynchTaskTypeSynchTask", "SynchTaskType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SynchTaskType> SynchTaskTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SynchTaskType>("DirectTrackModel.SynchTaskTypeSynchTask", "SynchTaskType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SynchTaskType>("DirectTrackModel.SynchTaskTypeSynchTask", "SynchTaskType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectTrackModel", "SynchTaskSynchTaskParameter", "SynchTaskParameter")]
        public EntityCollection<SynchTaskParameter> SynchTaskParameters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SynchTaskParameter>("DirectTrackModel.SynchTaskSynchTaskParameter", "SynchTaskParameter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SynchTaskParameter>("DirectTrackModel.SynchTaskSynchTaskParameter", "SynchTaskParameter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectTrackModel", "SynchTaskSynchTask", "SynchTask1")]
        public EntityCollection<SynchTask> Parents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SynchTask>("DirectTrackModel.SynchTaskSynchTask", "SynchTask1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SynchTask>("DirectTrackModel.SynchTaskSynchTask", "SynchTask1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectTrackModel", "SynchTaskSynchTask", "SynchTask")]
        public EntityCollection<SynchTask> Children
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SynchTask>("DirectTrackModel.SynchTaskSynchTask", "SynchTask");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SynchTask>("DirectTrackModel.SynchTaskSynchTask", "SynchTask", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectTrackModel", Name="SynchTaskParameter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SynchTaskParameter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SynchTaskParameter object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static SynchTaskParameter CreateSynchTaskParameter(global::System.Int32 id, global::System.String name, global::System.String value)
        {
            SynchTaskParameter synchTaskParameter = new SynchTaskParameter();
            synchTaskParameter.Id = id;
            synchTaskParameter.Name = name;
            synchTaskParameter.Value = value;
            return synchTaskParameter;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectTrackModel", "SynchTaskSynchTaskParameter", "SynchTask")]
        public SynchTask SynchTask
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SynchTask>("DirectTrackModel.SynchTaskSynchTaskParameter", "SynchTask").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SynchTask>("DirectTrackModel.SynchTaskSynchTaskParameter", "SynchTask").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SynchTask> SynchTaskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SynchTask>("DirectTrackModel.SynchTaskSynchTaskParameter", "SynchTask");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SynchTask>("DirectTrackModel.SynchTaskSynchTaskParameter", "SynchTask", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DirectTrackModel", Name="SynchTaskType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SynchTaskType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SynchTaskType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static SynchTaskType CreateSynchTaskType(global::System.Int32 id, global::System.String name, global::System.String description)
        {
            SynchTaskType synchTaskType = new SynchTaskType();
            synchTaskType.Id = id;
            synchTaskType.Name = name;
            synchTaskType.Description = description;
            return synchTaskType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DirectTrackModel", "SynchTaskTypeSynchTask", "SynchTask")]
        public EntityCollection<SynchTask> SynchTasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SynchTask>("DirectTrackModel.SynchTaskTypeSynchTask", "SynchTask");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SynchTask>("DirectTrackModel.SynchTaskTypeSynchTask", "SynchTask", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
